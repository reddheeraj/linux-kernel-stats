commit 102f9d3d455870844c47b82322c2dfc0a35eb745
Merge: 8715c6d3100f 8ec2d95f50c0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 13 11:27:26 2022 -0800

    Merge tag 'sound-6.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "This looks like a relatively calm development cycle; there have been
      only few changes in ALSA and ASoC core sides while we get lots of
      device-specific fixes and updates as usual. Most of commits are about
      ASoC, including Intel SOF/AVS and many device tree updates.
    
      Below are some highlights:
    
      Core:
       - Improvement in memalloc helper for fallback allocations
       - More cleanups of ASoC DAPM code
    
      ASoC:
       - Factoring out of mapping hw_params onto SoundWire configuration
       - The ever ongoing overhauls of the Intel DSP code continue,
         including support for loading libraries and probes with IPC4 on
         SOF.
       - Support for more sample formats on JZ4740
       - Lots of device tree conversions and fixups
       - Support for Allwinner D1, a range of AMD and Intel systems,
         Mediatek systems with multiple DMICs, Nuvoton NAU8318, NXP
         fsl_rpmsg and i.MX93, Qualcomm AudioReach Enable, MFC and SAL,
         RealTek RT1318 and Rockchip RK3588
    
      ALSA:
       - Addition of PCM kselftest; still minimalistic but can be extended
         in future
       - Fixes for corner-case XRUNs with USB-audio implicit feedback mode
       - Usual device-specific quirk updates for USB- and HD-audio
       - FireWire DICE updates
    
      This also contains a few cross-tree updates:
       - Some OMAP board file updates for removal of relevant OMAP platforms
       - A new I2C API update for I2C probe API adaption
       - A DRM update for the further hdmi-codec updates"
    
    * tag 'sound-6.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (417 commits)
      ALSA: mts64: fix possible null-ptr-defer in snd_mts64_interrupt
      ALSA: patch_realtek: Fix Dell Inspiron Plus 16
      ALSA: hda/cirrus: Add extra 10 ms delay to allow PLL settle and lock.
      ASoC: dt-bindings: Correct Alexandre Belloni email
      ASoC: dt-bindings: maxim,max98504: Convert to DT schema
      ASoC: dt-bindings: maxim,max98357a: Convert to DT schema
      ASoC: dt-bindings: Reference common DAI properties
      ASoC: dt-bindings: Extend name-prefix.yaml into common DAI properties
      ASoC: rt715: Make read-only arrays capture_reg_H and capture_reg_L static const
      ASoC: uniphier: aio-core: Make some read-only arrays static const
      ASoC: wcd938x: Make read-only array minCode_param static const
      ASoC: qcom: lpass-sc7280: Add maybe_unused tag for system PM ops
      ASoC : SOF: amd: Add support for IPC and DSP dumps
      ASoC: SOF: amd: Use poll function instead to read ACP_SHA_DSP_FW_QUALIFIER
      ALSA: usb-audio: Workaround for XRUN at prepare
      ALSA: pcm: Handle XRUN at trigger START
      ALSA: pcm: Set missing stop_operating flag at undoing trigger start
      drm: tda99x: Don't advertise non-existent capture support
      ASoC: hdmi-codec: Allow playback and capture to be disabled
      kselftest/alsa: Add more coverage of sample rates and channel counts
      ...

commit a1e9185d20b56af04022d2e656802254f4ea47eb
Merge: c290db013742 b47068b4aa53
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Dec 2 15:40:35 2022 -0800

    Merge tag 'sound-6.1-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Likely the last piece for 6.1; the only significant fixes are ASoC
      core ops fixes, while others are device-specific (rather minor) fixes
      in ASoC and FireWire drivers.
    
      All appear safe enough to take as a late stage material"
    
    * tag 'sound-6.1-rc8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: dice: fix regression for Lexicon I-ONIX FW810S
      ASoC: cs42l51: Correct PGA Volume minimum value
      ASoC: ops: Correct bounds check for second channel on SX controls
      ASoC: tlv320adc3xxx: Fix build error for implicit function declaration
      ASoC: ops: Check bounds for second channel in snd_soc_put_volsw_sx()
      ASoC: ops: Fix bounds check for _sx controls
      ASoC: fsl_micfil: explicitly clear CHnF flags
      ASoC: fsl_micfil: explicitly clear software reset bit

commit ddfe80311b81a83d3fde7e59fddc6aa822a5188d
Merge: de5c208d533a 627ce0d68eb4
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 23 08:44:00 2022 -0500

    Merge tag 'sound-5.19-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "All small changes, mostly device-specific:
    
       - A regression fix for PCM WC-page allocation on x86
    
       - A regression fix for i915 audio component binding
    
       - Fixes for (longstanding) beep handling bug
    
       - Runtime PM fixes for Intel LPE HDMI audio
    
       - A couple of pending FireWire fixes
    
       - Usual HD-audio and USB-audio quirks, new Intel dspconf entries"
    
    * tag 'sound-5.19-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda/realtek: Add quirk for Clevo NS50PU
      ALSA: hda: Fix discovery of i915 graphics PCI device
      ALSA: hda/via: Fix missing beep setup
      ALSA: hda/conexant: Fix missing beep setup
      ALSA: memalloc: Drop x86-specific hack for WC allocations
      ALSA: hda/realtek: Add quirk for Clevo PD70PNT
      ALSA: x86: intel_hdmi_audio: use pm_runtime_resume_and_get()
      ALSA: x86: intel_hdmi_audio: enable pm_runtime and set autosuspend delay
      ALSA: hda: intel-nhlt: remove use of __func__ in dev_dbg
      ALSA: hda: intel-dspcfg: use SOF for UpExtreme and UpExtreme11 boards
      firewire: convert sysfs sprintf/snprintf family to sysfs_emit
      firewire: cdev: fix potential leak of kernel stack due to uninitialized value
      ALSA: hda/realtek: Apply fixup for Lenovo Yoga Duet 7 properly
      ALSA: hda/realtek - ALC897 headset MIC no sound
      ALSA: usb-audio: US16x08: Move overflow check before array access
      ALSA: hda/realtek: Add mute LED quirk for HP Omen laptop

commit 379c72654524d97081f8810a0e4284a16f78a25e
Merge: 2e3afb42dd48 ac02e3cd5ab9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun May 8 10:10:51 2022 -0700

    Merge tag 'sound-5.18-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "This became slightly larger as I've been off in the last weeks.
    
      The majority of changes here is about ASoC, fixes for dmaengine
      and for addressing issues reported by CI, as well as other
      device-specific small fixes.
    
      Also, fixes for FireWire core stack and the usual HD-audio quirks
      are included"
    
    * tag 'sound-5.18-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (23 commits)
      ASoC: SOF: Fix NULL pointer exception in sof_pci_probe callback
      ASoC: ops: Validate input values in snd_soc_put_volsw_range()
      ASoC: dmaengine: Restore NULL prepare_slave_config() callback
      ASoC: atmel: mchp-pdmc: set prepare_slave_config
      ASoC: max98090: Generate notifications on changes for custom control
      ASoC: max98090: Reject invalid values in custom control put()
      ALSA: fireworks: fix wrong return count shorter than expected by 4 bytes
      ALSA: hda/realtek: Add quirk for Yoga Duet 7 13ITL6 speakers
      firewire: core: extend card->lock in fw_core_handle_bus_reset
      firewire: remove check of list iterator against head past the loop body
      firewire: fix potential uaf in outbound_phy_packet_callback()
      ASoC: rt9120: Correct the reg 0x09 size to one byte
      ALSA: hda/realtek: Enable mute/micmute LEDs support for HP Laptops
      ALSA: hda/realtek: Fix mute led issue on thinkpad with cs35l41 s-codec
      ASoC: meson: axg-card: Fix nonatomic links
      ASoC: meson: axg-tdm-interface: Fix formatters in trigger"
      ASoC: soc-ops: fix error handling
      ASoC: meson: Fix event generation for G12A tohdmi mux
      ASoC: meson: Fix event generation for AUI CODEC mux
      ASoC: meson: Fix event generation for AUI ACODEC mux
      ...

commit b4b7f2a65ced7ee28d9516d6a362ee6fb72fbb66
Merge: 5f5d8890789c a7ecbe92b924
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 25 08:01:17 2022 +0200

    Merge branch 'topic/firewire' into for-linus
    
    Pull FireWire fixes
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit b2405aa948b95afc5246fa56fc05c3512cd6185c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Apr 5 16:22:21 2022 +0900

    firewire: add kernel API to access packet structure in request structure for AR context
    
    In 1394 OHCI specification, descriptor of Asynchronous Receive DMA context
    has timeStamp field in its trailer quadlet. The field is written by
    the host controller for the time to receive asynchronous request
    subaction in isochronous cycle time.
    
    In Linux FireWire subsystem, the value of field is stored to fw_packet
    structure and copied to fw_request structure as the part. The fw_request
    structure is hidden from unit driver and passed as opaque pointer when
    calling registered handler. It's inconvenient to the unit driver which
    needs timestamp of packet.
    
    This commit adds kernel API to pick up timestamp from opaque pointer to
    fw_request structure.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20220405072221.226217-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit baa914cd81f51f4e4f3bae5bb59764b32ad8c353
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Apr 5 16:22:20 2022 +0900

    firewire: add kernel API to access CYCLE_TIME register
    
    1394 OHCI specification defined Isochronous Cycle Timer Register to get
    value of CYCLE_TIME register defined by IEEE 1394 for CSR architecture
    defined by ISO/IEC 13213. Unit driver can calculate packet time by
    compute with the value of CYCLE_TIME and timeStamp field in descriptor
    of each isochronous and asynchronous context. The resolution of CYCLE_TIME
    is 49.576 MHz, while the one of timeStamp is 8,000 Hz.
    
    Current implementation of Linux FireWire subsystem allows the driver to
    get the value of CYCLE_TIMER CSR register by transaction service. The
    transaction service has overhead in regard of access to MMIO register.
    
    This commit adds kernel API for unit driver to access the register
    directly.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20220405072221.226217-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit e70b6693cec229717dda683699ae1fd9ed160e3d
Author: Hector Martin <marcan@marcan.st>
Date:   Tue Apr 5 16:22:19 2022 +0900

    firewire: Add dummy read_csr/write_csr functions
    
    (Hector Martin wrote)
    This fixes segfaults when a card gets yanked off of the PCIe bus while
    busy, e.g. with a userspace app trying to get the cycle time:
    
    [8638860.994310] Call Trace:
    [8638860.994313]  ioctl_get_cycle_timer2+0x4f/0xd0 [firewire_core]
    [8638860.994323]  fw_device_op_ioctl+0xae/0x150 [firewire_core]
    [8638860.994328]  __x64_sys_ioctl+0x7d/0xb0
    [8638860.994332]  do_syscall_64+0x45/0x80
    [8638860.994337]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    (Takashi Sakamoto wrote)
    As long as reading commit 20802224298c ("firewire: core: add forgotten
    dummy driver methods, remove unused ones"), three functions are not
    implemeted in dummy driver for reason; .read_csr, .write_csr, and
    .set_config_rom.
    
    In core of Linux FireWire subsystem, the callback of .set_config_rom is
    under acquisition of mutual exclusive for local list of card. The
    acquision is also done in process for removal of card, therefore it's
    safe for missing implementation of .set_config_rom.
    
    On the other hand, no lock primitive accompanies any call of .read_csr and
    .write_csr. For userspace client, check of node shutdown is done in the
    beginning of dispatch of ioctl request, while node shifts to shutdown
    state in workqueue context enough after card shifts to dummy driver. It's
    probable that these two functions are called for the dummy driver by the
    code of userspace client. In-kernel unit driver has similar situation.
    It's better to add implementation of the two functions for dummy driver.
    
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20220405072221.226217-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit d7700ca98d7a03eda24489a0eedaefda1a301629
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sun Mar 13 06:47:32 2022 +0100

    media: platform: Kconfig: place platform drivers on a submenu
    
    Just like media bus drivers, place platform drivers on a
    submenu, in order to better organize user-selection:
    
        Media drivers  --->
                *** media drivers ***
            [*] Media USB Adapters  --->
            [*] Media PCI Adapters  --->
            -*- Radio Adapters  --->
            [*] Media platform devices  --->
                *** MMC/SDIO DVB adapters ***
            < > Siano SMS1xxx based MDTV via SDIO interface
            [*] V4L test drivers  --->
            [*] DVB test drivers  --->
                *** FireWire (IEEE 1394) Adapters ***
            <*> FireDTV and FloppyDTV
                *** common driver options ***
            [ ] Enable Remote Controller support for Siano devices
            [ ] Enable debugfs for smsdvb
    
    As this submenu depends on MEDIA_PLATFORM_DRIVERS and defaults to "y",
    there's no need to change already-existing .config entries, nor touch
    the several make *_defconfig.
    
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>

commit 055f208e408a3bb05634c99a18c935d2ed6dbddc
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jan 18 19:39:05 2022 -0800

    Documentation: fix firewire.rst ABI file path error
    
    commit b0ac702f3329cdc8a06dcaac73183d4b5a2b942d upstream.
    
    Adjust the path of the ABI files for firewire.rst to prevent a
    documentation build error. Prevents this problem:
    
    Sphinx parallel build error:
    docutils.utils.SystemMessage: Documentation/driver-api/firewire.rst:22: (SEVERE/4) Problems with "include" directive path:
    InputError: [Errno 2] No such file or directory: '../Documentation/driver-api/ABI/stable/firewire-cdev'.
    
    Fixes: 2f4830ef96d2 ("FireWire: add driver-api Introduction section")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Akira Yokosawa <akiyks@gmail.com>
    Link: https://lore.kernel.org/r/20220119033905.4779-1-rdunlap@infradead.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e2d8d9c0e330f3af0c43c8362bf0e5d9f5f1137
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jan 18 19:39:05 2022 -0800

    Documentation: fix firewire.rst ABI file path error
    
    commit b0ac702f3329cdc8a06dcaac73183d4b5a2b942d upstream.
    
    Adjust the path of the ABI files for firewire.rst to prevent a
    documentation build error. Prevents this problem:
    
    Sphinx parallel build error:
    docutils.utils.SystemMessage: Documentation/driver-api/firewire.rst:22: (SEVERE/4) Problems with "include" directive path:
    InputError: [Errno 2] No such file or directory: '../Documentation/driver-api/ABI/stable/firewire-cdev'.
    
    Fixes: 2f4830ef96d2 ("FireWire: add driver-api Introduction section")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Akira Yokosawa <akiyks@gmail.com>
    Link: https://lore.kernel.org/r/20220119033905.4779-1-rdunlap@infradead.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55698d11c8dacbfc9750803cf8fa398fb9a12af5
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jan 18 19:39:05 2022 -0800

    Documentation: fix firewire.rst ABI file path error
    
    commit b0ac702f3329cdc8a06dcaac73183d4b5a2b942d upstream.
    
    Adjust the path of the ABI files for firewire.rst to prevent a
    documentation build error. Prevents this problem:
    
    Sphinx parallel build error:
    docutils.utils.SystemMessage: Documentation/driver-api/firewire.rst:22: (SEVERE/4) Problems with "include" directive path:
    InputError: [Errno 2] No such file or directory: '../Documentation/driver-api/ABI/stable/firewire-cdev'.
    
    Fixes: 2f4830ef96d2 ("FireWire: add driver-api Introduction section")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Akira Yokosawa <akiyks@gmail.com>
    Link: https://lore.kernel.org/r/20220119033905.4779-1-rdunlap@infradead.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59c7ff9509153d451fd78b7f4ecbd86cb34a0652
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jan 18 19:39:05 2022 -0800

    Documentation: fix firewire.rst ABI file path error
    
    commit b0ac702f3329cdc8a06dcaac73183d4b5a2b942d upstream.
    
    Adjust the path of the ABI files for firewire.rst to prevent a
    documentation build error. Prevents this problem:
    
    Sphinx parallel build error:
    docutils.utils.SystemMessage: Documentation/driver-api/firewire.rst:22: (SEVERE/4) Problems with "include" directive path:
    InputError: [Errno 2] No such file or directory: '../Documentation/driver-api/ABI/stable/firewire-cdev'.
    
    Fixes: 2f4830ef96d2 ("FireWire: add driver-api Introduction section")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Akira Yokosawa <akiyks@gmail.com>
    Link: https://lore.kernel.org/r/20220119033905.4779-1-rdunlap@infradead.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0ac702f3329cdc8a06dcaac73183d4b5a2b942d
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jan 18 19:39:05 2022 -0800

    Documentation: fix firewire.rst ABI file path error
    
    Adjust the path of the ABI files for firewire.rst to prevent a
    documentation build error. Prevents this problem:
    
    Sphinx parallel build error:
    docutils.utils.SystemMessage: Documentation/driver-api/firewire.rst:22: (SEVERE/4) Problems with "include" directive path:
    InputError: [Errno 2] No such file or directory: '../Documentation/driver-api/ABI/stable/firewire-cdev'.
    
    Fixes: 2f4830ef96d2 ("FireWire: add driver-api Introduction section")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Akira Yokosawa <akiyks@gmail.com>
    Link: https://lore.kernel.org/r/20220119033905.4779-1-rdunlap@infradead.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>

commit 0d5d74634f63d99a7c390ceb18375e43f7c71e86
Merge: 304ac8032d3f 0ca37273ee0a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 12 12:17:30 2021 -0800

    Merge tag 'sound-fix-5.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A collection of fixes for 5.16-rc1, notably for a few regressions that
      were found in 5.15 and pre-rc1:
    
       - revert of the unification of SG-buffer helper functions on x86 and
         the relevant fix
    
       - regression fixes for mmap after the recent code refactoring
    
       - two NULL dereference fixes in HD-audio controller driver
    
       - UAF fixes in ALSA timer core
    
       - a few usual HD-audio and FireWire quirks"
    
    * tag 'sound-fix-5.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: fireworks: add support for Loud Onyx 1200f quirk
      ALSA: hda: fix general protection fault in azx_runtime_idle
      ALSA: hda: Free card instance properly at probe errors
      ALSA: hda/realtek: Add quirk for HP EliteBook 840 G7 mute LED
      ALSA: memalloc: Remove a stale comment
      ALSA: synth: missing check for possible NULL after the call to kstrdup
      ALSA: memalloc: Use proper SG helpers for noncontig allocations
      ALSA: pci: rme: Fix unaligned buffer addresses
      ALSA: firewire-motu: add support for MOTU Track 16
      ALSA: PCM: Fix NULL dereference at mmap checks
      ALSA: hda/realtek: Add quirk for ASUS UX550VE
      ALSA: timer: Unconditionally unlink slave instances, too
      ALSA: memalloc: Catch call with NULL snd_dma_buffer pointer
      Revert "ALSA: memalloc: Convert x86 SG-buffer handling with non-contiguous type"
      ALSA: hda/realtek: Add a quirk for Acer Spin SP513-54N
      ALSA: firewire-motu: add support for MOTU Traveler mk3
      ALSA: hda/realtek: Headset fixup for Clevo NH77HJQ
      ALSA: timer: Fix use-after-free problem

commit 411ac2982cb6748e2919893b1c80331d861784a8
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Nov 7 20:06:44 2021 +0900

    ALSA: firewire-motu: add support for MOTU Track 16
    
    Mark of the Unicorn designed Track 16 2011 as one of models in third
    generation of its FireWire series. The model is already discontinued.
    It consists of below ICs:
    
     * Texas Instruments TSB41AB1
     * Microchip (SMSC) USB3300
     * Xilinx Spartan-3A FPGA, XC3S700A
     * Texas Instruments TMS320C6722
     * Microchip (Atmel) AT91SAM SAM7S512
    
    It supports sampling transfer frequency up to 192.0 kHz. The packet
    format differs depending on both of current sampling transfer frequency
    and the type of signal in optical interfaces. The model supports
    transmission of PCM frames as well as MIDI messages.
    
    The model supports command mechanism to configure internal DSP. Hardware
    meter information is available in the first 2 chunks of each data block
    of tx packet.
    
    This commit adds support for it.
    
    $ cd linux-firewire-tools/src
    $ python crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04107d95  bus_info_length 4, crc_length 16, crc 32149
    404  31333934  bus_name "1394"
    408  20ff7000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 255, max_rec 7 (256)
    40c  0001f200  company_id 0001f2     |
    410  000a83c4  device_id 00000a83c4  | EUI-64 0001f200000a83c4
    
                   root directory
                   -----------------------------------------------------------------
    414  0004ef04  directory_length 4, crc 61188
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  d1000002  --> unit directory at 428
    424  8d000005  --> eui-64 leaf at 438
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  00035b04  directory_length 3, crc 23300
    42c  120001f2  specifier id
    430  13000039  version
    434  17102800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  0002b25f  leaf_length 2, crc 45663
    43c  0001f200  company_id 0001f2     |
    440  000a83c4  device_id 00000a83c4  | EUI-64 0001f200000a83c4
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20211107110644.23511-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit bf868be7a26afce32168fd175102ae0b70c32e1f
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Nov 4 20:06:27 2021 +0900

    ALSA: firewire-motu: add support for MOTU Traveler mk3
    
    Mark of the Unicorn (MOTU) shipped Traveler mk3 as one of models in third
    generation of its FireWire series, and discontinued it already. The model
    consists of below ICs:
    
     * Texas Instruments TSB41AB2
     * Phillips Semiconductors PDI1394L40
     * Altera cyclone EP1C3
     * Texas Instruments TMS320VC5402
    
    It supports sampling transfer frequency up to 192.0 kHz. The packet
    format differs depending on both of current sampling transfer frequency
    and whether to enable ADAT channels in rx/tx packets. The model supports
    transmission of PCM frames as well as MIDI messages.
    
    The model supports command mechanism to configure internal DSP. Hardware
    meter information is available in the first 2 chunks of each data block
    of tx packet.
    
    This commit adds support for it.
    
    $ cd linux-firewire-tools/src
    $ python crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  0410af0a  bus_info_length 4, crc_length 16, crc 44810
    404  31333934  bus_name "1394"
    408  20ff7000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 255, max_rec 7 (256)
    40c  0001f200  company_id 0001f2     |
    410  00090911  device_id 0000090911  | EUI-64 0001f20000090911
    
                   root directory
                   -----------------------------------------------------------------
    414  0004ef04  directory_length 4, crc 61188
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  d1000002  --> unit directory at 428
    424  8d000005  --> eui-64 leaf at 438
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  00031733  directory_length 3, crc 5939
    42c  120001f2  specifier id
    430  1300001b  version
    434  17102800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  00028484  leaf_length 2, crc 33924
    43c  0001f200  company_id 0001f2     |
    440  00090911  device_id 0000090911  | EUI-64 0001f20000090911
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20211104110627.94469-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit ff0700f03609b9f0defacd4ce96d9519d721e0a2
Merge: dcd68326d29b df0380b9539b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Nov 3 07:49:25 2021 -0700

    Merge tag 'sound-5.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "Lots of code development have been see in ASoC side as usual, while
      the continued development on memalloc helper and USB-audio low-
      latency support are found in the rest.
    
      Note that a few changes in the unusual places like arch/sh are
      included, which are a part of ASoC DAI format cleanups.
    
      ALSA core:
    
       - Continued memalloc helper updates and cleanups, now supporting
         non-coherent and non-contiguous pages
    
       - Fixes for races in mixer OSS layer
    
      ASoC:
    
       - A new version of the audio graph card which supports a wider range
         of systems
    
       - Several conversions to YAML DT bindings
    
       - Continuing cleanups to the SOF and Intel code
    
       - Move of the Cirrus DSP framework into drivers/firmware to allow for
         future use by non-audio DSPs
    
       - An overhaul of the cs42l42 driver, correcting many problems
    
       - DAI format terminology conversions over many drivers for cleanups
    
       - Support for AMD Vangogh and Yelow Cap, Cirrus CS35L41, Maxim
         MAX98520 and MAX98360A, Mediatek MT8195, Nuvoton NAU8821, nVidia
         Tegra210, NXP i.MX8ULP, Qualcomm AudioReach, Realtek ALC5682I-VS,
         RT5682S, and RT9120 and Rockchip RV1126 and RK3568
    
      USB-audio:
    
       - Continued improvements on low-latency playback
    
       - Quirks for Pioneer devices, Line6 HX-Stomp XL, Audient iD14
    
      HD-audio:
    
       - Reduce excessive udelay() calls on Intel platforms; this should
         reduce the CPU load with PulseAudio
    
       - Quirks for HP and Clevo laptops
    
      FireWire:
    
       - Support for meter information on MOTU"
    
    * tag 'sound-5.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (513 commits)
      ALSA: usb-audio: Add quirk for Audient iD14
      ALSA: hda/realtek: Add quirk for Clevo PC70HS
      ALSA: usb-audio: Line6 HX-Stomp XL USB_ID for 48k-fixed quirk
      ALSA: usb-audio: Add registration quirk for JBL Quantum 400
      ASoC: rsnd: Fix an error handling path in 'rsnd_node_count()'
      ASoC: tlv320aic3x: Make aic3x_remove() return void
      ASoC: Intel: soc-acpi: use const for all uses of snd_soc_acpi_codecs
      ASoC: Intel: soc-acpi-cht: shrink tables using compatible IDs
      ASoC: Intel: soc-acpi-byt: shrink tables using compatible IDs
      ASoC: Intel: sof_rt5682: use comp_ids to enumerate rt5682s
      ASoC: Intel: sof_rt5682: detect codec variant in probe function
      ASoC: soc-acpi: add comp_ids field for machine driver matching
      ASoC: mediatek: mt8195: add mt8195-mt6359-rt1011-rt5682 bindings document
      ASoC: mediatek: mt8195: add machine driver with mt6359, rt1011 and rt5682
      ASoC: Stop dummy from overriding hwparams
      ASoC: topology: Change topology device to card device
      ASoC: topology: Use correct device for prints
      ASoC: topology: Check for dapm widget completeness
      ASoC: topology: Add header payload_size verification
      ASoC: core: Remove invalid snd_soc_component_set_jack call
      ...

commit ebe4560ed5c8cbfe3759f16c23ca5a6df090c6b5
Author: Oscar Carter <oscar.carter@gmx.com>
Date:   Sat May 30 11:08:39 2020 +0200

    firewire: Remove function callback casts
    
    In 1394 OHCI specification, Isochronous Receive DMA context has several
    modes. One of mode is 'BufferFill' and Linux FireWire stack uses it to
    receive isochronous packets for multiple isochronous channel as
    FW_ISO_CONTEXT_RECEIVE_MULTICHANNEL.
    
    The mode is not used by in-kernel driver, while it's available for
    userspace. The character device driver in firewire-core includes
    cast of function callback for the mode since the type of callback
    function is different from the other modes. The case is inconvenient
    to effort of Control Flow Integrity builds due to
    -Wcast-function-type warning.
    
    This commit removes the cast. A static helper function is newly added
    to initialize isochronous context for the mode. The helper function
    arranges isochronous context to assign specific callback function
    after call of existent kernel API. It's noticeable that the number of
    isochronous channel, speed, and the size of header are not required for
    the mode. The helper function is used for the mode by character device
    driver instead of direct call of existent kernel API.
    
    The same goal can be achieved (in the ioctl_create_iso_context function)
    without this helper function as follows:
    - Call the fw_iso_context_create function passing NULL to the callback
      parameter.
    - Then setting the context->callback.sc or context->callback.mc
      variables based on the a->type value.
    
    However using the helper function created in this patch makes code more
    clear and declarative. This way avoid the call to a function with one
    purpose to achieved another one.
    
    Co-developed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Co-developed-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Oscar Carter <oscar.carter@gmx.com>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Testeb-by: Takashi Sakamoto<o-takashi@sakamocchi.jp>
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>

commit 2672e1970ab051f0333fdbc61a55b7616f4f5778
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Oct 29 10:28:47 2021 +0900

    ALSA: firewire-motu: remove TODO for interaction with userspace about control message
    
    Now UAPI of ALSA firewire stack got enough functions to interact with
    userspace for protocol of MOTU FireWire series. Let's remove the relevant
    TODO.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20211029012847.11839-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 02d5e016800d082058b3d3b7c3ede136cdc6ddcb
Merge: 6e439bbd436e f2ff7147c683
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 29 07:48:00 2021 -0700

    Merge tag 'sound-5.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "This became a slightly large collection of changes, partly because
      I've been off in the last weeks. Most of changes are small and
      scattered while a bit big change is found in HD-audio Realtek codec
      driver; it's a very device-specific fix that has been long wanted, so
      I decided to pick up although it's in the middle RC.
    
      Some highlights:
    
       - A new guard ioctl for ALSA rawmidi API to avoid the misuse of the
         new timestamp framing mode; it's for a regression fix
    
       - HD-audio: a revert of the 5.15 change that might work badly, new
         quirks for Lenovo Legion & co, a follow-up fix for CS8409
    
       - ASoC: lots of SOF-related fixes, fsl component fixes, corrections
         of mediatek drivers
    
       - USB-audio: fix for the PM resume
    
       - FireWire: oxfw and motu fixes"
    
    * tag 'sound-5.15-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (25 commits)
      ALSA: pcsp: Make hrtimer forwarding more robust
      ALSA: rawmidi: introduce SNDRV_RAWMIDI_IOCTL_USER_PVERSION
      ALSA: firewire-motu: fix truncated bytes in message tracepoints
      ASoC: SOF: trace: Omit error print when waking up trace sleepers
      ASoC: mediatek: mt8195: remove wrong fixup assignment on HDMITX
      ASoC: SOF: loader: Re-phrase the missing firmware error to avoid duplication
      ASoC: SOF: loader: release_firmware() on load failure to avoid batching
      ALSA: hda/cs8409: Setup Dolphin Headset Mic as Phantom Jack
      ALSA: pcxhr: "fix" PCXHR_REG_TO_PORT definition
      ASoC: SOF: imx: imx8m: Bar index is only valid for IRAM and SRAM types
      ASoC: SOF: imx: imx8: Bar index is only valid for IRAM and SRAM types
      ASoC: SOF: Fix DSP oops stack dump output contents
      ALSA: hda/realtek: Quirks to enable speaker output for Lenovo Legion 7i 15IMHG05, Yoga 7i 14ITL5/15ITL5, and 13s Gen2 laptops.
      ALSA: usb-audio: Unify mixer resume and reset_resume procedure
      Revert "ALSA: hda: Drop workaround for a hang at shutdown again"
      ALSA: oxfw: fix transmission method for Loud models based on OXFW971
      ASoC: mediatek: common: handle NULL case in suspend/resume function
      ASoC: fsl_xcvr: register platform component before registering cpu dai
      ASoC: fsl_spdif: register platform component before registering cpu dai
      ASoC: fsl_micfil: register platform component before registering cpu dai
      ...

commit 0d290223a6c77107b1c3988959e49279a8dafaba
Merge: ea7b4244b365 a8729efbbb84
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 1 10:29:29 2021 -0700

    Merge tag 'sound-5.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "There are a few intensive changes in ALSA core side at this time that
      helped with significant code reduction. Meanwhile we keep getting new
      stuff, so the total size still grows...
    
      Anyway, the below are some highlights in this development cycle.
    
      ALSA core:
    
       - New helpers to manage page allocations and card object with devres
    
       - Refactoring for memory allocation with wc-pages
    
       - A new PCM hardware flag SNDRV_PCM_INFO_EXPLICIT_SYNC for
         controlling the explicit sync of the stream control; it'll be used
         for ASoC SOF and non-coherent memory in future
    
      ASoC:
    
       - Lots of cleanups and improvements to the Intel drivers, including
         some new systems support
    
       - New support for AMD Vangoh, CUI CMM-4030D-261, Mediatek Mt8195,
         Renesas RZ/G2L Mediatek Mt8195, RealTek RT101P, Renesas RZ/G2L,
         Rockchip RK3568 S/PDIF
    
      USB-audio:
    
       - Re-organized the quirk handling and a new option quirk_flags
    
       - Fix for a regression in 5.14 code change for JACK
    
       - Quirks for Sony WALKMAN, Digidesign mbox
    
      HD-audio:
    
       - Enhanced support for CS8409 codec
    
       - More consistent shutdown behavior with the runtime PM
    
       - The model option can accept the PCI or codec SSID as an alias
    
       - Quirks for ASUS ROG, HP Spectre x360
    
      Others:
    
       - Lots of code reduction in legacy drivers with devres helpers
    
       - FireWire MOTU 896HD support"
    
    * tag 'sound-5.15-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (421 commits)
      ASoC: Revert PCM trigger changes
      ALSA: usb-audio: Add lowlatency module option
      ALSA: hda/cs8409: Initialize Codec only in init fixup.
      ALSA: hda/cs8409: Ensure Type Detection is only run on startup when necessary
      ALSA: usb-audio: Work around for XRUN with low latency playback
      ALSA: pcm: fix divide error in snd_pcm_lib_ioctl
      ASoC: soc-pcm: test refcount before triggering
      ASoC: soc-pcm: protect BE dailink state changes in trigger
      ASoC: wcd9335: Disable irq on slave ports in the remove function
      ASoC: wcd9335: Fix a memory leak in the error handling path of the probe function
      ASoC: wcd9335: Fix a double irq free in the remove function
      ALSA: hda: Disable runtime resume at shutdown
      ASoC: rockchip: i2s: Add support for frame inversion
      ASoC: dt-bindings: rockchip: Add compatible strings for more SoCs
      ASoC: rockchip: i2s: Add compatible for more SoCs
      ASoC: rockchip: i2s: Make playback/capture optional
      ASoC: rockchip: i2s: Fixup config for DAIFMT_DSP_A/B
      ASoC: dt-bindings: rockchip: Document reset property for i2s
      ASoC: rockchip: i2s: Fix regmap_ops hang
      ASoC: rockchip: i2s: Improve dma data transfer efficiency
      ...

commit 23c671be97b9e49846d03ceb0bce3731f4b869ac
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Aug 23 17:57:41 2021 +0900

    ALSA: firewire-motu: add support for MOTU 896HD
    
    Mark of the Unicorn (MOTU) shipped 896HD 2003 as one of models in second
    generation of its FireWire series, and already discontinued it. The model
    consists of below ICs:
    
     * Texas Instruments TSB41AB2
     * Phillips Semiconductors PDI1394L40
     * Altera cyclone EP1C3
     * Texas Instruments TMS320VC5402
    
    It supports sampling transmission frequency up to 192.0 kHz. The packet
    format differs depending on both of sampling transfer frequency and enabling
    ADAT channels. The model doesn't support MIDI message transmission.
    
    This commit adds support for it.
    
    $ python3 crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04101b66  bus_info_length 4, crc_length 16, crc 7014
    404  31333934  bus_name "1394"
    408  20001000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 0, max_rec 1 (4)
    40c  0001f200  company_id 0001f2     |
    410  0001dbce  device_id 000001dbce  | EUI-64 0001f2000001dbce
    
                   root directory
                   -----------------------------------------------------------------
    414  0004c65c  directory_length 4, crc 50780
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  8d000006  --> eui-64 leaf at 438
    424  d1000001  --> unit directory at 428
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  0003dcc1  directory_length 3, crc 56513
    42c  120001f2  specifier id
    430  13000005  version
    434  17102800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  000264f2  leaf_length 2, crc 25842
    43c  0001f200  company_id 0001f2     |
    440  0001dbce  device_id 000001dbce  | EUI-64 0001f2000001dbce
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210823085741.33864-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 01f15f3773bf3653a708e2c18c370beb16ca23c7
Merge: a83955bdad3e 4bf61ad5f020
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Aug 18 12:00:27 2021 -0700

    Merge tag 'sound-5.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Only a few regression fixes and trivial device quirks"
    
    * tag 'sound-5.14-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda/via: Apply runtime PM workaround for ASUS B23E
      ALSA: hda: Fix hang during shutdown due to link reset
      ALSA: hda/realtek: Enable 4-speaker output for Dell XPS 15 9510 laptop
      ALSA: oxfw: fix functioal regression for silence in Apogee Duet FireWire
      ALSA: hda - fix the 'Capture Switch' value change notifications

commit 67bb66d32905627e29400e2cb7f87a7c4c8cf667
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Aug 12 11:28:39 2021 +0900

    ALSA: oxfw: fix functioal regression for silence in Apogee Duet FireWire
    
    OXFW 971 has no function to use the value in syt field of received
    isochronous packet for playback timing generation. In kernel prepatch for
    v5.14, ALSA OXFW driver got change to send NO_INFO value in the field
    instead of actual timing value. The change brings Apogee Duet FireWire to
    generate no playback sound, while output meter moves.
    
    As long as I investigate, _any_ value in the syt field takes the device to
    generate sound. It's reasonable to think that the device just ignores data
    blocks in packet with NO_INFO value in its syt field for audio data
    processing.
    
    This commit adds a new flag for the quirk to fix regression.
    
    Fixes: 029ffc429440 ("ALSA: oxfw: perform sequence replay for media clock recovery")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210812022839.42043-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1c34b6d305643d19416be6837f37bc1ade31c244
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5e9d2511f827e0426025c585ac1bb34ba412b63
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f819e9ec91e3ad49b6ce6882f9837cbdc07f0a48
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a89fdc49f8729be08e86a225598a36a9a6d5cff
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c774366428ef53bd79779847546ed891f4d7e1e
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b30a115e4af5e7afe8d49d636744f9978d191aaa
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b03471aee5ddbda2a9e7fce0ecb14d65ac9937b8
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b57a2dd956c8a0dc0a824cc1baeb62443513ef7
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    [ Upstream commit 5d6fb80a142b5994355ce675c517baba6089d199 ]
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 493cce3d1f608c9ce5bd761b7e16071b463bbce6
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jun 14 17:31:33 2021 +0900

    ALSA: firewire-motu: fix stream format for MOTU 8pre FireWire
    
    commit fc36ef80ca2c68b2c9df06178048f08280e4334f upstream.
    
    My previous refactoring for ALSA firewire-motu driver brought regression
    to handle MOTU 8pre FireWire. The packet format is not operated correctly.
    
    Cc: <stable@vger.kernel.org>
    Fixes: dfbaa4dc11eb ("ALSA: firewire-motu: add model-specific table of chunk count")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210614083133.39753-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c5d89b4b7dc3e9cd11da477e8bf7f7cb78af5d0
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jun 14 17:31:33 2021 +0900

    ALSA: firewire-motu: fix stream format for MOTU 8pre FireWire
    
    commit fc36ef80ca2c68b2c9df06178048f08280e4334f upstream.
    
    My previous refactoring for ALSA firewire-motu driver brought regression
    to handle MOTU 8pre FireWire. The packet format is not operated correctly.
    
    Cc: <stable@vger.kernel.org>
    Fixes: dfbaa4dc11eb ("ALSA: firewire-motu: add model-specific table of chunk count")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210614083133.39753-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c4d51b438f3cece486a5a8983bc981862e9afae
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jun 14 17:31:33 2021 +0900

    ALSA: firewire-motu: fix stream format for MOTU 8pre FireWire
    
    commit fc36ef80ca2c68b2c9df06178048f08280e4334f upstream.
    
    My previous refactoring for ALSA firewire-motu driver brought regression
    to handle MOTU 8pre FireWire. The packet format is not operated correctly.
    
    Cc: <stable@vger.kernel.org>
    Fixes: dfbaa4dc11eb ("ALSA: firewire-motu: add model-specific table of chunk count")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210614083133.39753-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a07ebc7e050ccdfec508449b2ef8f2b2aa90927b
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jul 5 20:14:55 2021 +0900

    ALSA: bebob: correct duplicated entries with TerraTec OUI
    
    ALSA bebob driver has duplicated entries for modalias of
    'ieee1394:ven00000AACmo00000002sp0000A02Dver00010001' since entries for
    two devices below have the same parameters:
    
     * Acoustic Reality eAR Master One, Eroica, Figaro, and Ciaccona
     * TerraTec Aureon 7.1 FireWire
    
    I relied on FFADO revision 737 to add the former entry, on the other hand,
    the latter is based on message posted by actual user with information of
    sysfs node:
    
     * https://sourceforge.net/p/ffado/mailman/ffado-user/thread/5743F969.2080204%40marcobaldo.ch/
    
    It appears that they have OUI of Terratec Electronic GmbH (0x000aac) and
    the same model ID, thus suffice to say that they have something common
    in their internals.
    
    Although it's not going to make a big difference, this commit arranges
    the entries.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210705111455.63788-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit d6b63b5b7d7f363c6a54421533791e9849adf2e0
Merge: bd31b9efbf54 9a7b7ec3c6f2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 2 15:25:23 2021 -0700

    Merge tag 'sound-5.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "As the diffstat scatters over the tree, we've got many tree-wide small
      changes, but also got quite a few intrusive changes in the core side.
      The only ABI-visible core change is the new rawmidi framing mode
      support while others are kernel-internal, mostly code refactoring
      and/or nice improvements.
    
      Here are some highlights:
    
      Core:
       - A new framing access mode for rawmidi to get timestamps
       - Cleanup / refactoring of buffer memory management helper code
       - Support for automatic negotiation of ASoC DAI formats
       - Revival of software suspend for PCM and control core, as a
         preliminary work for PCI BAR rescan support
    
      ASoC:
       - Accessory detection support for several Qualcomm parts
       - Support for IEC958 control with hdmi-codec
       - Merging of Tegra machine drivers into a single driver
       - Support for AmLogic SM1 TOACODEC, Intel AlderLake-M, several NXP
         i.MX8 variants, NXP TFA1 and TDF9897, Rockchip RK817, Qualcomm
         Quinary MI2S, Texas Instruments TAS2505
    
      USB-audio:
       - Reduction of latency at playback start
       - Code cleanup / fixes of usx2y driver
       - Scarlett2 mixer code fixes and enhancements
       - Quirks for Ozone and Denon devices
    
      HD-audio:
       - A few quirks for HP and ASUS machines
       - Display power management fixes
    
      Others:
       - FireWire code refactoring and enhancements
       - Tree-wide trivial coding-style fixes"
    
    * tag 'sound-5.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (594 commits)
      ALSA: usb-audio: scarlett2: Fix for loop increment in scarlett2_usb_get_config
      ALSA: hda/realtek: fix mute/micmute LEDs for HP ProBook 630 G8
      ALSA: hda/realtek: fix mute/micmute LEDs for HP ProBook 445 G8
      ALSA: hda/realtek: fix mute/micmute LEDs for HP ProBook 450 G8
      ALSA: hda/realtek - Add ALC285 HP init procedure
      ALSA: hda/realtek - Add type for ALC287
      ALSA: scarlett2: Fix scarlett2_*_ctl_put() return values again
      ALSA: scarlett2: Fix pad count for 18i8 Gen 3
      ALSA: hda/realtek: fix mute/micmute LEDs for HP EliteBook 830 G8 Notebook PC
      ALSA: firewire-lib: Fix 'amdtp_domain_start()' when no AMDTP_OUT_STREAM stream is found
      ASoC: qcom: lpass-cpu: mark IRQ_CLEAR register as volatile and readable
      ALSA: hda: Release codec display power during shutdown/reboot
      ALSA: hda: Release controller display power during shutdown/reboot
      ALSA: hda/realtek: Apply LED fixup for HP Dragonfly G1, too
      ASoC: fsl: remove unnecessary oom message
      ASoC: tlv320aic32x4: dt-bindings: add TAS2505 to compatible
      ASoC: tlv320aic32x4: add support for TAS2505
      ASoC: tlv320aic32x4: add type to device private data struct
      ASoC: tegra30: ahub: Use devm_platform_get_and_ioremap_resource()
      ASoC: tegra: tegra210_admaif: Use devm_platform_get_and_ioremap_resource()
      ...

commit 5b24119e9103a767b065fcf37db2b65bbcf0d52f
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Jun 18 13:07:13 2021 +0900

    ALSA: firewire-motu: fix rx packet format at higher rate for MOTU 828 mk3 Hybrid
    
    I assumed that the combination of packet formats for MOTU 828 mk3 Hybrid
    is the same as MOTU 828 mk3 FireWire. However at higher sampling rate, it
    is different. MOTU 828 mk3 Hybrid has additional 4 dummy data chunks for
    rx packet.
    
    This commit fixes the issue to which I address at a commit f2ac3b839540
    ("ALSA: firewire-motu: sequence replay for source packet header").
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210618040713.114611-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit fc36ef80ca2c68b2c9df06178048f08280e4334f
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jun 14 17:31:33 2021 +0900

    ALSA: firewire-motu: fix stream format for MOTU 8pre FireWire
    
    My previous refactoring for ALSA firewire-motu driver brought regression
    to handle MOTU 8pre FireWire. The packet format is not operated correctly.
    
    Cc: <stable@vger.kernel.org>
    Fixes: dfbaa4dc11eb ("ALSA: firewire-motu: add model-specific table of chunk count")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210614083133.39753-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit b431f16f1685b38d4dda0434f4bae2265ab9e3da
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Jun 16 17:28:47 2021 +0900

    ALSA: firewire-motu: add support for MOTU 896
    
    MOTU 896 is a second model in MOTU FireWire series, produced in 2001. This
    model consists of three chips:
    
     * Texas Instruments TSB41AB2 (Physical layer for IEEE 1394 bus)
     * Philips Semiconductors PDI 1394L21BE (Link layer for IEEE 1394 bus and
       packet processing layer)
     * QuickLogic QuickRAM QL4016 (Data block processing layer and digital
       signal processing)
    
    This commit adds a support for the model, with its unique protocol as
    version 1. The features of this protocol are:
    
     * no MIDI support.
     * Rx packets have no data chunks for control and status messages.
     * Tx packets have 2 bytes for control and status messages in the end of
       each data block.
     * The most of settings are represented in bit flag in one quadlet address
       (0x'ffff'f000'0b14).
     * It's selectable to use signal on optical interface, however the device
       has no register specific to it. The state has effect just to whether
       to exclude differed data chunks.
     * The internal multiplexer is not configured by software.
    
    Just after powering on, the device has a quirk to fail handling
    transaction. I recommend users to connect the device enough after powering
    on.
    
    $ python3 crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04102814  bus_info_length 4, crc_length 16, crc 10260
    404  31333934  bus_name "1394"
    408  20001000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 0, max_rec 1 (4)
    40c  0001f200  company_id 0001f2     |
    410  0000d645  device_id 000000d645  | EUI-64 0001f2000000d645
    
                   root directory
                   -----------------------------------------------------------------
    414  0004c65c  directory_length 4, crc 50780
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  8d000006  --> eui-64 leaf at 438
    424  d1000001  --> unit directory at 428
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  0003ab34  directory_length 3, crc 43828
    42c  120001f2  specifier id
    430  13000002  version
    434  17102801  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  0002057d  leaf_length 2, crc 1405
    43c  0001f200  company_id 0001f2     |
    440  0000d645  device_id 000000d645  | EUI-64 0001f2000000d645
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210616082847.124688-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit d13d6b284d8b80802e3ab1c33f210579884c3060
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Jun 16 17:28:46 2021 +0900

    ALSA: firewire-motu: add support for MOTU 828
    
    MOTU 828 is a first model in MOTU FireWire series, produced in 2001. This
    model consists of three chips:
     * Texas Instruments TSB41AB1 (Physical layer for IEEE 1394 bus)
     * Philips Semiconductors 1394L21BE (Link layer for IEEE 1394 bus and
       packet processing layer)
     * QuickLogic QuickRAM QL4016 (Data block processing layer and digital
       signal processing)
    
    This commit adds a support for this model, with its unique protocol as
    version 1. The features of this protocol are:
    
     * no MIDI support.
     * Rx packets have no data chunks for control and status messages.
     * Tx packets have 2 data chunks for control and status messages in the
       end of each data block. The chunks consist of data block counter
       (4 byte) and message (2 byte).
     * All of settings are represented in bit flag in one quadlet address
       (0x'ffff'f000'0b00).
     * When optical interface is configured as S/PDIF, signals of the interface
       is multiplexed for packets, instead of signals of coaxial interface.
     * The internal multiplexer is not configured by software.
    
    I note that the device has a quirk to mute output voluntarily during
    receiving batch of packets in the beginning of packet streaming. The
    operation to unmute should be done by software enough after the device
    shifts the state, however it's not deterministic. Furthermore, just
    after switching rate of sampling clock, the device keeps the state longer.
    This patch manages to sleep 100 msec before unmute operation, but it may
    fail to release the mute in the case that the rate is changed. As a
    workaround, users can restart packet streaming at the same rate, or write
    to specific register from userspace.
    
    $ python3 crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04105c54  bus_info_length 4, crc_length 16, crc 23636
    404  31333934  bus_name "1394"
    408  20001000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 0, max_rec 1 (4)
    40c  0001f200  company_id 0001f2     |
    410  00005015  device_id 0000005015  | EUI-64 0001f20000005015
    
                   root directory
                   -----------------------------------------------------------------
    414  0004c65c  directory_length 4, crc 50780
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  8d000006  --> eui-64 leaf at 438
    424  d1000001  --> unit directory at 428
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  00035052  directory_length 3, crc 20562
    42c  120001f2  specifier id
    430  13000001  version
    434  17101800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  0002eeb6  leaf_length 2, crc 61110
    43c  0001f200  company_id 0001f2     |
    440  00005015  device_id 0000005015  | EUI-64 0001f20000005015
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210616082847.124688-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1586d461f641b60040438275e14c7dbcec5907d6
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Jun 11 18:37:30 2021 +0900

    ALSA: bebob: correct device entries for Phonic Helix Board and FireFly series
    
    Phonic shipped Helix board and FireFly series with IEEE 1394
    functionality. Regarding to the parameters in unit directory, these
    series have two cases below:
    
    1. the same parameters in unit directory
     * Firefly 202
     * Firefly 302
     * Firefly 808 Universal
     * HelixBoard 12 FireWire, 12 Universal
     * HelixBoard 18 FireWire, 18 Universal
     * HelixBoard 24 FireWire, 24 Universal
    
    2. Unique parameters in unit directory
     * FireFly 808
     * HelixBoard 12 FireWire MkII
     * HelixBoard 18 FireWire MkII
     * HelixBoard 24 FireWire MkII
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210611093730.78254-7-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit e6b54fbc18b9536833e2374798088741a9ab7332
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Jun 11 18:37:29 2021 +0900

    ALSA: bebob: code refactoring for M-Audio models
    
    For M-Audio FireWire 410, the value of immediate entry for vendor in unit
    directory is the value for BridgeCo. AG OUI. It seems that M-Audio uses
    initial settings as is for its product.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210611093730.78254-6-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1b337e8db797acdc75521d429a6c29db8270865c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Jun 11 18:37:27 2021 +0900

    ALSA: bebob: correct device entry for Mackie D.2 FireWire option card
    
    For Mackie D.2 FireWire option card, 0x00000f is used for the value of
    immediate entry for vendor in unit directory. The value comes from report
    by FFADO user in below page:
    
     * http://subversion.ffado.org/wiki/AvcModels/MackieD.2.
    
    However, it seems to be wrong. There are two causes; vendor's mistake to
    decide value for GUID field in configuration ROM against standard, as
    Stefan Richter mentioned in below post:
    
     * https://lore.kernel.org/alsa-devel/1443917823-13516-1-git-send-email-o-takashi@sakamocchi.jp/#t
    
    Another is implementation of libffado. The library doesn't print out the
    value from immediate entry for vendor in unit directory. It just print out
    the first 6 bytes of GUID as vendor ID.
    
    This commit replaces with correct vendor OUI.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210611093730.78254-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit fd2cd569a43635877771c00b8a2f4f26275e5562
Merge: 4244b5d8725b 83e197a8414c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jun 11 10:47:10 2021 -0700

    Merge tag 'sound-5.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A bit more commits than expected at this time, but likely it's the
      last shot before the final.
    
      Many of changes are device-specific fix-ups for various ASoC drivers,
      while a few usual HD-audio quirks and a FireWire fix, as well as a
      couple of ALSA / ASoC core fixes.
    
      All look nice and small, and nothing to scare much"
    
    * tag 'sound-5.13-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: seq: Fix race of snd_seq_timer_open()
      ALSA: hda/realtek: fix mute/micmute LEDs for HP ZBook Power G8
      ALSA: hda/realtek: headphone and mic don't work on an Acer laptop
      ASoC: qcom: lpass-cpu: Fix pop noise during audio capture begin
      ALSA: firewire-lib: fix the context to call snd_pcm_stop_xrun()
      ALSA: hda/realtek: fix mute/micmute LEDs for HP EliteBook 840 Aero G8
      ALSA: hda/realtek: fix mute/micmute LEDs and speaker for HP EliteBook x360 1040 G8
      ALSA: hda/realtek: fix mute/micmute LEDs and speaker for HP Elite Dragonfly G2
      ASoC: rt5682: Fix the fast discharge for headset unplugging in soundwire mode
      ASoC: tas2562: Fix TDM_CFG0_SAMPRATE values
      ASoC: meson: gx-card: fix sound-dai dt schema
      ASoC: AMD Renoir: Remove fix for DMI entry on Lenovo 2020 platforms
      ASoC: AMD Renoir - add DMI entry for Lenovo 2020 AMD platforms
      ASoC: SOF: reset enabled_cores state at suspend
      ASoC: fsl-asoc-card: Set .owner attribute when registering card.
      ASoC: topology: Fix spelling mistake "vesion" -> "version"
      ASoC: rt5659: Fix the lost powers for the HDA header
      ASoC: core: Fix Null-point-dereference in fmt_single_name()

commit 7ba5ca32fe6e8d2e153fb5602997336517b34743
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Jun 10 12:17:32 2021 +0900

    ALSA: firewire-lib: operate for period elapse event in process context
    
    All of drivers in ALSA firewire stack processes two chances to process
    isochronous packets in any isochronous context; in software IRQ context
    for 1394 OHCI, and in process context of ALSA PCM application.
    
    In the process context, callbacks of .pointer and .ack are utilized. The
    callbacks are done by ALSA PCM core under acquiring lock of PCM substream,
    
    In design of ALSA PCM core, call of snd_pcm_period_elapsed() is used for
    drivers to awaken user processes from waiting for available frames. The
    function voluntarily acquires lock of PCM substream, therefore it is not
    called in the process context since it causes dead lock.
    
    As a workaround to avoid the dead lock, all of drivers in ALSA firewire
    stack uses workqueue to delegate the call. A variant of
    snd_pcm_period_elapsed() without lock acquisition can obsolete the
    workqueue.
    
    An extra care is needed for the callback of .pointer since it's called
    from snd_pcm_period_elapsed(). The isochronous context in Linux FireWire
    subsystem is safe mostly for nested call except in software IRQ context.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210610031733.56297-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 47271b1b98c980e915c0332eb5e8b2f273b2cd78
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Jun 10 12:17:31 2021 +0900

    ALSA: pcm: add snd_pcm_period_elapsed() variant without acquiring lock of PCM substream
    
    Current implementation of ALSA PCM core has a kernel API,
    snd_pcm_period_elapsed(), for drivers to queue event to awaken processes
    from waiting for available frames. The function voluntarily acquires lock
    of PCM substream, therefore it is not called in process context for any
    PCM operation since the lock is already acquired.
    
    It is convenient for packet-oriented driver, at least for drivers to audio
    and music unit in IEEE 1394 bus. The drivers are allowed by Linux
    FireWire subsystem to process isochronous packets queued till recent
    isochronous cycle in process context in any time.
    
    This commit adds snd_pcm_period_elapsed() variant,
    snd_pcm_period_elapsed_without_lock(), for drivers to queue the event in
    the process context.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210610031733.56297-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 64584f329352bb7c6980c7fba608ad6239769642
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Jun 6 13:34:09 2021 +0900

    ALSA: firewire-motu: add support for hybrid model of MOTU Ultralite mk3
    
    This commit adds support for the hybrid model of MOTU Ultralite mk3 with
    alpha connector, which is already discontinued. The hardware specification
    of the model is the same as the one of FireWire-only model.
    
    $ cd linux-firewire-utils
    $ python3 src/crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04101573  bus_info_length 4, crc_length 16, crc 5491
    404  31333934  bus_name "1394"
    408  20ff7000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 255, max_rec 7 (256)
    40c  0001f200  company_id 0001f2     |
    410  000a059c  device_id 00000a059c  | EUI-64 0001f200000a059c
    
                   root directory
                   -----------------------------------------------------------------
    414  0004ef04  directory_length 4, crc 61188
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  d1000002  --> unit directory at 428
    424  8d000005  --> eui-64 leaf at 438
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  0003f00b  directory_length 3, crc 61451
    42c  120001f2  specifier id
    430  13000030  version
    434  17103800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  0002d89c  leaf_length 2, crc 55452
    43c  0001f200  company_id 0001f2     |
    440  000a059c  device_id 00000a059c  | EUI-64 0001f200000a059c
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210606043409.40019-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit f2ac3b839540ec9203debac034003d0663db1e18
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Jun 2 10:34:06 2021 +0900

    ALSA: firewire-motu: sequence replay for source packet header
    
    This commit takes ALSA firewire-motu driver to perform sequence replay for
    media clock recovery.
    
    Unlike the other types of device, the devices in MOTU FireWire series
    require two levels of sequence replay; the sequence of the number of
    data blocks per packet and the sequence of source packet header per data
    block. The former is already cached by ALSA IEC 61883-1/6 packet streaming
    engine and ready to be replayed. The latter is also cached by ALSA
    firewire-motu driver itself with a previous patch. This commit takes
    the driver to replay both of them from the caches.
    
    The sequence replay is tested with below models:
    
     * 828 mkII
     * Traveler
     * UltraLite
     * 828 mk3 FireWire
     * 828 mk3 Hybrid (except for high sampling transfer frequency
     * UltraLite mk3 FireWire
     * 4pre
     * AudioExpress
    
    Unfortunately, below models still don't generate better sound, requires
    more work:
    
     * 8pre
     * 828 mk3 Hybrid at high sampling transfer frequency
    
    As long as I know, MOTU protocol version 1 requires extra care of the
    format of data block, thus below models are not supported yet in this
    time:
    
     * 828
     * 896
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210602013406.26442-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit e50dfac81f733ec379f3b0c6025b5720cf6880df
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Jun 2 10:34:05 2021 +0900

    ALSA: firewire-motu: cache event ticks in source packet header per data block
    
    The devices in MOTU FireWire series put source packet header (SPH) into
    each data block of tx packet for presentation time of event. The format
    of timestamp is compliant to IEC 61883-1, with cycle and offset fields
    without sec field of 32 bit cycle time.
    
    This commit takes ALSA firewire-motu driver to cache the presentation
    time as offset from cycle in which the packet is transferred.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210602013406.26442-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1bd1b3be86550d9df1ca81b8939b42a1b7fd5d68
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Jun 1 17:17:53 2021 +0900

    ALSA: bebob: perform sequence replay for media clock recovery
    
    This commit takes ALSA bebob driver to perform sequence replay for media
    clock recovery.
    
    Many users have reported discontinuity of data block counter field of CIP
    header in tx packet from the devices based on BeBoB ASICs. In the worst
    case, the device corrupts not to respond to any transaction, then generate
    bus-reset voluntarily for recovery. The sequence replay for media clock
    recovery is expected to suppress most of the problems.
    
    In the beginning of packet streaming, the device transfers NODATA packets
    for a while, then multiplexes any event and syt information. ALSA
    IEC 61883-1/6 packet streaming engine has implementation for it to drop
    the initial NODATA packets. It starts sequence replay when detecting any
    event multiplexed to tx packets.
    
    The sequence replay is tested with below models:
    
     * Focusrite Saffire
     * Focusrite Saffire LE
     * Focusrite Saffire Pro 10 I/O
     * Focusrite Saffire Pro 26 I/O
     * M-Audio FireWire Solo
     * M-Audio FireWire Audiophile
     * M-Audio Ozonic
     * M-Audio FireWire 410
     * M-Audio FireWire 1814
     * Edirol FA-66
     * ESI Quatafire 610
     * Apogee Ensemble
     * Phonic Firefly 202
     * Behringer F-Control Audio 610
    
    Unfortunately, below models doesn't generate sound. This seems regression
    introduced recent few years:
    
     * Stanton Final Scratch ScratchAmp at middle sampling transfer frequency
     * Yamaha GO44
     * Yamaha GO46
     * Terratec Phase x24
    
    As I reported, below model has quirk of discontinuity:
    
     * M-Audio ProFire Lightbridge
    
    DM1000/DM1100 ASICs in BeBoB solution are known to have bugs at switch of
    sampling transfer frequency between low/middle/high rates. The switch
    generates the similar problems about which I mention in the above. Some
    vendors customizes firmware so that the switch of frequency is done in
    vendor-specific registers, then restrict users to switch the frequency.
    
    For example of Focusrite Saffire Pro 10 i/o and 26 i/o, users allows to
    switch the frequency within the three steps; e.g. 44.1/48.0 kHz are
    available at low step. Between the steps, extra operation is required and
    it always generates bus-reset.
    
    Another example of Edirol FA-66, users are prohibited to switch the
    frequency by software. It's done by hardware switch and power-off.
    
    I note that the sequence replay is not a solution for the ASIC bugs. Users
    need to disconnect the device corrupted by the bug, then reconnect it to
    refresh state machine inner the ASIC.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210601081753.9191-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 4121f626d0d83a5c801ad82988a5b4ea36a9336c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Jun 1 17:17:52 2021 +0900

    ALSA: dice: perform sequence replay for media clock recovery
    
    This commit takes ALSA dice driver to perform sequence replay for media
    clock recovery.
    
    Unlike the other types of device, DICE-based devices interpret the value
    of syt field of CIP header in rx packets as presentation time for audio
    playback, thus it's required for driver to compute value for outgoing
    packet adequate to the device. It's done by media clock recovery by
    handling tx packets.
    
    The device starts packet transmission immediately at operation to
    GLOBAL_ENABLE thus on-the-fly mode is not required.
    
    DICE ASICs supports several pairs of isochronous packet streams.
    Actually, maximum two pairs of streams are supported by devices.
    We have three cases regarding to the number of streams:
    
    1. a pair of streams
    2. two tx packet streams and one rx packet streams
    3. one tx packet streams and two rx packet streams
    4. two pair of streams
    
    The decision of playback timing is slightly different in the four cases.
    
    In the case 1, sequence replay in the pair results in suitable playback
    timing.
    
    In the case 2, sequence replay from the first tx packet stream to rx
    packet stream results in suitable playback timing.
    
    In the case 3, sequence replay from tx packet stream to all of rx packet
    stream results in suitable playback timing. Furthermore, the cycle to
    start receiving packets should be the same between all rx packet streams.
    
    In the case 4, sequence replay in each pair results in suitable playback
    timing. Furthermore, the cycle to start receiving packets should be the
    same between all rx packet streams.
    
    The sequence replay is tested with below models:
    
    * For case 1:
      * TC Electronic Konnekt 24d (DiceII)
      * TC Electronic Konnekt 8 (DiceII)
      * TC Electronic Konnekt Live (DiceII)
      * TC Electronic Impact Twin (DiceII)
      * TC Electronic Digital Konnekt X32 (DiceII)
      * TC Electronic Desktop Konnekt 6 (TCD2220)
      * Solid State Logic Duende Classic (DiceII)
      * Solid State Logic Duende Mini (DiceII)
      * PreSonus FireStudio Project (TCD2210)
      * PreSonus FireStudio Mobile (TCD2210)
      * Lexicon I-ONIX FW810s (TCD2220)
      * Avid Mbox 3 Pro (TCD2220)
    
    * For case 2 (but case 1 depends on sampling transfer frequency):
      * Alesis iO 26 (DiceII)
      * Alesis iO 14 (DiceII)
      * Alesis MultiMix 12 FireWire (DiceII)
      * Focusrite Saffire Pro 26 (TCD2220)
    
    * For case 3 (but case 1 depends on sampling transfer frequency):
      * M-Audio Profire 610 (TCD2220)
      * Loud Technology Mackie Onyx Blackbird (TCD2210)
    
    * For case 4:
      * TC Electronic Studio Konnekt 48 (DiceII + TCD2220)
      * PreSonus FireStudio (DiceII)
      * M-Audio Profire 2626 (TCD2220)
      * Focusrite Liquid Saffire 56 (TCD2220)
      * Focusrite Saffire Pro 40 (TCD2220)
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210601081753.9191-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit a9dd8a61b6b1fdf334d0cc63672b3ffac3827f18
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon May 31 11:51:02 2021 +0900

    ALSA: firewire-tascam: perform sequence replay for media clock recovery
    
    This commit takes ALSA firewire-tascam driver to perform sequence replay
    for media clock recovery.
    
    The protocol specific to Tascam FireWire series is not compliant to
    IEC 61883-1/6 in terms of syt field of CIP. The protocol doesn't use
    presentation time in received CIP for playback timing. The sequence of
    the number of data blocks per packet is important for media clock
    recovery.
    
    Although the devices in Tascam FireWire series transfer packets
    regardless of receiving packets, the tx packets includes no events
    in the beginning of streaming. It takes so long to multiplex any event
    into the packet after receiving the sequence of packets. As long as I
    experienced, it takes several thousands of isochronous cycle. Furthermore,
    just after changing sampling transmission frequency, it stops multiplexing
    event at once, then starts multiplexing again.
    
    The sequence replay is tested with below models:
     * FW-1884
     * FW-1804
     * FW-1082
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210531025103.17880-6-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 029ffc4294401fc7fbc45dd4728f26148ba499e4
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon May 31 11:51:00 2021 +0900

    ALSA: oxfw: perform sequence replay for media clock recovery
    
    This commit takes ALSA oxfw driver to perform sequence replay for media
    clock recovery. Unfortunately, OXFW970 ASIC and its firmware has a quirk
    called jumbo payload which skips several isochronous cycles for packet
    transmission, thus the sequence replay is just adopted to OXFW971 ASIC.
    As well as Fireworks, OXFW ASICs also ignores presentation time against
    the way in IEC 61883-1/6.
    
    The sequence replay is tested with below models:
     * Tascam FireOne
     * Stanton Magnetics SCS.1m
     * Apogee Duet FireWire
    
    For below models, the sequence replay is tested to be disabled:
    
     * Griffin FireWave
     * Behringer F-Control Audio 202
     * Loud Technology Tapco Link.FireWire 4x6
     * Loud Technology Mackie Onyx Satellite
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210531025103.17880-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2f21a177631ae969537cf4ed602293d9aac9f73e
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu May 27 21:26:11 2021 +0900

    ALSA: firewire-lib: transfer rx packets on-the-fly when replaying
    
    Models in below series start transmission of packet after receiving the
    sequence of packets:
    
     * Digidesign Digi00x family
     * RME Fireface series
    
    Additionally, models in Tascam FireWire series start multiplexing PCM
    frames into packets enough after receiving packets. It's required to
    transfer packets on-the-fly for the above models according to nominal
    sampling transfer frequency before starting sequence replay.
    
    This commit allows drivers to decide whether the engine transfers packet
    on-the-fly or not.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210527122611.173711-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit f9e5ecdfc2c2f2a87f4aa8aa3d0216016103d769
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu May 27 21:26:09 2021 +0900

    ALSA: firewire-lib: add replay target to cache sequence of packet
    
    In design of audio and music unit in IEEE 1394 bus, feedback of
    effective sampling transfer frequency (STF) is delivered by packets
    transferred from device. The devices supported by ALSA firewire stack
    are categorized to three groups regarding to it.
    
     * Group 1:
       * Echo Audio Fireworks board module
       * Oxford Semiconductor OXFW971 ASIC
       * Digidesign Digi00x family
       * Tascam FireWire series
       * RME Fireface series
    
     * Group 2:
       * BridgeCo. DM1000/DM1100/DM1500 ASICs for BeBoB solution
       * TC Applied Technologies DICE ASICs
    
     * Group 3:
       * Mark of the Unicord FireWire series
    
    In group 1, the effective STF is determined by the sequence of the number
    of events per packet. In group 2, the sequence of presentation timestamp
    expressed in syt field of CIP header is interpreted as well. In group 3,
    the presentation timestamp is expressed in source packet header (SPH) of
    each data block.
    
    I note that some models doesn't take care of effective STF with large
    internal buffer. It's reasonable to name it as group 0:
    
     * Group 0
       * Oxford Semiconductor OXFW970 ASIC
    
    The effective STF is known to be slightly different from nominal STF for
    all of devices, and to be different between the devices. Furthermore, the
    effective STF is known to be shifted for long-period transmission. This
    makes it hard for software to satisfy the effective STF when processing
    packets to the device.
    
    The effective STF is deterministic as a result of analyzing the batch of
    packet transferred from the device. For the analysis, caching the sequence
    of parameter in the packet is required.
    
    This commit adds an option so that AMDTP domain structure takes AMDTP
    stream structure to cache the sequence of parameters in packet transferred
    from the device. The parameters are offset ticks of syt field against the
    cycle to receive the packet and the number of data blocks per packet.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210527122611.173711-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 422fecb77f5d26c71e1083b04993668ad1f263c4
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu May 13 21:56:48 2021 +0900

    ALSA: dice: fix stream format at middle sampling rate for Alesis iO 26
    
    commit 1b6604896e78969baffc1b6cc6bc175f95929ac4 upstream.
    
    Alesis iO 26 FireWire has two pairs of digital optical interface. It
    delivers PCM frames from the interfaces by second isochronous packet
    streaming. Although both of the interfaces are available at 44.1/48.0
    kHz, first one of them is only available at 88.2/96.0 kHz. It reduces
    the number of PCM samples to 4 in Multi Bit Linear Audio data channel
    of data blocks on the second isochronous packet streaming.
    
    This commit fixes hardcoded stream formats.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 28b208f600a3 ("ALSA: dice: add parameters of stream formats for models produced by Alesis")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210513125652.110249-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d063d6ce1d2e2001c3678facf5a691c00305d3b
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu May 13 21:56:48 2021 +0900

    ALSA: dice: fix stream format at middle sampling rate for Alesis iO 26
    
    commit 1b6604896e78969baffc1b6cc6bc175f95929ac4 upstream.
    
    Alesis iO 26 FireWire has two pairs of digital optical interface. It
    delivers PCM frames from the interfaces by second isochronous packet
    streaming. Although both of the interfaces are available at 44.1/48.0
    kHz, first one of them is only available at 88.2/96.0 kHz. It reduces
    the number of PCM samples to 4 in Multi Bit Linear Audio data channel
    of data blocks on the second isochronous packet streaming.
    
    This commit fixes hardcoded stream formats.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 28b208f600a3 ("ALSA: dice: add parameters of stream formats for models produced by Alesis")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210513125652.110249-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7981c124e34d43d62c5fbc9fe2aa79c0e32bc690
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu May 13 21:56:48 2021 +0900

    ALSA: dice: fix stream format at middle sampling rate for Alesis iO 26
    
    commit 1b6604896e78969baffc1b6cc6bc175f95929ac4 upstream.
    
    Alesis iO 26 FireWire has two pairs of digital optical interface. It
    delivers PCM frames from the interfaces by second isochronous packet
    streaming. Although both of the interfaces are available at 44.1/48.0
    kHz, first one of them is only available at 88.2/96.0 kHz. It reduces
    the number of PCM samples to 4 in Multi Bit Linear Audio data channel
    of data blocks on the second isochronous packet streaming.
    
    This commit fixes hardcoded stream formats.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 28b208f600a3 ("ALSA: dice: add parameters of stream formats for models produced by Alesis")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210513125652.110249-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52b18cb6841f46912e8e57e849e4c3a2782476c2
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu May 13 21:56:48 2021 +0900

    ALSA: dice: fix stream format at middle sampling rate for Alesis iO 26
    
    commit 1b6604896e78969baffc1b6cc6bc175f95929ac4 upstream.
    
    Alesis iO 26 FireWire has two pairs of digital optical interface. It
    delivers PCM frames from the interfaces by second isochronous packet
    streaming. Although both of the interfaces are available at 44.1/48.0
    kHz, first one of them is only available at 88.2/96.0 kHz. It reduces
    the number of PCM samples to 4 in Multi Bit Linear Audio data channel
    of data blocks on the second isochronous packet streaming.
    
    This commit fixes hardcoded stream formats.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 28b208f600a3 ("ALSA: dice: add parameters of stream formats for models produced by Alesis")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210513125652.110249-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb25dcc885fa377d07586dd1f8f0bec32b4b547c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon May 24 12:13:43 2021 +0900

    ALSA: firewire-lib: drop initial NODATA or empty packet
    
    The devices based on BeBoB ASICs or the devices in Tascam FireWire
    series transfer a batch of NODATA packet or empty packet in the beginning
    of packet streaming. To avoid processing them, current implementation uses
    an option to skip processing content of tx packet during some initial
    cycles. However, the hard-coded number is not enough useful.
    
    This commit drops content of packets till the packet includes any event
    firstly. The function of option is to skip processing content of tx packet
    with any event after dropping.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210524031346.50539-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 6aa37a53ff235a0579d7893c08fd05c2171aafb4
Merge: 9ebd8118162b 05ca44763033
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 20 06:42:21 2021 -1000

    Merge tag 'sound-5.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "All small device-specific fixes here: a series of FireWire audio
      fixes, UAF and other fixes in USB-audio and co spotted by fuzzer,
      and a few HD-audio quirks as usual"
    
    * tag 'sound-5.13-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: line6: Fix racy initialization of LINE6 MIDI
      ALSA: dice: fix stream format for TC Electronic Konnekt Live at high sampling transfer frequency
      ALSA: dice: disable double_pcm_frames mode for M-Audio Profire 610, 2626 and Avid M-Box 3 Pro
      ALSA: intel8x0: Don't update period unless prepared
      ALSA: hda/realtek: Add some CLOVE SSIDs of ALC293
      ALSA: firewire-lib: fix amdtp_packet tracepoints event for packet_index field
      ALSA: firewire-lib: fix calculation for size of IR context payload
      ALSA: firewire-lib: fix check for the size of isochronous packet payload
      ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro
      ALSA: dice: fix stream format at middle sampling rate for Alesis iO 26
      ALSA: hda/realtek: Add fixup for HP Spectre x360 15-df0xxx
      ALSA: usb-audio: Fix potential out-of-bounce access in MIDI EP parser
      ALSA: usb-audio: Validate MS endpoint descriptors
      ALSA: hda: fixup headset for ASUS GU502 laptop
      ALSA: hda/realtek: reset eapd coeff to default value for alc287

commit 07a35edc59d1f461a02c83235d0fe63b4c313920
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:57 2021 +0900

    ALSA: oxfw: add quirk flag for blocking transmission method
    
    Stanton SCS.1m and Apogee Duet FireWire use blocking transmission method
    unlike the other models.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-12-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2239924be45cccf3106ee6bee2fb5829a1348113
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:51 2021 +0900

    ALSA: oxfw: add explicit device entry for Loud Technologies Tapco Link.FireWire 4x6
    
    Loud Technologies Tapco Link.FireWire 4x6 is identified as the model
    with OXFW970 ASIC.
    
    This commit adds explicit entry for the model.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-6-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 5d6fb80a142b5994355ce675c517baba6089d199
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue May 18 17:45:47 2021 +0900

    Revert "ALSA: bebob/oxfw: fix Kconfig entry for Mackie d.2 Pro"
    
    This reverts commit 0edabdfe89581669609eaac5f6a8d0ae6fe95e7f.
    
    I've explained that optional FireWire card for d.2 is also built-in to
    d.2 Pro, however it's wrong. The optional card uses DM1000 ASIC and has
    'Mackie DJ Mixer' in its model name of configuration ROM. On the other
    hand, built-in FireWire card for d.2 Pro and d.4 Pro uses OXFW971 ASIC
    and has 'd.Pro' in its model name according to manuals and user
    experiences. The former card is not the card for d.2 Pro. They are similar
    in appearance but different internally.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210518084557.102681-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1b6604896e78969baffc1b6cc6bc175f95929ac4
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu May 13 21:56:48 2021 +0900

    ALSA: dice: fix stream format at middle sampling rate for Alesis iO 26
    
    Alesis iO 26 FireWire has two pairs of digital optical interface. It
    delivers PCM frames from the interfaces by second isochronous packet
    streaming. Although both of the interfaces are available at 44.1/48.0
    kHz, first one of them is only available at 88.2/96.0 kHz. It reduces
    the number of PCM samples to 4 in Multi Bit Linear Audio data channel
    of data blocks on the second isochronous packet streaming.
    
    This commit fixes hardcoded stream formats.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 28b208f600a3 ("ALSA: dice: add parameters of stream formats for models produced by Alesis")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20210513125652.110249-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit b71428d7ab333a157216a1d73c8c82a178efada9
Merge: 95275402f66e 2e6a731296be
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Apr 30 12:48:14 2021 -0700

    Merge tag 'sound-5.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "No surprises in this development cycle, and most of work is about the
      fixes and the improvements of the existing code, while a new LED
      control layer and a few new drivers have been introduced.
    
      Here are some highlights:
    
      Core:
       - A common mute-LED framework was introduced. It is used by HD-audio
         for now, more adaption will follow later. The former "Mic Mute-LED
         Mode" mixer control has been replaced with the corresponding sysfs
         now.
       - User-control management was changed to count consumed bytes instead
         of capping by number of elements; this will allow more controls in
         the normal usage pattern while avoiding the possible memory
         exhaustion DoS
    
      ASoC:
       - Continued refactoring and cleanups in ASoC core and generic card
         drivers
       - Wide range of small cppcheck and warning fixes
       - New drivers for Freescale i.MX DMA over rpmsg, Mediatek MT6358
         accessory detection, and Realtek RT1019, RT1316, RT711 and RT715
    
      USB-audio:
       - Continued improvements and fixes of the implicit feedback mode,
         including better support for Pioneer and Roland/BOSS devices
    
      HD-audio:
       - Default back to non-buffer preallocation on x86
       - Cirrus codec improvements, more quirks for Realtek codecs
    
      Others:
       - New virtio sound driver
       - FireWire Bebob updates"
    
    * tag 'sound-5.13-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (587 commits)
      ALSA: hda/conexant: Re-order CX5066 quirk table entries
      ALSA: hda/realtek: Remove redundant entry for ALC861 Haier/Uniwill devices
      ALSA: hda/realtek: Re-order ALC662 quirk table entries
      ALSA: hda/realtek: Re-order remaining ALC269 quirk table entries
      ALSA: hda/realtek: Re-order ALC269 Lenovo quirk table entries
      ALSA: hda/realtek: Re-order ALC269 Sony quirk table entries
      ALSA: hda/realtek: Re-order ALC269 ASUS quirk table entries
      ALSA: hda/realtek: Re-order ALC269 Dell quirk table entries
      ALSA: hda/realtek: Re-order ALC269 Acer quirk table entries
      ALSA: hda/realtek: Re-order ALC269 HP quirk table entries
      ALSA: hda/realtek: Re-order ALC882 Clevo quirk table entries
      ALSA: hda/realtek: Re-order ALC882 Sony quirk table entries
      ALSA: hda/realtek: Re-order ALC882 Acer quirk table entries
      ALSA: usb-audio: Remove redundant assignment to len
      ALSA: hda/realtek: Add quirk for Intel Clevo PCx0Dx
      ALSA: virtio: fix kernel-doc
      ALSA: hda/cirrus: Use CS8409 filter to fix abnormal sounds on Bullseye
      ALSA: hda/cirrus: Set Initial DMIC volume for Bullseye to -26 dB
      ALSA: sb: Fix two use after free in snd_sb_qsound_build
      ALSA: emu8000: Fix a use after free in snd_emu8000_create_mixer
      ...

commit 10e2ec8edece2566b40f69bae035a555ece71ab4
Merge: de1617578849 c4294d7f057d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Feb 21 14:21:35 2021 -0800

    Merge tag 'sound-5.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "A relatively calm release at this time, and no massive code changes
      are found in the stats, while a wide range of code refactoring and
      cleanup have been done.
    
      Note that this update includes the tree-wide trivial changes for
      dropping the return value from ISA remove callbacks, too.
    
      Below lists up some highlight:
    
      ALSA Core:
       - Support for the software jack injection via debugfs
       - Fixes for sync_stop PCM operations
    
      HD-audio and USB-audio:
       - A few usual HD-audio device quirks
       - Updates for Tegra HD-audio
       - More quirks for Pioneer and other USB-audio devices
       - Stricter state checks at USB-audio disconnection
    
      ASoC:
       - Continued code refactoring, cleanup and fixes in ASoC core API
       - A KUnit testsuite for the topology code
       - Lots of ASoC Intel driver Realtek codec updates, quirk additions
         and fixes
       - Support for Ingenic JZ4760(B), Intel AlderLake-P, DT configured
         nVidia cards, Qualcomm lpass-rx-macro and lpass-tx-macro
       - Removal of obsolete SIRF prima/atlas, Txx9 and ZTE zx drivers
    
      Others:
       - Drop return value from ISA driver remove callback
       - Cleanup with DIV_ROUND_UP() macro
       - FireWire updates, HDSP output loopback support"
    
    * tag 'sound-5.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (322 commits)
      ALSA: hda: intel-dsp-config: add Alder Lake support
      ASoC: soc-pcm: fix hw param limits calculation for multi-DAI
      ASoC: Intel: bytcr_rt5640: Add quirk for the Acer One S1002 tablet
      ASoC: Intel: bytcr_rt5651: Add quirk for the Jumper EZpad 7 tablet
      ASoC: Intel: bytcr_rt5640: Add quirk for the Voyo Winpad A15 tablet
      ASoC: Intel: bytcr_rt5640: Add quirk for the Estar Beauty HD MID 7316R tablet
      ASoC: soc-pcm: fix hwparams min/max init for dpcm
      ALSA: hda/realtek: Quirk for HP Spectre x360 14 amp setup
      ALSA: usb-audio: Add implicit fb quirk for BOSS GP-10
      ALSA: hda: Add another CometLake-H PCI ID
      ASoC: soc-pcm: add soc_pcm_hw_update_format()
      ASoC: soc-pcm: add soc_pcm_hw_update_chan()
      ASoC: soc-pcm: add soc_pcm_hw_update_rate()
      ASoC: wm_adsp: Remove unused control callback structure
      ASoC: SOF: relax ABI checks and avoid unnecessary warnings
      ASoC: codecs: lpass-tx-macro: add dapm widgets and route
      ASoC: codecs: lpass-tx-macro: add support for lpass tx macro
      ASoC: qcom: dt-bindings: add bindings for lpass tx macro codec
      ASoC: codecs: lpass-rx-macro: add iir widgets
      ASoC: codecs: lpass-rx-macro: add dapm widgets and route
      ...

commit 2b3d2987d800cc6dd8f6459971bc332354bd6a31
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Sep 9 18:36:59 2020 +0200

    ALSA: firewire: Replace tasklet with work
    
    The tasklet is an old API that should be deprecated, usually can be
    converted to another decent API.  In FireWire driver, a tasklet is
    still used for offloading the AMDTP PCM stream handling.  It can be
    achieved gracefully with a work queued, too.
    
    This patch replaces the tasklet usage in firewire-lib driver with a
    simple work.  The conversion is fairly straightforward but for the
    in_interrupt() checks that are replaced with the check using the
    current_work().
    
    Note that in_interrupt() in amdtp_packet tracepoint is still kept as
    is.  This is the place that is probed by both softirq of 1394 OHCI and
    a user task of a PCM application, and the work handling is already
    filtered in amdtp_domain_stream_pcm_pointer().
    
    Tested-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Acked-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200909163659.21708-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 86edf52e7c7201fabfba39ae694a5206d48e77af
Merge: cf85f5de83b1 6a6660d049f8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Sep 4 12:05:25 2020 -0700

    Merge tag 'sound-5.9-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A collection of small changes, nothing intrusive:
    
       - remaining tasklet API conversions, now all sound stuff have been
         converted
    
       - a few HD-audio and USB-audio quirks and minor fixes
    
       - FireWire Tascam and Digi00xx fixes
    
       - drop a kernel WARNING from PCM OSS for syzkaller"
    
    * tag 'sound-5.9-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (29 commits)
      ALSA: hda/realtek - Improved routing for Thinkpad X1 7th/8th Gen
      ALSA: hda: use consistent HDAudio spelling in comments/docs
      ALSA: hda: add dev_dbg log when driver is not selected
      ALSA: hda: fix a runtime pm issue in SOF when integrated GPU is disabled
      ALSA: hda: hdmi - add Rocketlake support
      ALSA: ua101: convert tasklets to use new tasklet_setup() API
      ALSA: usb-audio: convert tasklets to use new tasklet_setup() API
      ASoC: txx9: convert tasklets to use new tasklet_setup() API
      ASoC: siu: convert tasklets to use new tasklet_setup() API
      ASoC: fsl_esai: convert tasklets to use new tasklet_setup() API
      ALSA: hdsp: convert tasklets to use new tasklet_setup() API
      ALSA: riptide: convert tasklets to use new tasklet_setup() API
      ALSA: pci/asihpi: convert tasklets to use new tasklet_setup() API
      ALSA: firewire: convert tasklets to use new tasklet_setup() API
      ALSA: core: convert tasklets to use new tasklet_setup() API
      ALSA: pcm: oss: Remove superfluous WARN_ON() for mulaw sanity check
      ALSA: hda - Fix silent audio output and corrupted input on MSI X570-A PRO
      ALSA: hda/hdmi: always check pin power status in i915 pin fixup
      ALSA: hda/realtek: Add quirk for Samsung Galaxy Book Ion NT950XCJ-X716A
      ALSA: usb-audio: Add basic capture support for Pioneer DJ DJM-250MK2
      ...

commit 631d6914085b4eea8d68a84f800974a6ad8fb5c0
Merge: a0a4d17e02a8 d9b8fbf15d05
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 4 11:07:38 2020 -0700

    Merge tag 'sound-5.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "It was another busy development cycle, and the majority of changes are
      found in ASoC side. Below are Some highlights.
    
      ASoC core:
       - Lots of core cleanups and refactorings, still on-going work by
         Morimoto-san
    
      ASoC drivers:
       - Continued work on cleaning up and improving the Intel SOF stuff,
         along with new platform support including SoundWire
    
       - Fixes to make the Marvell SSPA driver work upstream
    
       - Support for AMD Renoir ACP, Dialog DA7212, Freescale EASRC and
         i.MX8M, Intel Elkhard Lake, Maxim MAX98390, Nuvoton NAU8812 and
         NAU8814 and Realtek RT1016.
    
      USB-audio:
       - Improvement for sync and implicit feedback streams with the more
         accurate frame size calculation and full-duplex support
    
       - Support for RME Babyface Pro and Prioneer DJ DJM
    
      HD-audio:
       - Fixes for Mic mute LED on HP machines
    
       - Re-enable support of Intel SST driver for SKL/KBL platforms
    
      FireWire:
       - Lots of refactoring, add support for RME FireFace and MOTU
         UltraLite-mk3"
    
    * tag 'sound-5.8-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (428 commits)
      ALSA: es1688: Add the missed snd_card_free()
      ALSA: hda: add sienna_cichlid audio asic id for sienna_cichlid up
      ALSA: usb-audio: Add Pioneer DJ DJM-900NXS2 support
      ASoC: qcom: q6asm-dai: kCFI fix
      ASoC: soc-card: add snd_soc_card_remove_dai_link()
      ASoC: soc-card: add snd_soc_card_add_dai_link()
      ASoC: soc-card: add snd_soc_card_set_bias_level_post()
      ASoC: soc-card: add snd_soc_card_set_bias_level()
      ASoC: soc-card: add snd_soc_card_remove()
      ASoC: soc-card: add snd_soc_card_late_probe()
      ASoC: soc-card: add snd_soc_card_probe()
      ASoC: soc-card: add probed bit field to snd_soc_card
      ASoC: soc-card: add snd_soc_card_resume_post()
      ASoC: soc-card: add snd_soc_card_resume_pre()
      ASoC: soc-card: add snd_soc_card_suspend_post()
      ASoC: soc-card: add snd_soc_card_suspend_pre()
      ASoC: soc-card: move snd_soc_card_subclass to soc-card
      ASoC: soc-card: move snd_soc_card_get_codec_dai() to soc-card
      ASoC: soc-card: move snd_soc_card_set/get_drvdata() to soc-card
      ASoC: soc-card: move snd_soc_card_jack_new() to soc-card
      ...

commit e0b2db351bc708037571deb3fc82c7d9043b4ea8
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sat May 23 16:17:33 2020 +0900

    ALSA: firewire-motu: add support for MOTU UltraLite-mk3 (FireWire only model)
    
    UltraLite-mk3 was shipped 2008 by MOTU. This model has two lineups;
    FireWire-only and FireWire/USB2.0 Hybrid model. Additionally, the latter
    has two variants in respect of the type of IEEE 1394 connector; alpha
    and beta connector.
    
    This commit adds support for the FireWire-only model, which is already
    discontinued.
    
    $ python3 crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  0410353a  bus_info_length 4, crc_length 16, crc 13626
    404  31333934  bus_name "1394"
    408  20ff7000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 255, max_rec 7 (256)
    40c  0001f200  company_id 0001f2     |
    410  000902c7  device_id 00000902c7  | EUI-64 0001f200000902c7
    
                   root directory
                   -----------------------------------------------------------------
    414  0004ef04  directory_length 4, crc 61188
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  d1000002  --> unit directory at 428
    424  8d000005  --> eui-64 leaf at 438
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  00035556  directory_length 3, crc 21846
    42c  120001f2  specifier id
    430  13000019  version
    434  17100800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  0002f3c5  leaf_length 2, crc 62405
    43c  0001f200  company_id 0001f2     |
    440  000902c7  device_id 00000902c7  | EUI-64 0001f200000902c7
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200523071733.170129-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit a74e2a226452ea75d26b1f83860bff91a11da1ac
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Fri May 1 17:37:50 2020 +0200

    docs: debugging-via-ohci1394.txt: add it to the core-api book
    
    There is an special chapter inside the core-api book about
    some debug infrastructure like tracepoints and debug objects.
    
    It sounded to me that this is the best place to add a chapter
    explaining how to use a FireWire controller to do remote
    kernel debugging, as explained on this document.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Link: https://lore.kernel.org/r/9b489d36d08ad89d3ad5aefef1f52a0715b29716.1588345503.git.mchehab+huawei@kernel.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>

commit fb95aae6e67c4e319a24b3eea32032d4246a5335
Merge: bd2463ac7d7e 90fb04f890bc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jan 28 16:26:57 2020 -0800

    Merge tag 'sound-5.6-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "As the diffstat shows we've had again a lot of works done for this
      cycle: the majority of changes are the continued componentization and
      code refactoring in ASoC, the tree-wide PCM API updates and cleanups
      and SOF updates while a few ASoC driver updates are seen, too.
    
      Here we go, some highlights:
    
      Core:
       - Finally y2038 support landed to ALSA ABI; some ioctls have been
         extended and lots of tricks were applied
       - Applying the new managed PCM buffer API to all drivers; the API
         itself was already merged in 5.5
       - The already deprecated dimension support in ALSA control API is
         dropped completely now
       - Verification of ALSA control elements to catch API misuses
    
      ASoC:
       - Further code refactorings and moving things to the component level
       - Lots of updates and improvements on SOF / Intel drivers; now
         including common HDMI driver and SoundWire support
       - New driver support for Ingenic JZ4770, Mediatek MT6660, Qualcomm
         WCD934x and WSA881x, and Realtek RT700, RT711, RT715, RT1011,
         RT1015 and RT1308
    
      HD-audio:
       - Improved ring-buffer communications using waitqueue
       - Drop the superfluous buffer preallocation on x86
    
      Others:
       - Many code cleanups, mostly constifications over the whole tree
       - USB-audio: quirks for MOTU, Corsair Virtuoso, Line6 Helix
       - FireWire: code refactoring for oxfw and dice drivers"
    
    * tag 'sound-5.6-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (638 commits)
      ALSA: usb-audio: add quirks for Line6 Helix devices fw>=2.82
      ALSA: hda: Add Clevo W65_67SB the power_save blacklist
      ASoC: soc-core: remove null_snd_soc_ops
      ASoC: soc-pcm: add soc_rtd_trigger()
      ASoC: soc-pcm: add soc_rtd_hw_free()
      ASoC: soc-pcm: add soc_rtd_hw_params()
      ASoC: soc-pcm: add soc_rtd_prepare()
      ASoC: soc-pcm: add soc_rtd_shutdown()
      ASoC: soc-pcm: add soc_rtd_startup()
      ASoC: rt1015: add rt1015 amplifier driver
      ASoC: madera: Correct some kernel doc
      ASoC: topology: fix soc_tplg_fe_link_create() - link->dobj initialization order
      ASoC: Intel: skl_hda_dsp_common: Fix global-out-of-bounds bug
      ASoC: madera: Correct DMIC only input hook ups
      ALSA: cs46xx: fix spelling mistake "to" -> "too"
      ALSA: hda - Add docking station support for Lenovo Thinkpad T420s
      ASoC: Add MediaTek MT6660 Speaker Amp Driver
      ASoC: dt-bindings: rt5645: add suppliers
      ASoC: max98090: fix deadlock in max98090_dapm_put_enum_double()
      ASoC: dapm: add snd_soc_dapm_put_enum_double_locked
      ...

commit 86b2eb94b0fc535a62f67666bab8fc4cb81a886c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Nov 1 22:13:21 2019 +0900

    ALSA: bebob: expand sleep just after breaking connections for protocol version 1
    
    [ Upstream commit d3eabe939aee3ffd5b133766a932629a9746298c ]
    
    As long as I investigated, some devices with BeBoB protocol version 1
    can be freezed during several hundreds milliseconds after breaking
    connections. When accessing during the freezed time, any transaction
    is corrupted. In the worst case, the device is going to reboot.
    
    I can see this issue in:
     * Roland FA-66
     * M-Audio FireWire Solo
    
    This commit expands sleep just after breaking connections to avoid
    the freezed time as much as possible. I note that the freeze/reboot
    behaviour is similar to below models:
     * Focusrite Saffire Pro 10 I/O
     * Focusrite Saffire Pro 26 I/O
    
    The above models certainly reboot after breaking connections.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191101131323.17300-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b61c56227bf5a2ca5e146cebcdf50b2e15e4c973
Merge: b2cb931d724b 5815bdfd7f54
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Dec 13 14:40:38 2019 -0800

    Merge tag 'sound-5.5-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A small collection of fixes.
    
      The main changes are fixes for a couple of regressions in AMD HD-audio
      and FireWire that were introduced in 5.5-rc1. The rest are small fixes
      for echoaudio and FireWire, as well as a usual Dell HD-audio fixup"
    
    * tag 'sound-5.5-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda/realtek - Line-out jack doesn't work on a Dell AIO
      ALSA: hda/hdmi - Fix duplicate unref of pci_dev
      ALSA: fireface: fix return value in error path of isochronous resources reservation
      ALSA: oxfw: fix return value in error path of isochronous resources reservation
      ALSA: firewire-motu: fix double unlocked 'motu->mutex'
      ALSA: echoaudio: simplify get_audio_levels

commit d45b3aaea26c8bc43ca5bc8cba05cb399096d631
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Dec 10 07:11:27 2019 +0100

    ALSA: firewire: Drop superfluous ioctl PCM ops
    
    All the PCM ioctl ops of ALSA FireWire drivers do nothing but calling
    the default handler.
    
    Now PCM core accepts NULL as the default ioctl ops(*), so let's drop
    altogether.
    
    (*) commit fc033cbf6fb7 ("ALSA: pcm: Allow NULL ioctl ops")
    
    Acked-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191210061145.24641-6-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit d269b2e0ba528fb92851bd3d95adbe842d8768b3
Merge: e42617b825f8 6e8aeda224c8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Dec 10 18:22:09 2019 +0100

    Merge branch 'for-linus' into for-next
    
    Back-merge the 5.5-devel branch for fixing FireWire bugs.
    The upcoming PCM API update patchset relies on these.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 9b326948c23908692d7dfe56ed149840d3829eaa
Merge: ef2cc88e2a20 7807759e4ad8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Dec 2 14:13:00 2019 -0800

    Merge tag 'firewire-update' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull FireWire updates from Stefan Richter:
    
     - another y2038 fix
    
     - janitorial code movement
    
    * tag 'firewire-update' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: core: code cleanup after vm_map_pages_zero introduction
      firewire: ohci: stop using get_seconds() for BUS_TIME

commit 3f1b210a7f97f7e75c56174ada476fba2d36f340
Merge: 361b0d286afe bf2aa5cadd1c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 26 20:04:35 2019 -0800

    Merge tag 'sound-5.5-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "There have been some significant changes in the core side, both for
      ALSA and ASoC, while lots of development have been seen in SOF, as
      well as many small fixes/improvements for ASoC codecs and platforms.
      Below is a highlight in this cycle:
    
      Core:
       - The unification of PCM vmalloc buffer allocation helpers into the
         standard API
       - Clean up of the default PCM mmap handling for vmalloc & SG-buffer
       - Fix potential races at ALSA timer open
       - A few new PCM API extensions; just preliminary core changes, the
         actual changes in drivers will be merged in 5.6
       - Continued ASoC componentization works; now almost everything is a
         common ASoC component object. A lot of refactoring and
         simplification have been done along with it.
    
      ASoC:
       - Many fixes to the Sound Open Firmware (SOF) code
       - Wake on voice support for Chromebooks
       - SPI support and trigger word detection for RT5677
       - New drivers for Analog Devices ADAU7118, Intel Cannonlake systems
         with RT1011 and RT5682, Texas Instruments TAS2562 and TAS2770
    
      HD-audio:
       - Improved Intel DSP configuration / probe code for SOF
       - Plumbing the legacy HD-audio driver with Intel SOF HDMI
       - DP-MST support for Nvidia HDMI codecs
       - Realtek quirks cleanups and new additions as usual
    
      Others:
       - Lots of refactoring and cleanups for FireWire; period-size sharing,
         h/w IRQ interval configuration, clock recovery improvements, etc
       - USB-audio: Scarlett mixer quirks
       - Cleanups of PCM calls in various drivers (including media and USB)
         to adapt the core API changes"
    
    * tag 'sound-5.5-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (497 commits)
      ALSA: usb-audio: Fix Focusrite Scarlett 6i6 gen1 - input handling
      ALSA: hda/realtek - Enable internal speaker of ASUS UX431FLC
      ALSA: aloop: Fix dependency on timer API
      ASoC: DMI long name - avoid to add board name if matches with product name
      ASoC: improve the DMI long card code in asoc-core
      ASoC: rsnd: fix DALIGN register for SSIU
      ALSA: aloop: Avoid unexpected timer event callback tasklets
      ALSA: aloop: Remove redundant locking in timer open function
      ASoC: component: Add sync_stop PCM ops
      ASoC: pcm: Make ioctl ops optional
      ALSA: hda/hdmi - Clear codec->relaxed_resume flag at unbinding
      ALSA: hda - Disable audio component for legacy Nvidia HDMI codecs
      ALSA: cs4236: fix error return comparison of an unsigned integer
      ALSA: usb-audio: Fix NULL dereference at parsing BADD
      ALSA: usb-audio: Fix Scarlett 6i6 Gen 2 port data
      ALSA: hda/realtek - Enable the headset-mic on a Xiaomi's laptop
      ALSA: hda/realtek - Move some alc236 pintbls to fallback table
      ALSA: hda/realtek - Move some alc256 pintbls to fallback table
      ALSA: docs: Update about the new PCM sync_stop ops
      ALSA: pcm: Add card sync_irq field
      ...

commit 2654ab2efb3bcb77ccc50061e2bf7ff042d28383
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    commit 1be3c1fae6c1e1f5bb982b255d2034034454527a upstream.
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit da5e83374f463a4dd91321428d5ea5230b6d87b4
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Nov 1 22:13:22 2019 +0900

    ALSA: bebob: expand delay of start for IR context just for version 3 firmware
    
    As long as I investigated, there's some cases about the delay for device
    between establishing OUTPUT_PLUG and transmitting first isoc packet. For
    devices which support BeBoB protocol version 1 can transmit the packet
    within several hundred milliseconds, while for devices which support
    BeBoB protocol version 3 can transmit the packet within 2 seconds.
    
    Devices with protocol version 1:
     * Edirol FA-66
     * Yamaha GO46
     * Terratec Phase x24 FW
     * M-Audio FireWire AudioPhile
     * M-Audio FireWire Solo
     * M-Audio FireWire 1814
     * M-Audio FireWire 410
     * Focusrite Saffire Pro 26 I/O
    
    Devices with protocol version 3:
     * M-Audio Profire Lightbridge
     * Behringer FCA610
     * Phonic Firefly 202
    
    At present ALSA bebob driver postpones starting IR context during
    1.5 sec for all of supported devices. The delay is too long for
    devices with protocol version 1, while it's not enough for devices with
    protocol version 3.
    
    This commit improves the delay for these protocols.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191101131323.17300-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit d3eabe939aee3ffd5b133766a932629a9746298c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Nov 1 22:13:21 2019 +0900

    ALSA: bebob: expand sleep just after breaking connections for protocol version 1
    
    As long as I investigated, some devices with BeBoB protocol version 1
    can be freezed during several hundreds milliseconds after breaking
    connections. When accessing during the freezed time, any transaction
    is corrupted. In the worst case, the device is going to reboot.
    
    I can see this issue in:
     * Roland FA-66
     * M-Audio FireWire Solo
    
    This commit expands sleep just after breaking connections to avoid
    the freezed time as much as possible. I note that the freeze/reboot
    behaviour is similar to below models:
     * Focusrite Saffire Pro 10 I/O
     * Focusrite Saffire Pro 26 I/O
    
    The above models certainly reboot after breaking connections.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191101131323.17300-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2858598006961cd1ec06ebcc0549e7b3bd83f58c
Merge: e472c64aa4fa a39331867335
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 1 09:18:00 2019 -0700

    Merge tag 'sound-5.4-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A couple of regression fixes and a fix for mutex deadlock at
      hog-unplug, as well as other device-specific fixes:
    
       - A commit to avoid the spurious unsolicited interrupt on HD-audio
         bus caused a stall at shutdown, so it's reverted now.
    
       - The recent support of AMD/Nvidia audio component binding caused a
         mutex deadlock; fixed by splitting to another mutex
    
       - The device hot-unplug and the ALSA timer close combo may lead to
         another mutex deadlock; fixed by moving put_device() calls
    
       - Usual device-specific small quirks for HD- and USB-audio drivers
    
       - An old error check fix in FireWire driver"
    
    * tag 'sound-5.4-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: timer: Fix mutex deadlock at releasing card
      ALSA: hda - Fix mutex deadlock in HDMI codec driver
      Revert "ALSA: hda: Flush interrupts on disabling"
      ALSA: bebob: Fix prototype of helper function to return negative value
      ALSA: hda/realtek - Fix 2 front mics of codec 0x623
      ALSA: hda/realtek - Add support for ALC623
      ALSA: usb-audio: Add DSD support for Gustard U16/X26 USB Interface

commit bd1073728260e1d2f9589c928b6d8ddb14f5646f
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Oct 30 17:06:43 2019 +0900

    ALSA: firewire-motu: code refactoring to handle model specific switch for protocol v2
    
    In MOTU FireWire series, devices which support protocol version 2 have
    several types of hardware design to process audio data frames for isoc
    packet. Roughly devices are categorized into three groups:
     - 828mkII
     - Traveler/896HD
     - UltraLite/8pre FireWire
    
    Some bit flags in register addressed by 0x'ffff'f000'0b14
    includes device-specific effects.
    
    This commit cleanups implementation of protocol v2 in this point.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191030080644.1704-6-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 3f58f004bff3273d102583e0b2f478526cf9d3c8
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Oct 30 17:06:41 2019 +0900

    ALSA: firewire-motu: detect SPH source of sampling clock
    
    In MOTU FireWire series, devices have a mode to generate sampling clock
    from a sequence of source packet header (SPH) included in each data block
    of received packet. This mode is used for several purposes such as mode
    for SMPTE time code, sync to the other sound cards and so on.
    
    This commit adds support for the SPH mode.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191030080644.1704-4-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit acfedcbe1ce4c69e1da914f39c02d945c80198d4
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Oct 18 15:19:11 2019 +0900

    ALSA: firewire-lib: postpone to start IR context
    
    Some devices have a quirk to postpone transmission of isoc packet for
    several dozen or hundred isoc cycles since configured to transmit.
    Furthermore, some devices have a quirk to transmit isoc packet with
    discontinued data of its header.
    
    In 1394 OHCI specification, software allows to start isoc context with
    certain isoc cycle. Linux firewire subsystem has kernel API to use it
    as well.
    
    This commit uses the functionality of 1394 OHCI controller to handle
    the quirks. At present, this feature is convenient to ALSA bebob and
    fireface driver. As a result, some devices can be safely handled, as
    long as I know:
     - MAudio FireWire solo
     - MAudio ProFire Lightbridge
     - MAudio FireWire 410
     - Roland FA-66
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20191018061911.24909-7-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 4d97ddde96f63ac32403f3b23db0acb06f577496
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 10 22:51:52 2019 +0900

    ALSA: firewire-tascam: check intermediate state of clock status and retry
    
    commit e1a00b5b253a4f97216b9a33199a863987075162 upstream.
    
    2 bytes in MSB of register for clock status is zero during intermediate
    state after changing status of sampling clock in models of TASCAM FireWire
    series. The duration of this state differs depending on cases. During the
    state, it's better to retry reading the register for current status of
    the clock.
    
    In current implementation, the intermediate state is checked only when
    getting current sampling transmission frequency, then retry reading.
    This care is required for the other operations to read the register.
    
    This commit moves the codes of check and retry into helper function
    commonly used for operations to read the register.
    
    Fixes: e453df44f0d6 ("ALSA: firewire-tascam: add PCM functionality")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190910135152.29800-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e8f051e504d15da929385a1eef66c8f5d91e167
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 10 22:51:52 2019 +0900

    ALSA: firewire-tascam: check intermediate state of clock status and retry
    
    commit e1a00b5b253a4f97216b9a33199a863987075162 upstream.
    
    2 bytes in MSB of register for clock status is zero during intermediate
    state after changing status of sampling clock in models of TASCAM FireWire
    series. The duration of this state differs depending on cases. During the
    state, it's better to retry reading the register for current status of
    the clock.
    
    In current implementation, the intermediate state is checked only when
    getting current sampling transmission frequency, then retry reading.
    This care is required for the other operations to read the register.
    
    This commit moves the codes of check and retry into helper function
    commonly used for operations to read the register.
    
    Fixes: e453df44f0d6 ("ALSA: firewire-tascam: add PCM functionality")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190910135152.29800-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e21e5b225effa60d36fa9a494fdeab1313cda88
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 10 22:51:52 2019 +0900

    ALSA: firewire-tascam: check intermediate state of clock status and retry
    
    commit e1a00b5b253a4f97216b9a33199a863987075162 upstream.
    
    2 bytes in MSB of register for clock status is zero during intermediate
    state after changing status of sampling clock in models of TASCAM FireWire
    series. The duration of this state differs depending on cases. During the
    state, it's better to retry reading the register for current status of
    the clock.
    
    In current implementation, the intermediate state is checked only when
    getting current sampling transmission frequency, then retry reading.
    This care is required for the other operations to read the register.
    
    This commit moves the codes of check and retry into helper function
    commonly used for operations to read the register.
    
    Fixes: e453df44f0d6 ("ALSA: firewire-tascam: add PCM functionality")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190910135152.29800-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1db4e5c3548e90de0a473d48117e2177f5b7d6d
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 10 22:51:52 2019 +0900

    ALSA: firewire-tascam: check intermediate state of clock status and retry
    
    commit e1a00b5b253a4f97216b9a33199a863987075162 upstream.
    
    2 bytes in MSB of register for clock status is zero during intermediate
    state after changing status of sampling clock in models of TASCAM FireWire
    series. The duration of this state differs depending on cases. During the
    state, it's better to retry reading the register for current status of
    the clock.
    
    In current implementation, the intermediate state is checked only when
    getting current sampling transmission frequency, then retry reading.
    This care is required for the other operations to read the register.
    
    This commit moves the codes of check and retry into helper function
    commonly used for operations to read the register.
    
    Fixes: e453df44f0d6 ("ALSA: firewire-tascam: add PCM functionality")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190910135152.29800-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a0a1e54f7199260987ba89d3026fdf85ac1b4c6
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 10 22:51:52 2019 +0900

    ALSA: firewire-tascam: check intermediate state of clock status and retry
    
    commit e1a00b5b253a4f97216b9a33199a863987075162 upstream.
    
    2 bytes in MSB of register for clock status is zero during intermediate
    state after changing status of sampling clock in models of TASCAM FireWire
    series. The duration of this state differs depending on cases. During the
    state, it's better to retry reading the register for current status of
    the clock.
    
    In current implementation, the intermediate state is checked only when
    getting current sampling transmission frequency, then retry reading.
    This care is required for the other operations to read the register.
    
    This commit moves the codes of check and retry into helper function
    commonly used for operations to read the register.
    
    Fixes: e453df44f0d6 ("ALSA: firewire-tascam: add PCM functionality")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190910135152.29800-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82a136986dbc112af10666ce530624808a6b9b67
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 10 22:51:52 2019 +0900

    ALSA: firewire-tascam: check intermediate state of clock status and retry
    
    commit e1a00b5b253a4f97216b9a33199a863987075162 upstream.
    
    2 bytes in MSB of register for clock status is zero during intermediate
    state after changing status of sampling clock in models of TASCAM FireWire
    series. The duration of this state differs depending on cases. During the
    state, it's better to retry reading the register for current status of
    the clock.
    
    In current implementation, the intermediate state is checked only when
    getting current sampling transmission frequency, then retry reading.
    This care is required for the other operations to read the register.
    
    This commit moves the codes of check and retry into helper function
    commonly used for operations to read the register.
    
    Fixes: e453df44f0d6 ("ALSA: firewire-tascam: add PCM functionality")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190910135152.29800-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cf7487c5de713b706ca2e1f66ec5f9b27fe265a
Merge: b6cb84b4fc58 f41f900568d9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 24 16:46:16 2019 -0700

    Merge tag 'sound-fix-5.4-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A few small remaining wrap-up for this merge window.
    
      Most of patches are device-specific (HD-audio and USB-audio quirks,
      FireWire, pcm316a, fsl, rsnd, Atmel, and TI fixes), while there is a
      simple fix (actually two commits) for ASoC core"
    
    * tag 'sound-fix-5.4-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: usb-audio: Add DSD support for EVGA NU Audio
      ALSA: hda - Add laptop imic fixup for ASUS M9V laptop
      ASoC: ti: fix SND_SOC_DM365_VOICE_CODEC dependencies
      ASoC: pcm3168a: The codec does not support S32_LE
      ASoC: core: use list_del_init and move it back to soc_cleanup_component
      ALSA: hda/realtek - PCI quirk for Medion E4254
      ALSA: hda - Apply AMD controller workaround for Raven platform
      ASoC: rsnd: do error check after rsnd_channel_normalization()
      ASoC: atmel_ssc_dai: Remove wrong spinlock usage
      ASoC: core: delete component->card_list in soc_remove_component only
      ASoC: fsl_sai: Fix noise when using EDMA
      ALSA: usb-audio: Add Hiby device family to quirks for native DSD support
      ALSA: hda/realtek - Fix alienware headset mic
      ALSA: dice: fix wrong packet parameter for Alesis iO26

commit 6ab8ad31601f29470eb895fd95e5c963e125aa1b
Merge: ea982ba7f791 9bf9bf5440b9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Sep 17 17:43:33 2019 -0700

    Merge tag 'sound-5.4-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "As shown in diffstat and logs, it was again a busy development cycle
      at this time, too. The most significant changes are still on-going
      refactoring / modernization works for ASoC core and drivers, but there
      are lots of other changes as well. Here we go, some highlights below:
    
      ASoC:
    
       - Quite a lot of cleanup / refactoring of ASoC core and APIs; most of
         them are systematic, but also including cleanups and modernization
    
       - A bulk of updates for some ASoC platforms, Freescale, sunxi and
         Intel SST/SOF
    
       - Initial support for Sound Open Firmware on i.MX8
    
       - Removal of deprecated w90x900 and nuc900 drivers
    
       - New support for Cirrus Logic CS47L15 and CS47L92, Freescale i.MX
         7ULP and 8MQ, Meson G12A and NXP UDA1334
    
      USB-audio:
    
       - More validations of descriptor units for hardening against bugs
         reported by fuzzers
    
       - PCM device assignment workaround for a past call-order change
    
       - Scarlett Gen2 mixer interface, a few more more quirks
    
      HD-audio:
    
       - Support for audio component with AMD/ATI and Nvidia HDMI codecs
    
       - Clean up HD-audio core and remove indirect access ops for Intel SOF
    
       - DMIC detection at probe; it would make systems automatically
         falling back to SST/SOF driver on devices that need DMIC handling.
         Needs a new Kconfig to set, and beware that it's still new and a
         bit experimental
    
      FireWire:
    
       - Lots of code refactoring and cleanups"
    
    * tag 'sound-5.4-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (521 commits)
      ASoC: sdm845: remove unneeded semicolon
      ASoC: fsl_sai: Implement set_bclk_ratio
      ASoC: dmaengine: Replace strncpy() with strscpy_pad() for pcm->name
      ASoC: wcd9335: remove redundant use of ret variable
      ALSA: firewire-tascam: check intermediate state of clock status and retry
      ALSA: firewire-tascam: handle error code when getting current source of clock
      ASoC: hdmi-codec: Add an op to set callback function for plug event
      ASoC: rt5677: keep analog power register at SND_SOC_BIAS_OFF
      ASoC: rt5677: Remove magic number register writes
      ASoC: soc-core: self contained soc_unbind_aux_dev()
      ASoC: soc-core: add soc_unbind_aux_dev()
      ASoC: soc-core: self contained soc_bind_aux_dev()
      ASoC: soc-core: move soc_probe_link_dais() next to soc_remove_link_dais()
      ASoC: soc-core: self contained soc_probe_link_dais()
      ASoC: soc-core: add new soc_link_init()
      ASoC: soc-core: move soc_probe_dai() next to soc_remove_dai()
      ASoC: soc-core: self contained soc_remove_link_dais()
      ASoC: soc-core: self contained soc_remove_link_components()
      ASoC: soc-core: self contained soc_probe_link_components()
      ASoC: rt1308: make array pd static const, makes object smaller
      ...

commit e1a00b5b253a4f97216b9a33199a863987075162
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 10 22:51:52 2019 +0900

    ALSA: firewire-tascam: check intermediate state of clock status and retry
    
    2 bytes in MSB of register for clock status is zero during intermediate
    state after changing status of sampling clock in models of TASCAM FireWire
    series. The duration of this state differs depending on cases. During the
    state, it's better to retry reading the register for current status of
    the clock.
    
    In current implementation, the intermediate state is checked only when
    getting current sampling transmission frequency, then retry reading.
    This care is required for the other operations to read the register.
    
    This commit moves the codes of check and retry into helper function
    commonly used for operations to read the register.
    
    Fixes: e453df44f0d6 ("ALSA: firewire-tascam: add PCM functionality")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190910135152.29800-3-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit e6e2fe2b8f7a4abd24170225050597ebc9f1427b
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Sep 6 21:55:44 2019 +0900

    ALSA: firewire-tascam: add note for FE-8
    
    TASCAM FE-8 is the rest of model in TASCAM FireWire series. This device
    has no functionality to process audio signal and MIDI messages. Instead,
    it transfers control messages to host system corresponding to operations
    for some faders, buttons and knobs on its surface.
    
    Unlike the other devices in this series, the control messages are
    transmitted by asynchronous transactions. Some registers of device are
    used for registration of destination address for the transaction. The
    transaction includes quadlet-aligned data up to 32 quadlets.
    
    Userspace applications can receive the transaction and parse it for
    control message via Linux FireWire subsystem, without any support by
    ALSA firewire-tascam driver. Therefore the driver gives no support
    for it.
    
    This commit removes placeholder for FE-8 and add some comment for its
    functionalities as notes.
    
    $ python2 linux-firewire-utils/src/crpp < ~/git/am-config-rom/tascam/tascam-fe8.img
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  040f4798  bus_info_length 4, crc_length 15, crc 18328 (should be 14256)
    404  31333934  bus_name "1394"
    408  20ff7002  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 255, max_rec 7 (256)
    40c  00022eff  company_id 00022e     |
    410  a094dcb7  device_id ffa094dcb7  | EUI-64 00022effa094dcb7
    
                   root directory
                   -----------------------------------------------------------------
    414  0004bccc  directory_length 4, crc 48332
    418  0300022e  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  8d000006  --> eui-64 leaf at 438
    424  d1000001  --> unit directory at 428
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  0003eda4  directory_length 3, crc 60836
    42c  1200022e  specifier id
    430  13800001  version
    434  d4000004  --> dependent info directory at 444
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  0002461e  leaf_length 2, crc 17950
    43c  00022eff  company_id 00022e     |
    440  a094dcb7  device_id ffa094dcb7  | EUI-64 00022effa094dcb7
    
                   dependent info directory at 444
                   -----------------------------------------------------------------
    444  0002ae47  directory_length 2, crc 44615
    448  81000002  --> descriptor leaf at 450
    44c  82000006  --> bus dependent info leaf at 464
    
                   descriptor leaf at 450
                   -----------------------------------------------------------------
    450  0004a79e  leaf_length 4, crc 42910
    454  00000000  textual descriptor
    458  00000000  minimal ASCII
    45c  54415343  "TASC"
    460  414d0000  "AM"
    
                   bus dependent info leaf at 464
                   -----------------------------------------------------------------
    464  0004a7d8  leaf_length 4, crc 42968
    468  00000000
    46c  00000000
    470  46452d38
    474  00000000
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190906125544.13800-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 0004654fb14859e49bab66aba881d64f605682a4
Merge: 452a04441b4d 2fd232939365
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Aug 27 10:42:03 2019 -0700

    Merge tag 'sound-5.3-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A collection of small fixes as usual:
    
       - More coverage of USB-audio descriptor sanity checks
    
       - A fix for mute LED regression on Conexant HD-audio codecs
    
       - A few device-specific fixes and quirks for USB-audio and HD-audio
    
       - A fix for (die-hard remaining) possible race in sequencer core
    
       - FireWire oxfw regression fix that was introduced in 5.3-rc1"
    
    * tag 'sound-5.3-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: oxfw: fix to handle correct stream for PCM playback
      ALSA: seq: Fix potential concurrent access to the deleted pool
      ALSA: usb-audio: Check mixer unit bitmap yet more strictly
      ALSA: line6: Fix memory leak at line6_init_pcm() error path
      ALSA: usb-audio: Fix invalid NULL check in snd_emuusb_set_samplerate()
      ALSA: hda/ca0132 - Add new SBZ quirk
      ALSA: usb-audio: Add implicit fb quirk for Behringer UFX1604
      ALSA: hda - Fixes inverted Conexant GPIO mic mute led

commit d412fd056ee31b1d712e7786f97d4e472b342eba
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    commit 1be3c1fae6c1e1f5bb982b255d2034034454527a upstream.
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v2.6.39+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbb4f2d59f392634019e0ff91280fc67434cf9da
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    commit 1be3c1fae6c1e1f5bb982b255d2034034454527a upstream.
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v2.6.39+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 065ddcefa28feadd5cc981d1f3b40af6e67ecad1
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    commit 1be3c1fae6c1e1f5bb982b255d2034034454527a upstream.
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v2.6.39+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc972b6b52e2ddd93b7532cd2213d9c2be5d6340
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    commit 1be3c1fae6c1e1f5bb982b255d2034034454527a upstream.
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v2.6.39+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb5519f28405dd7e082b4f0a73758376775a0ce4
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    commit 1be3c1fae6c1e1f5bb982b255d2034034454527a upstream.
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v2.6.39+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1be3c1fae6c1e1f5bb982b255d2034034454527a
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v2.6.39+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 4cdd5f9186bbe80306e76f11da7ecb0b9720433c
Merge: 2d41ef5432b7 0dcb4efb1095
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jul 9 09:59:43 2019 -0700

    Merge tag 'sound-5.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "Many updates in this development cycle are found in ASoC where it got
      a wide range of changes for the continued refactoring.
    
      Some highlights are below.
    
      ASoC:
    
       - Continued refactoring work by Morimoto-san toward the full
         componentization; the changes are seen allover the places
    
       - Support for force disconnecting muxes in DAPM
    
       - Continued development of ASoC Intel SOF stuff
    
       - New drivers for Cirrus Logic CS47L35, CS47L85 and CS47L90, Conexant
         CX2072X, Realtek RT1011 and RT1308
    
      HD-audio:
    
       - More fixes and adjustments for ASoC SOF HD-audio
    
       - Fix for resume problem on some Realtek codecs
    
      USB-audio:
    
       - A few fixes for the issues reported by syzbot USB fuzzer
    
       - Fix for UAC2 extension unit parser
    
       - Quirks for Line6 Helix, Emgaic Unitor 8
    
      FireWire:
    
       - Lots of code refactoring and fixes in most of its components"
    
    * tag 'sound-5.3-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (626 commits)
      ALSA: firewire-lib: code refactoring for local variables
      ALSA: firewire-lib: code refactoring for post operation to data block counter
      ALSA: firewire-lib: code refactoring for error path of parser for CIP header
      ALSA: firewire-lib: fix different data block counter between probed event and transferred isochronous packet
      ALSA: firewire-lib: fix initial value of data block count for IR context without CIP_DBC_IS_END_EVENT
      ALSA: firewire-lib/fireface: fix initial value of data block counter for IR context with CIP_NO_HEADER
      ALSA: firewire-lib: fix invalid length of rx packet payload for tracepoint events
      ALSA: usb-audio: fix Line6 Helix audio format rates
      firewire-motu: fix wrong reference count for stream functionality at error path of rawmidi interface
      ALSA: firewire-digi00x: fix wrong reference count for stream functionality at error path of rawmidi interface
      ALSA: dice: fix wrong reference count for stream functionality at error path of rawmidi interface
      ALSA: oxfw: fix wrong reference count for stream functionality at error path of rawmidi interface
      ALSA: fireworks: fix wrong reference count for stream functionality at error path of rawmidi interface
      ALSA: bebob: fix wrong reference count for stream functionality at error path of rawmidi interface
      ASoC: SOF: Intel: implement runtime idle for CNL/APL
      ASoC: SOF: add runtime idle callback
      ASoC: hdac_hdmi: report codec link up/down status to bus
      ASoC: SOF: debug: fix possible memory leak in sof_dfsentry_write()
      ASoC: sunxi: sun50i-codec-analog: Add earpiece
      ASoC: rt5665: remove redundant assignment to variable idx
      ...

commit c212ddaee2fd21e8d756dbc3c6119e3259b38fd0
Merge: 6994eefb0053 3450121997ce
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 5 02:03:50 2019 +0900

    Merge tag 'sound-5.2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Here are a collection of small fixes for:
    
       - A race with ASoC HD-audio registration
    
       - LINE6 usb-audio memory overwrite by malformed descriptor
    
       - FireWire MIDI handling
    
       - Missing cast for bit shifts in a few USB-audio quirks
    
       - The wrong function calls in minor OSS sequencer code paths
    
       - A couple of HD-audio quirks"
    
    * tag 'sound-5.2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: line6: Fix write on zero-sized buffer
      ALSA: hda: Fix widget_mutex incomplete protection
      ALSA: firewire-lib/fireworks: fix miss detection of received MIDI messages
      ALSA: seq: fix incorrect order of dest_client/dest_ports arguments
      ALSA: hda/realtek - Change front mic location for Lenovo M710q
      ALSA: usb-audio: fix sign unintended sign extension on left shifts
      ALSA: hda/realtek: Add quirks for several Clevo notebook barebones

commit b5c21c84705dbd96a0fff930d33022a17910b4f4
Merge: 7c2b3629d09d 7fbd1753b64e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jul 1 17:01:00 2019 +0200

    Merge branch 'for-linus' into for-next
    
    This back-merge is necessary for adjusting the latest FireWire fix
    with the recent refactoring in 5.3 development branch.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit bcb46a0e0e5c79291ffbc1e4b5d1d3d119e0f984
Merge: c11fb13a117e 17d304604a88
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jun 14 05:37:06 2019 -1000

    Merge tag 'sound-5.2-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "It might feel like deja vu to receive a bulk of changes at rc5, and it
      happens again; we've got a collection of fixes for ASoC. Most of fixes
      are targeted for the newly merged SOF (Sound Open Firmware) stuff and
      the relevant fixes for Intel platforms.
    
      Other than that, there are a few regression fixes for the recent ASoC
      core changes and HD-audio quirk, as well as a couple of FireWire fixes
      and for other ASoC codecs"
    
    * tag 'sound-5.2-rc5' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (54 commits)
      Revert "ALSA: hda/realtek - Improve the headset mic for Acer Aspire laptops"
      ALSA: ice1712: Check correct return value to snd_i2c_sendbytes (EWS/DMX 6Fire)
      ALSA: oxfw: allow PCM capture for Stanton SCS.1m
      ALSA: firewire-motu: fix destruction of data for isochronous resources
      ASoC: Intel: sst: fix kmalloc call with wrong flags
      ASoC: core: Fix deadlock in snd_soc_instantiate_card()
      SoC: rt274: Fix internal jack assignment in set_jack callback
      ALSA: hdac: fix memory release for SST and SOF drivers
      ASoC: SOF: Intel: hda: use the defined ppcap functions
      ASoC: core: move DAI pre-links initiation to snd_soc_instantiate_card
      ASoC: Intel: cht_bsw_rt5672: fix kernel oops with platform_name override
      ASoC: Intel: cht_bsw_nau8824: fix kernel oops with platform_name override
      ASoC: Intel: bytcht_es8316: fix kernel oops with platform_name override
      ASoC: Intel: cht_bsw_max98090: fix kernel oops with platform_name override
      ASoC: sun4i-i2s: Add offset to RX channel select
      ASoC: sun4i-i2s: Fix sun8i tx channel offset mask
      ASoC: max98090: remove 24-bit format support if RJ is 0
      ASoC: da7219: Fix build error without CONFIG_I2C
      ASoC: SOF: Intel: hda: Fix COMPILE_TEST build error
      ASoC: SOF: fix DSP oops definitions in FW ABI
      ...

commit c5ba1712661233ce0f4666b8c3dee5bb78d380f2
Merge: 20f944965601 6954158a1640
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 30 19:58:59 2019 -0700

    Merge tag 'sound-5.2-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "No big surprises here, just a few device-specific fixes.
    
      HD-audio received several fixes for Acer, Dell, Huawei and other
      laptops as well as the workaround for the new Intel chipset. One
      significant one-liner fix is the disablement of the node-power saving
      on Realtek codecs, which may potentially cover annoying bugs like the
      background noises or click noises on many devices.
    
      Other than that, a fix for FireWire bit definitions, and another fix
      for LINE6 USB audio bug that was discovered by syzkaller"
    
    * tag 'sound-5.2-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: fireface: Use ULL suffixes for 64-bit constants
      ALSA: hda/realtek - Improve the headset mic for Acer Aspire laptops
      ALSA: line6: Assure canceling delayed work at disconnection
      ALSA: hda - Force polling mode on CNL for fixing codec communication
      ALSA: hda/realtek - Enable micmute LED for Huawei laptops
      ALSA: hda/realtek - Set default power save node to 0
      ALSA: hda/realtek - Check headset type by unplug and resume

commit e57ccca1ba33e1d92cc3bbf8b6304a46948844b0
Merge: a2d635decbfa ed97c988bdc6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 9 08:26:55 2019 -0700

    Merge tag 'sound-5.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "The most significant changes at this cycle are the Sound Open Firmware
      support from Intel for the common DSP framework along with its support
      for Intel platforms. It's a door opened to a real "free" firmware (in
      the sense of FOSS), and other parties show interests in it.
    
      In addition to SOF, we've got a bunch of updates and fixes as usual.
      Some highlights are below.
    
      ALSA core:
       - Cleanups and fixes in ALSA timer code to cover some races spotted
         by syzkaller
       - Cleanups and fixes in ALSA sequencer code to cover some races,
         again unsurprisingly, spotted by syzkaller
       - Optimize the common page allocation helper with alloc_pages_exact()
    
      ASoC:
       - Add SOF core support, as well as Intel SOF platform support
       - Generic card driver improvements: support for MCLK/sample rate
         ratio and pin switches
       - A big set of improvements to TLV320AIC32x4 drivers
       - New drivers for Freescale audio mixers, several Intel machines,
         several Mediatek machines, Meson G12A, Spreadtrum compressed audio
         and DMA devices
    
      HD-audio:
       - A few Realtek codec fixes for reducing pop noises
       - Quirks for Chromebooks
       - Workaround for faulty connection report on AMD/Nvidia HDMI
    
      Others:
       - A quirk for Focusrite Scarlett Solo USB-audio
       - Add support for MOTU 8pre FireWire
       - 24bit sample format support in aloop
       - GUS patch format support (finally, over a decade) in native emux
         synth code"
    
    * tag 'sound-5.2-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (375 commits)
      ASoC: SOF: Fix unused variable warnings
      ALSA: line6: toneport: Fix broken usage of timer for delayed execution
      ALSA: aica: Fix a long-time build breakage
      ALSA: hda/realtek - Support low power consumption for ALC256
      ASoC: stm32: i2s: update pcm hardware constraints
      ASoC: codec: hdac_hdmi: no checking monitor in hw_params
      ASoC: mediatek: mt6358: save PGA for mixer control
      ASoC: mediatek: mt6358: save output volume for mixer controls
      ASoC: mediatek: mt6358: initialize setting when ramping volume
      ASoC: SOF: core: fix undefined nocodec reference
      ASoC: SOF: xtensa: fix undefined references
      ASoC: SOF: Propagate sof_get_ctrl_copy_params() error properly
      ALSA: hdea/realtek - Headset fixup for System76 Gazelle (gaze14)
      ALSA: hda/intel: add CometLake PCI IDs
      ALSA: hda/realtek - Support low power consumption for ALC295
      ASoC: rockchip: Fix an uninitialized variable compile warning
      ASoC: SOF: Fix a compile warning with CONFIG_PCI=n
      ASoC: da7219: Fix a compile warning at CONFIG_COMMON_CLK=n
      ASoC: sound/soc/sof/: fix kconfig dependency warning
      ASoC: stm32: spdifrx: change trace level on iec control
      ...

commit ae833c3eefaf9b1e08978048d460bb9ae406acad
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Mar 17 15:49:29 2019 +0900

    ALSA: firewire-motu: use 'version' field of unit directory to identify model
    
    commit 2d012c65a9ca26a0ef87ea0a42f1653dd37155f5 upstream.
    
    Current ALSA firewire-motu driver uses the value of 'model' field
    of unit directory in configuration ROM for modalias for MOTU
    FireWire models. However, as long as I checked, Pre8 and
    828mk3(Hybrid) have the same value for the field (=0x100800).
    
    unit            | version   | model
    --------------- | --------- | ----------
    828mkII         | 0x000003  | 0x101800
    Traveler        | 0x000009  | 0x107800
    Pre8            | 0x00000f  | 0x100800 <-
    828mk3(FW)      | 0x000015  | 0x106800
    AudioExpress    | 0x000033  | 0x104800
    828mk3(Hybrid)  | 0x000035  | 0x100800 <-
    
    When updating firmware for MOTU 8pre FireWire from v1.0.0 to v1.0.3,
    I got change of the value from 0x100800 to 0x103800. On the other
    hand, the value of 'version' field is fixed to 0x00000f. As a quick
    glance, the higher 12 bits of the value of 'version' field represent
    firmware version, while the lower 12 bits is unknown.
    
    By induction, the value of 'version' field represents actual model.
    
    This commit changes modalias to match the value of 'version' field,
    instead of 'model' field. For degug, long name of added sound card
    includes hexadecimal value of 'model' field.
    
    Fixes: 6c5e1ac0e144 ("ALSA: firewire-motu: add support for Motu Traveler")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v4.19+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6339cc5181c0d40f332cff89f65106cd0edf44dc
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Mar 17 15:49:29 2019 +0900

    ALSA: firewire-motu: use 'version' field of unit directory to identify model
    
    commit 2d012c65a9ca26a0ef87ea0a42f1653dd37155f5 upstream.
    
    Current ALSA firewire-motu driver uses the value of 'model' field
    of unit directory in configuration ROM for modalias for MOTU
    FireWire models. However, as long as I checked, Pre8 and
    828mk3(Hybrid) have the same value for the field (=0x100800).
    
    unit            | version   | model
    --------------- | --------- | ----------
    828mkII         | 0x000003  | 0x101800
    Traveler        | 0x000009  | 0x107800
    Pre8            | 0x00000f  | 0x100800 <-
    828mk3(FW)      | 0x000015  | 0x106800
    AudioExpress    | 0x000033  | 0x104800
    828mk3(Hybrid)  | 0x000035  | 0x100800 <-
    
    When updating firmware for MOTU 8pre FireWire from v1.0.0 to v1.0.3,
    I got change of the value from 0x100800 to 0x103800. On the other
    hand, the value of 'version' field is fixed to 0x00000f. As a quick
    glance, the higher 12 bits of the value of 'version' field represent
    firmware version, while the lower 12 bits is unknown.
    
    By induction, the value of 'version' field represents actual model.
    
    This commit changes modalias to match the value of 'version' field,
    instead of 'model' field. For degug, long name of added sound card
    includes hexadecimal value of 'model' field.
    
    Fixes: 6c5e1ac0e144 ("ALSA: firewire-motu: add support for Motu Traveler")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v4.19+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc4f8e91c4ed04a9a972c6e10c158d4b71be3f2f
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Mar 17 20:25:06 2019 +0900

    ALSA: firewire-lib: use 8 byte header for IR context to get isochronous cycle
    
    In kernel API of Linux FireWire subsystem, handlers of isochronous
    receive (IR) context can get context headers as an argument of
    callback. When 4 byte header is used, the context header includes
    isochronous packet header for each packet. When 8 byte header is
    used, it includes isochronous cycle as well.
    
    ALSA IEC 61883-1/6 engine uses 4 byte header, and computes isochronous
    cycle from the cycle of interrupt. The usage of 8 byte header can
    obsolete the computation.
    
    Furthermore, this change works well for a case that a series of
    packet in one interrupt includes skipped isochronous cycle,
    
    This commit uses 8 byte header to handle isochronous cycle.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 35033d8cb71b4dd4fa8d8d28a534af1ee921b9a0
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Mar 17 16:50:24 2019 +0900

    ALSA: firewire-motu: add support MOTU 8pre FireWire
    
    This commit adds support for MOTU 8pre FireWire, which was shipped 2007
    and nowadays already discontinued. Userspace applications can transmit
    and receive PCM frames and MIDI messages for this model via ALSA PCM
    interface and RawMidi/Sequencer interfaces.
    
    Like the other models of MOTU FireWire series, this model has many
    quirks in its CIP.
    
    At first, data channels for two pairs of optical interfaces. At lower
    sampling transmission frequency, i.e. 44.1 and 48.0 kHz, one pair is
    available for ADAT data, thus 8 data chunks are transferred by CIP.
    At middle sampling transmission frequency, i.e.  88.2 and 96.0 kHz,
    two pairs are available to keep 8 chunks for ADAT data, thus CIP
    still includes 8 data chunks.
    
    Apart from data chunks for optical interface, CIP includes fixed number
    of data chunks. In tx stream, two chunks for status message, eight
    chunks for samples from analog 1-8 input, two chunks for mix-return.
    In rx stream, two chunks for control message, two chunks for main 1-2
    output, two chunks for phone 1-2 output, two chunks for dummy 1-2.
    
    CIP header in tx stream includes quirks for its dbs and dbc fields.
    The value of dbs field is fixed to 0x13, against its actual size.
    The value of dbc field is firstly updated to 0x07 from zero, then
    it's incremented continuously according to actual number of data h
    blocks.
    
    Finally, the model has own bits to disable frame fetch.
    
    This commit uses several options to absorb the above quirks.
    
    $ python2 crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  0410b57d  bus_info_length 4, crc_length 16, crc 46461
    404  31333934  bus_name "1394"
    408  20001000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 0, max_rec 1 (4)
    40c  0001f200  company_id 0001f2     |
    410  00083dfb  device_id 0000083dfb  | EUI-64 0001f20000083dfb
    
                   root directory
                   -----------------------------------------------------------------
    414  0004c65c  directory_length 4, crc 50780
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  8d000006  --> eui-64 leaf at 438
    424  d1000001  --> unit directory at 428
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  0003991c  directory_length 3, crc 39196
    42c  120001f2  specifier id
    430  1300000f  version
    434  17103800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  00022681  leaf_length 2, crc 9857
    43c  0001f200  company_id 0001f2     |
    440  00083dfb  device_id 0000083dfb  | EUI-64 0001f20000083dfb
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2d012c65a9ca26a0ef87ea0a42f1653dd37155f5
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Mar 17 15:49:29 2019 +0900

    ALSA: firewire-motu: use 'version' field of unit directory to identify model
    
    Current ALSA firewire-motu driver uses the value of 'model' field
    of unit directory in configuration ROM for modalias for MOTU
    FireWire models. However, as long as I checked, Pre8 and
    828mk3(Hybrid) have the same value for the field (=0x100800).
    
    unit            | version   | model
    --------------- | --------- | ----------
    828mkII         | 0x000003  | 0x101800
    Traveler        | 0x000009  | 0x107800
    Pre8            | 0x00000f  | 0x100800 <-
    828mk3(FW)      | 0x000015  | 0x106800
    AudioExpress    | 0x000033  | 0x104800
    828mk3(Hybrid)  | 0x000035  | 0x100800 <-
    
    When updating firmware for MOTU 8pre FireWire from v1.0.0 to v1.0.3,
    I got change of the value from 0x100800 to 0x103800. On the other
    hand, the value of 'version' field is fixed to 0x00000f. As a quick
    glance, the higher 12 bits of the value of 'version' field represent
    firmware version, while the lower 12 bits is unknown.
    
    By induction, the value of 'version' field represents actual model.
    
    This commit changes modalias to match the value of 'version' field,
    instead of 'model' field. For degug, long name of added sound card
    includes hexadecimal value of 'model' field.
    
    Fixes: 6c5e1ac0e144 ("ALSA: firewire-motu: add support for Motu Traveler")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v4.19+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1871002dd214db617f2e9db15224938130abb14a
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Nov 13 12:01:30 2018 +0900

    ALSA: oxfw: add support for APOGEE duet FireWire
    
    [ Upstream commit fba43f454cdf9caa3185219d116bd2a6e6354552 ]
    
    This commit adds support for APOGEE duet FireWire, launched 2007, already
    discontinued. This model uses Oxford Semiconductor FW971 as its
    communication engine. Below is information on Configuration ROM of this
    unit. The unit supports some AV/C commands defined by Audio subunit
    specification and vendor dependent commands.
    
    $ ./hinawa-config-rom-printer /dev/fw1
    { 'bus-info': { 'adj': False,
                    'bmc': False,
                    'chip_ID': 42949742248,
                    'cmc': False,
                    'cyc_clk_acc': 255,
                    'generation': 0,
                    'imc': False,
                    'isc': True,
                    'link_spd': 3,
                    'max_ROM': 0,
                    'max_rec': 64,
                    'name': '1394',
                    'node_vendor_ID': 987,
                    'pmc': False},
      'root-directory': [ ['VENDOR', 987],
                          ['DESCRIPTOR', 'Apogee Electronics'],
                          ['MODEL', 122333],
                          ['DESCRIPTOR', 'Duet'],
                          [ 'NODE_CAPABILITIES',
                            { 'addressing': {'64': True, 'fix': True, 'prv': False},
                              'misc': {'int': False, 'ms': False, 'spt': True},
                              'state': { 'atn': False,
                                         'ded': False,
                                         'drq': True,
                                         'elo': False,
                                         'init': False,
                                         'lst': True,
                                         'off': False},
                              'testing': {'bas': False, 'ext': False}}],
                          [ 'UNIT',
                            [ ['SPECIFIER_ID', 41005],
                              ['VERSION', 65537],
                              ['MODEL', 122333],
                              ['DESCRIPTOR', 'Duet']]]]}
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a72a4f82f90a5d32d8fd6b00776d2c7d756cbb02
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Nov 13 12:01:30 2018 +0900

    ALSA: oxfw: add support for APOGEE duet FireWire
    
    [ Upstream commit fba43f454cdf9caa3185219d116bd2a6e6354552 ]
    
    This commit adds support for APOGEE duet FireWire, launched 2007, already
    discontinued. This model uses Oxford Semiconductor FW971 as its
    communication engine. Below is information on Configuration ROM of this
    unit. The unit supports some AV/C commands defined by Audio subunit
    specification and vendor dependent commands.
    
    $ ./hinawa-config-rom-printer /dev/fw1
    { 'bus-info': { 'adj': False,
                    'bmc': False,
                    'chip_ID': 42949742248,
                    'cmc': False,
                    'cyc_clk_acc': 255,
                    'generation': 0,
                    'imc': False,
                    'isc': True,
                    'link_spd': 3,
                    'max_ROM': 0,
                    'max_rec': 64,
                    'name': '1394',
                    'node_vendor_ID': 987,
                    'pmc': False},
      'root-directory': [ ['VENDOR', 987],
                          ['DESCRIPTOR', 'Apogee Electronics'],
                          ['MODEL', 122333],
                          ['DESCRIPTOR', 'Duet'],
                          [ 'NODE_CAPABILITIES',
                            { 'addressing': {'64': True, 'fix': True, 'prv': False},
                              'misc': {'int': False, 'ms': False, 'spt': True},
                              'state': { 'atn': False,
                                         'ded': False,
                                         'drq': True,
                                         'elo': False,
                                         'init': False,
                                         'lst': True,
                                         'off': False},
                              'testing': {'bas': False, 'ext': False}}],
                          [ 'UNIT',
                            [ ['SPECIFIER_ID', 41005],
                              ['VERSION', 65537],
                              ['MODEL', 122333],
                              ['DESCRIPTOR', 'Duet']]]]}
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3945c33a608ee76c14eed35cdedaaffa5df03a18
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Nov 13 12:01:30 2018 +0900

    ALSA: oxfw: add support for APOGEE duet FireWire
    
    [ Upstream commit fba43f454cdf9caa3185219d116bd2a6e6354552 ]
    
    This commit adds support for APOGEE duet FireWire, launched 2007, already
    discontinued. This model uses Oxford Semiconductor FW971 as its
    communication engine. Below is information on Configuration ROM of this
    unit. The unit supports some AV/C commands defined by Audio subunit
    specification and vendor dependent commands.
    
    $ ./hinawa-config-rom-printer /dev/fw1
    { 'bus-info': { 'adj': False,
                    'bmc': False,
                    'chip_ID': 42949742248,
                    'cmc': False,
                    'cyc_clk_acc': 255,
                    'generation': 0,
                    'imc': False,
                    'isc': True,
                    'link_spd': 3,
                    'max_ROM': 0,
                    'max_rec': 64,
                    'name': '1394',
                    'node_vendor_ID': 987,
                    'pmc': False},
      'root-directory': [ ['VENDOR', 987],
                          ['DESCRIPTOR', 'Apogee Electronics'],
                          ['MODEL', 122333],
                          ['DESCRIPTOR', 'Duet'],
                          [ 'NODE_CAPABILITIES',
                            { 'addressing': {'64': True, 'fix': True, 'prv': False},
                              'misc': {'int': False, 'ms': False, 'spt': True},
                              'state': { 'atn': False,
                                         'ded': False,
                                         'drq': True,
                                         'elo': False,
                                         'init': False,
                                         'lst': True,
                                         'off': False},
                              'testing': {'bas': False, 'ext': False}}],
                          [ 'UNIT',
                            [ ['SPECIFIER_ID', 41005],
                              ['VERSION', 65537],
                              ['MODEL', 122333],
                              ['DESCRIPTOR', 'Duet']]]]}
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f20f89a859e741788e651e20a788c4571401133b
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Nov 13 12:01:30 2018 +0900

    ALSA: oxfw: add support for APOGEE duet FireWire
    
    [ Upstream commit fba43f454cdf9caa3185219d116bd2a6e6354552 ]
    
    This commit adds support for APOGEE duet FireWire, launched 2007, already
    discontinued. This model uses Oxford Semiconductor FW971 as its
    communication engine. Below is information on Configuration ROM of this
    unit. The unit supports some AV/C commands defined by Audio subunit
    specification and vendor dependent commands.
    
    $ ./hinawa-config-rom-printer /dev/fw1
    { 'bus-info': { 'adj': False,
                    'bmc': False,
                    'chip_ID': 42949742248,
                    'cmc': False,
                    'cyc_clk_acc': 255,
                    'generation': 0,
                    'imc': False,
                    'isc': True,
                    'link_spd': 3,
                    'max_ROM': 0,
                    'max_rec': 64,
                    'name': '1394',
                    'node_vendor_ID': 987,
                    'pmc': False},
      'root-directory': [ ['VENDOR', 987],
                          ['DESCRIPTOR', 'Apogee Electronics'],
                          ['MODEL', 122333],
                          ['DESCRIPTOR', 'Duet'],
                          [ 'NODE_CAPABILITIES',
                            { 'addressing': {'64': True, 'fix': True, 'prv': False},
                              'misc': {'int': False, 'ms': False, 'spt': True},
                              'state': { 'atn': False,
                                         'ded': False,
                                         'drq': True,
                                         'elo': False,
                                         'init': False,
                                         'lst': True,
                                         'off': False},
                              'testing': {'bas': False, 'ext': False}}],
                          [ 'UNIT',
                            [ ['SPECIFIER_ID', 41005],
                              ['VERSION', 65537],
                              ['MODEL', 122333],
                              ['DESCRIPTOR', 'Duet']]]]}
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e61e7b5c4de2bea534438bd7a008accd85492b0
Merge: 996680d461f8 d82b51c855a2
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Dec 25 13:19:10 2018 -0800

    Merge tag 'sound-4.21-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "There are no intensive changes in both ALSA and ASoC core parts while
      rather most of changes are a bunch of driver fixes and updates. A
      large diff pattern appears in ASoC TI part which now merges both OMAP
      and DaVinci stuff, but the rest spreads allover the places.
    
      Note that this pull request includes also some updates for LED trigger
      and platform drivers for mute LEDs, appearing in the diffstat as well.
    
      Some highlights:
    
      ASoC:
       - Preparatory work for merging the audio-graph and audio-graph-scu
         cards
       - A merge of TI OMAP and DaVinci directories, as both product lines
         get merged together. Also including a few architecture changes as
         well.
       - Major cleanups of the Maxim MAX9867 driver
       - Small fixes for tablets & co with Intel BYT/CHT chips
       - Lots of rsnd updates as usual
       - Support for Asahi Kaesi AKM4118, AMD ACP3x, Intel platforms with
         RT5660, Meson AXG S/PDIF inputs, several Qualcomm IPs and Xilinx
         I2S controllers
    
      HD-audio:
       - Introduce audio-mute LED trigger for replacing the former hackish
         dynamic binding
       - Huawei WMI hotkey and mute LED support
       - Refactoring of PM code and display power controls
       - Headset button support in the generic jack code
       - A few updates for Tegra
       - Fixups for HP EliteBook and ASUS UX391UA
       - Lots of updates for Intel ASoC HD-audio, including the improved DSP
         detection and the fallback binding from ASoC SST to legacy HD-audio
         controller drivers
    
      Others:
       - Updates for FireWire TASCAM and Fireface devices, some other fixes
       - A few potential Spectre v1 fixes that are all trivial"
    
    * tag 'sound-4.21-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (280 commits)
      ALSA: HD-Audio: SKL+: force HDaudio legacy or SKL+ driver selection
      ALSA: HD-Audio: SKL+: abort probe if DSP is present and Skylake driver selected
      ALSA: HDA: export process_unsol_events()
      ALSA: hda/realtek: Enable audio jacks of ASUS UX391UA with ALC294
      ALSA: bebob: fix model-id of unit for Apogee Ensemble
      ALSA: emu10k1: Fix potential Spectre v1 vulnerabilities
      ALSA: rme9652: Fix potential Spectre v1 vulnerability
      ASoC: ti: Kconfig: Remove the deprecated options
      ARM: davinci_all_defconfig: Update the audio options
      ARM: omap1_defconfig: Do not select ASoC by default
      ARM: omap2plus_defconfig: Update the audio options
      ARM: davinci: dm365-evm: Update for the new ASoC Kcofnig options
      ARM: OMAP2: Update for new MCBSP Kconfig option
      ARM: OMAP1: Makefile: Update for new MCBSP Kconfig option
      MAINTAINERS: Add entry for sound/soc/ti and update the OMAP audio support
      ASoC: ti: Merge davinci and omap directories
      ALSA: hda: add mute LED support for HP EliteBook 840 G4
      ALSA: fireface: code refactoring to handle model-specific registers
      ALSA: fireface: add support for packet streaming on Fireface 800
      ALSA: fireface: allocate isochronous resources in mode-specific implementation
      ...

commit d7167422433cdb61e58baee9c25543d0eba95c9d
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Nov 23 13:13:05 2018 +0900

    ALSA: firewire-tascam: queue events for change of control surface
    
    Units of TASCAM FireWire series transfer image of states of the unit in
    tx isochronous packets. Demultiplexing of the states from the packets
    is done in software interrupt context regardless of any process context.
    In a view of userspace applications, it needs to have notification
    mechanism to catch change of the states.
    
    This commit implements a queue to store events for the notification. The
    image of states includes fluctuating data such as level of gain/volume
    for physical input/output and position of knobs. Therefore the events
    are queued corresponding to some control features only.
    
    Furthermore, the queued events are planned to be consumed by userspace
    applications via ALSA hwdep interface. This commit suppresses event
    queueing when no applications open the hwdep interface.
    
    However, the queue is maintained in an optimistic scenario, thus without
    any care against overrrun. This is reasonable because target events are
    useless just to handle PCM frames. It starts queueing when an usespace
    application opens hwdep interface, thus it's expected to read the queued
    events steadily.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 33b2e1442aeaacabb4e29f8adb31469e87599b16
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Nov 23 13:13:03 2018 +0900

    ALSA: firewire-tascam: pick up data of state from tx isochronous pakcets
    
    Units of TASCAM FireWire series multiplex PCM frames and state of
    control surface into the same tx isochronous packets. One isochronous
    packet includes a part of the state in a quadlet data. An image of the
    state consists of 64 quadlet data.
    
    This commit demultiplexes the state from tx isochronous packets.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit fba43f454cdf9caa3185219d116bd2a6e6354552
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Nov 13 12:01:30 2018 +0900

    ALSA: oxfw: add support for APOGEE duet FireWire
    
    This commit adds support for APOGEE duet FireWire, launched 2007, already
    discontinued. This model uses Oxford Semiconductor FW971 as its
    communication engine. Below is information on Configuration ROM of this
    unit. The unit supports some AV/C commands defined by Audio subunit
    specification and vendor dependent commands.
    
    $ ./hinawa-config-rom-printer /dev/fw1
    { 'bus-info': { 'adj': False,
                    'bmc': False,
                    'chip_ID': 42949742248,
                    'cmc': False,
                    'cyc_clk_acc': 255,
                    'generation': 0,
                    'imc': False,
                    'isc': True,
                    'link_spd': 3,
                    'max_ROM': 0,
                    'max_rec': 64,
                    'name': '1394',
                    'node_vendor_ID': 987,
                    'pmc': False},
      'root-directory': [ ['VENDOR', 987],
                          ['DESCRIPTOR', 'Apogee Electronics'],
                          ['MODEL', 122333],
                          ['DESCRIPTOR', 'Duet'],
                          [ 'NODE_CAPABILITIES',
                            { 'addressing': {'64': True, 'fix': True, 'prv': False},
                              'misc': {'int': False, 'ms': False, 'spt': True},
                              'state': { 'atn': False,
                                         'ded': False,
                                         'drq': True,
                                         'elo': False,
                                         'init': False,
                                         'lst': True,
                                         'off': False},
                              'testing': {'bas': False, 'ext': False}}],
                          [ 'UNIT',
                            [ ['SPECIFIER_ID', 41005],
                              ['VERSION', 65537],
                              ['MODEL', 122333],
                              ['DESCRIPTOR', 'Duet']]]]}
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 54480aa7fac324c1c50519e69287cf49aa2f3afc
Merge: bc6080ae38b3 826b5de90c0b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 2 11:02:52 2018 -0700

    Merge tag 'sound-fix-4.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A few device-specific fixes: a fix for SPDIF on old Creative PCI
      board, and two additional fixes for the recent changes in FireWire
      audio stack"
    
    * tag 'sound-fix-4.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: firewire-lib: fix insufficient PCM rule for period/buffer size
      ALSA: ca0106: Disable IZD on SB0570 DAC to fix audio pops
      ALSA: dice: fix to wait for releases of all ALSA character devices

commit 3acbd2de6bc3af215c6ed7732dfc097d1e238503
Merge: d49f8a52b15b de7d83da84bd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 25 09:00:15 2018 -0700

    Merge tag 'sound-4.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "There have been little changes in ALSA core stuff, but ASoC core still
      kept rolling for the continued restructuring. The rest are lots of
      small driver-specific changes and some minor API updates. Here are
      highlights:
    
      General:
      - Appropriate fall-through annotations everywhere
      - Some code cleanup in memalloc code, handling non-cacahed pages more
        commonly in the helper
      - Deployment of SNDRV_PCM_INFO_SYNC_APPLPTR flag consistently
    
      Drivers:
      - More HD-audio CA0132 codec improvement for supporting other Creative
        boards
      - Plumbing legacy HD-audio codecs as ASoC BE on Intel SST; this will
        give move support of existing HD-audio devices with DSP
      - A few device-specific HD-audio quirks as usual
      - New quirk for RME CC devices and correction for B&W PX for USB-audio
      - FireWire: code refactoring including devres usages
    
      ASoC Core:
      - Continued componentization works; it's almost done!
      - A bunch of new for_each_foo macros
      - Cleanups and fixes in DAPM code
    
      ASoC Drivers:
      - MCLK support for several different devices, including CS42L51, STM32
        SAI, and MAX98373
      - Support for Allwinner A64 CODEC analog, Intel boards with DA7219 and
        MAX98927, Meson AXG PDM inputs, Nuvoton NAU8822, Renesas R8A7744 and
        TI PCM3060"
    
    * tag 'sound-4.20-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (299 commits)
      ASoC: stm32: sai: fix master clock naming
      ASoC: stm32: add clock dependency for sai
      ALSA: hda/ca0132 - Actually fix microphone issue
      ASoC: sun4i-i2s: move code from startup/shutdown hooks into pm_runtime hooks
      ASoC: wm2000: Remove wm2000_read helper function
      ASoC: cs42l51: fix mclk support
      ASoC: wm_adsp: Log addresses as 8 digits in wm_adsp_buffer_populate
      ASoC: wm_adsp: Rename memory fields in wm_adsp_buffer
      ASoC: cs42l51: add mclk support
      ASoC: stm32: sai: set sai as mclk clock provider
      ASoC: dt-bindings: add mclk support to cs42l51
      ASoC: dt-bindings: add mclk provider support to stm32 sai
      ASoC: soc-core: fix trivial checkpatch issues
      ASoC: dapm: Add support for hw_free on CODEC to CODEC links
      ASoC: Intel: kbl_da7219_max98927: minor white space clean up
      ALSA: i2c/cs8427: Fix int to char conversion
      ALSA: doc: Brush up the old writing-an-alsa-driver
      ASoC: rsnd: tidyup SSICR::SWSP for TDM
      ASoC: rsnd: enable TDM settings for SSI parent
      ASoC: pcm3168a: add hw constraint for capture channel
      ...

commit 4a9a72e0db5e584267944f4d868f46419b2fab59
Merge: 2e75b676c328 709ae62e8e6d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Oct 4 07:52:58 2018 +0200

    Merge branch 'for-linus' into for-next
    
    Back-merge 4.19-devel branch into 4.20 for applying FireWire patches
    cleanly.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2f4830ef96d21e144b742c394eb12888b0e233cc
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Sep 4 17:02:25 2018 -0700

    FireWire: add driver-api Introduction section
    
    Replace the Introduction section's TBD with some useful overview text.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: linux-doc@vger.kernel.org
    Cc: linux-scsi@vger.kernel.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>

commit ea2ae0ecc9ad8c47ca25837823cc25679a1e4d1a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Sep 4 17:02:24 2018 -0700

    FireWire: add a Documentation driver-api chapter
    
    Add a basic Firewire/IEEE 1394 driver API chapter to the Linux
    kernel documentation.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: linux-doc@vger.kernel.org
    Cc: linux-scsi@vger.kernel.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>

commit 226b18ad5589550e989afce6b293580abc880a79
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Sep 4 17:02:23 2018 -0700

    FireWire: clean up core-transaction.c kernel-doc
    
    Clean up kernel-doc warnings in <drivers/firewire/core-transaction.c>
    so that it can be added to a Firewire/IEEE 1394 driver-api chapter
    without adding lots of noisy warnings to the documentation build.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: linux-doc@vger.kernel.org
    Cc: linux-scsi@vger.kernel.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>

commit 48f02b88c82b5aaf51adbce0932e47a3044e35d4
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Sep 4 17:02:22 2018 -0700

    FireWire: clean up core-iso.c kernel-doc
    
    Clean up kernel-doc warnings in <drivers/firewire/core-iso.c> so that
    it can be added to a Firewire/IEEE 1394 driver-api chapter
    without adding lots of noisy warnings to the documentation build.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: linux-doc@vger.kernel.org
    Cc: linux-scsi@vger.kernel.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>

commit 9a40068220cb6ef15785a82155f38298d5ee9d35
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Sep 4 17:02:21 2018 -0700

    FireWire: clean up firewire-cdev.h kernel-doc
    
    Clean up kernel-doc warnings in <linux/firewire-cdev.h> so that
    it can be added to a Firewire/IEEE 1394 driver-api chapter
    without adding lots of noisy warnings to the documentation build.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: linux-doc@vger.kernel.org
    Cc: linux-scsi@vger.kernel.org
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: "James E.J. Bottomley" <jejb@linux.vnet.ibm.com>
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>

commit 126f7051b4daa3716d9af2851dcb55316e4c2b25
Merge: 135c5504a600 d4d5a1cd298e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 6 09:08:38 2018 -0700

    Merge tag 'sound-4.18-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "We've got many code additions at this cycle as a result of quite a few
      new drivers. Below are highlights:
    
      Core stuff:
       - Fix the long-standing issue with the device registration order; the
         control device is now registered at last
       - PCM locking code cleanups for RT kernels
       - Fixes for possible races in ALSA timer resolution accesses
       - TLV offset definitions in uapi
    
      ASoC:
       - Many fixes for the topology stuff, including fixes for v4 ABI
         compatibility
       - Lots of cleanups / quirks for Intel platforms based on Realtek
         CODECs
       - Continued componentization works, removing legacy CODEC stuff
       - Conversion of OMAP DMA to the new, more standard SDMA-PCM driver
       - Fixes and updates to Cirrus Logic SoC drivers
       - New Qualcomm DSP support
       - New drivers for Analog SSM2305, Atmel I2S controllers, Mediatek
         MT6351, MT6797 and MT7622, Qualcomm DSPs, Realtek RT1305, RT1306
         and RT5668 and TI TSCS454
    
      HD-audio:
       - Finally better support for some CA0132 boards, allowing Windows
         firmware
       - HP Spectre x360 support along with a bulk of COEF stuff
       - Blacklisting power save default some known boards reported on
         Fedora
    
      USB-audio:
       - Continued improvements on UAC3 support; now BADD is supported
       - Fixes / improvements for Dell WD15 dock
       - Allow DMA coherent pages for PCM buffers for ARCH, MIPS & co
    
      Others:
       - New Xen sound frontend driver support
       - Cache implementation and other improvements for FireWire DICE
       - Conversions to octal permissions in allover places"
    
    * tag 'sound-4.18-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (386 commits)
      ASoC: dapm: delete dapm_kcontrol_data paths list before freeing it
      ALSA: usb-audio: remove redundant check on err
      ASoC: topology: Move skl-tplg-interface.h to uapi
      ASoC: topology: Move v4 manifest header data structures to uapi
      ASoC: topology: Improve backwards compatibility with v4 topology files
      ALSA: pci/hda: Remove unused, broken, header file
      ASoC: TSCS454: Add Support
      ASoC: Intel: kbl: Move codec sysclk config to codec_init function
      ASoC: simple-card: set cpu dai clk in hw_params
      ALSA: hda - Handle kzalloc() failure in snd_hda_attach_pcm_stream()
      ALSA: oxygen: use match_string() helper
      ASoC: dapm: use match_string() helper
      ASoC: max98095: use match_string() helper
      ASoC: max98088: use match_string() helper
      ASoC: Intel: bytcr_rt5651: Set card long_name based on quirks
      ASoC: mt6797-mt6351: add hostless phone call path
      ASoC: mt6797: add Hostless DAI
      ASoC: mt6797: add PCM interface
      ASoC: mediatek: export mtk-afe symbols as needed
      ASoC: codecs: PCM1789: include gpio/consumer.h
      ...

commit 7ff5000268355c63dc948ecb01f4de17987586e5
Merge: ee7141c929b3 0f925660a7bc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Apr 27 09:29:18 2018 -0700

    Merge tag 'sound-4.17-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "A significant amount of fixes have been piled up at this time.
    
       - Possible Spectre v1 coverage in OSS sequencer API, control API,
         HD-audio hwdep ioctl, ASIHPI hwdep ioctl, OPL3, and HDSPM/RME
         channel_info API.
    
       - A regression fix in PCM delay reporting that happened at the code
         refactoring for the set_fs() removal
    
       - The long-standing bug in PCM sync_ptr ioctl that missed the audio
         timestamp field
    
       - USB-audio regression fixes due to the recent UAC2 jack support
    
       - vm_fault_t conversions in a couple of places
    
       - ASoC topology API fixes
    
       - Assorted driver fixes:
          * ASoC rsnd, FSL, Intel SST, DMIC, AMD, ADAU17x1, Realtek codec
          * FireWire typo fix
          * HD-audio quirks and USB-audio Dell fixup
          * USB-audio UAC3 corrections"
    
    * tag 'sound-4.17-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (35 commits)
      ALSA: dice: fix error path to destroy initialized stream data
      ALSA: hda - Skip jack and others for non-existing PCM streams
      ALSA: hda/realtek - change the location for one of two front mics
      ALSA: rme9652: Hardening for potential Spectre v1
      ALSA: hdspm: Hardening for potential Spectre v1
      ALSA: asihpi: Hardening for potential Spectre v1
      ALSA: opl3: Hardening for potential Spectre v1
      ALSA: hda: Hardening for potential Spectre v1
      ALSA: control: Hardening for potential Spectre v1
      ALSA: seq: oss: Hardening for potential Spectre v1
      ALSA: seq: oss: Fix unbalanced use lock for synth MIDI device
      ALSA: hda/realtek - Update ALC255 depop optimize
      ALSA: hda/realtek - Add some fixes for ALC233
      ALSA: pcm: Change return type to vm_fault_t
      ALSA: usx2y: Change return type to vm_fault_t
      ALSA: usb-audio: ADC3: Fix channel mapping conversion for ADC3.
      ALSA: dice: fix OUI for TC group
      ALSA: usb-audio: Skip broken EU on Dell dock USB-audio
      ALSA: usb-audio: Fix missing endian conversion
      ALSA: usb-audio: Fix forgotten conversion of control query functions
      ...

commit c1a36101040a71dbc42afca5e329048042e4afef
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Tue Apr 24 22:24:32 2018 +0900

    ALSA: dice: improve support for ancient firmware for DICE
    
    In early stage of firmware SDK, DICE seems to lose its backward
    compatibility due to some registers on global address section. I found
    this with Alesis Multimix 12 FireWire with ancient firmware (approx.
    shipped version).
    
    According to retrieved log from the unit, global section has 96 byte
    space. On the other hand, current version of ALSA dice driver assumes
    that all of supported unit has at least 100 byte space.
    
    $ ./firewire-request /dev/fw1 read 0xffffe0000000 28
    result: 000: 00 00 00 0a 00 00 00 18 00 00 00 22 00 00 00 8a
    result: 010: 00 00 00 ac 00 00 01 12 00 00 00 00 00 00 00 00
    result: 020: 00 00 00 00 00 00 00 00
    
    This commit adds support for the ancient firmware. Check of global section
    is loosened to accept the smaller space. The lack of information is
    already compensated by hard-coded parameters.
    
    I experienced that the latest version of Windows driver for this model
    can't handle this unit, too. This means that TCAT releases firmware SDK
    without backward compatibility for the ancient firmware.
    
    Below list is a early history of driver/firmware package released by
    Alesis. I investigated on wayback machine on Internet Archive:
     * Unknown: PAL v1.0.41.2, firmware v1.0.3
     * Mar 2006: PAL v1.54.0, firmware v1.0.4
     * Dec 2006: PAL v2.0.0.2, firmware v2.0
     * Jun 2007: PAL v3.0.41.5, firmware v2.0
     * Jul 2007: PAL v3.0.56.2. firmware v2.0
     * Jan 2008: PAL v3.0.81.1080, firmware v2.0
    
    If I can assume that firmware version is the same as DICE version, DICE
    version for the issued firmware may be v1.0.3. According to code base of
    userspace driver project (FFADO), I can read DICE v1.0.4 supports global
    space larger than 100 byte. I guess the smaller space of global section is
    a feature of DICE v1.0.3.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 3a93d082bacf887b47737c4b75c083dea7570832
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Aug 20 21:25:04 2017 +0900

    ALSA: firewire-motu: add support for MOTU Audio Express
    
    MOTU Audio Express is one of third generation in MOTU FireWire
    series, produced in 2011. This model consists of three chips:
     * TI TSB41AB2 (Physical layer for IEEE 1394 bus)
     * Microchip USB3300 (Hi-Speed USB Device with ULPI interface)
     * Xilinx Spartan-3A FPGA, XC3S400A (Link layer for IEEE 1394 bus, packet
       processing and data block processing layer)
    
    This commit adds support for this model. As I expected, it works with
    current implementaion of protocol version 3. On the other hand, the unit
    has a quirk to request subaction originated by any driver.
    
    11:45:51.287643 firewire_ohci 0000:03:00.0: AT spd 2 tl 1f, ffc1 -> ffc0, -reserved-, QW req, fffff0000b14 = 02000200
    11:45:51.289193 firewire_ohci 0000:03:00.0: AR spd 2 tl 1f, ffc0 -> ffc1, ack_complete, W resp
    11:45:51.289381 fireire_core 0000:03:00.0: unsolicited response (source ffc0, tlabel 1f)
    11:45:51.313071 firewire_ohci 0000:03:00.0: AT spd 2 tl 20, ffc1 -> ffc0, ack_pending , QW req, fffff0000b14 = 02000200
    11:45:51.314539 firewire_ohci 0000:03:00.0: AR spd 2 tl 20, ffc0 -> ffc1, ack_complete, W resp
    
    In 1394 OHCI (rev.1.1), after OUTPUT_LAST* descriptors is processed,
    'xferStaus' field is filled with 'ContextControl[0:15]' (see clause 7.1.3).
    5 bits in LSB side of the field has ack code in acknowledge from the unit
    (see clause 7.2.2). A list of the code is shown in Table 3-2.
    
    As long as I investigated, in a case of the '-reserved-' acknowledge
    message from the unit, the field has 0x10. On the table, this value is
    'Reserved for definition by future 1394 standards'. As long as I know,
    any specifications of IEEE 1394 has no such extensions, thus the unit is
    out of specification. Besides, I note that the unit does not always
    acknowledge with the invalid code. I guess this is a bug of firmware. I
    confirmed the bug in firmware version 1.04 and this is the latest one.
    
    $ cd linux-firewire-utils
    $ python2 ./src/crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  0410a756  bus_info_length 4, crc_length 16, crc 42838
    404  31333934  bus_name "1394"
    408  20ff7000  irmc 0, cmc 0, isc 1, bmc 0, cyc_clk_acc 255, max_rec 7 (256)
    40c  0001f200  company_id 0001f2     |
    410  000a8a7b  device_id 00000a8a7b  | EUI-64 0001f200000a8a7b
    
                   root directory
                   -----------------------------------------------------------------
    414  0004ef04  directory_length 4, crc 61188
    418  030001f2  vendor
    41c  0c0083c0  node capabilities per IEEE 1394
    420  d1000002  --> unit directory at 428
    424  8d000005  --> eui-64 leaf at 438
    
                   unit directory at 428
                   -----------------------------------------------------------------
    428  00031680  directory_length 3, crc 5760
    42c  120001f2  specifier id
    430  13000033  version
    434  17104800  model
    
                   eui-64 leaf at 438
                   -----------------------------------------------------------------
    438  00025ef3  leaf_length 2, crc 24307
    43c  0001f200  company_id 0001f2     |
    440  000a8a7b  device_id 00000a8a7b  | EUI-64 0001f200000a8a7b
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 8b460c76bd17128db90d69a3f8b4ad2ee744d118
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Aug 20 21:25:03 2017 +0900

    ALSA: firewire-motu: add specification flag for position of flag for MIDI messages
    
    In protocols of MOTU FireWire series, when transferring MIDI messages,
    transmitter set existence flag to one byte on first several quadlets. The
    position differs depending on protocols and models, however two cases are
    confirmed; in 5th byte and 8th byte from MSB side.
    
    This commit adds a series of specification flag to describe them. When
    the existence flag is in the 5th byte, SND_MOTU_SPEC_[R|T]X_MIDI_2ND_Q is
    used. Else, another set of the flag is used. Here, '_Q' means quadlet.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 221656e7c4ce342b99c31eca96c1cbb6d1dce45f
Merge: 2f34c1231bfc a5c3b32a1146
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 3 11:58:59 2017 -0700

    Merge tag 'sound-4.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "It was a relatively calm development cycle, and no scaring changes are
      seen in both core and driver sides. Here are some highlights:
    
      ASoC:
       - A new API for hooking up jacks more generically and easily
    
       - Card longname is set based on DMI for a unique UCM profile
    
       - Lots of Intel driver fixes: Atom, Broxton, Skylake and newer chips
    
       - New drivers for Cirrus CS35L35, DIO DIO2125, Everest ES7132,
         HiSilicon hi6210, Maxim MAX98927, MT2701 systems with WM8960,
         Nuvoton NAU8824, Odroid systems, ST STM32 SAI controllers and x86
         systems with DA7213
    
      HD-audio:
       - Many new quirks to support headset for various devices (mostly ASUS
         ones) as usual
    
       - Support for dual codecs on some Gigabyte mobos and Lenovo laptop
    
       - Improvement on PCM position reporting for Skylake and newer
    
      FireWire:
       - New drivers for MOTU and RME Fireface series
    
       - Updates for Digidesign Digi00x and TASCAM series
    
       - Support for tracepoints
    
      Others:
       - USB-audio: improved support for quirk_alias option
    
       - Cleanups, constification allover the places"
    
    * tag 'sound-4.12-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (299 commits)
      ASoC: codec: wm8960: Relax bit clock computation when using PLL
      ASoC: codec: wm9860: avoid maybe-uninitialized warning
      ASoC: nau8824: leave Class D gain at chip default
      ASoC: nau8824: rename controls to match DAPM controls
      ASoC: Intel: Skylake: Return negative error code
      ASoC: Intel: Skylake: Fix unused variable warning
      ASoC: Intel: Skylake: fix uninitialized pointer use
      ASoC: sti: Fix error handling if of_clk_get() fails
      ASoC: cs4271: configure reset GPIO as output
      ASoC: dwc: Disallow building designware_pcm as a module
      ALSA: ali5451: fix spelling mistake in "ali_capture_preapre"
      ASoC: stm32: add SAI driver
      ASoC: stm32: add bindings for SAI
      ASoC: Intel: Skylake: Add loadable module support on KBL platform
      ASoC: Intel: Skylake: Modify load_lib_ipc arguments for a nowait version
      ASoC: Intel: Skylake: Register dsp_fw_ops for kabylake
      ASoC: Intel: Skylake: Modify arguments to reuse module transfer function
      ASoC: Intel: Skylake: Commonize library load
      ASoC: Intel: Skylake: Move sst common initialization to a helper function
      ASoC: nau8824: new driver
      ...

commit ae369e559f16c5245d6b987c43799179af16e4d6
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:32 2017 +0900

    ALSA: firewire-tascam: support drain callback for MIDI playback substream
    
    ALSA driver for TASCAM FireWire series transfers MIDI messages in system
    workqueue. In current design of the driver, applications should wait for
    sequence of transmission when they close ALSA rawmidi character devices.
    However, when considering design of rawmidi interface, it's preferable
    to wait in drain ioctl.
    
    This commit adds support for the drain ioctl to wait for the end of
    the transmission.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1f94205d2225339c77e64d5872ec575ee2815720
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:31 2017 +0900

    ALSA: firewire-tascam: move message parameters for async midi port
    
    Units on TASCAM FireWire series handle MIDI messages with support for
    running status. Drivers for the series should remember current running
    status and transfer valid MIDI messages. For this purpose, current
    ALSA driver for the series has some members in its top-level structure.
    This is due to better abstraction of async midi port. Nowadays, the
    abstraction was localized just for the driver.
    
    This commit moves the members to structure for async midi port.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 3e7dc65ca001a6e40e78b912c6146ec013a3b49a
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:30 2017 +0900

    ALSA: firewire-tascam: initialize parameters at open of rawmidi character devices
    
    In current design of ALSA driver for TASCAM FireWire series, initialization
    of members in asymc midi port structure is done at device probing. Some of
    the members should be initialized every time to use rawmidi devices because
    they're changed in sequence of transmission for MIDI messages.
    
    This commit adds a new function to initialize them. Invariant parameters
    during object lifetime are kept as is.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 98a00d3602a1c50a397893c5de26dbbe7d77804a
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:29 2017 +0900

    ALSA: firewire-tascam: use fixed-length array for message cache to async midi port
    
    ALSA driver for TASCAM FireWire series internally allocates 4 byte buffer
    for asynchronous transaction to transfer MIDI messages. However, the buffer
    can be allocated with memory object of parent structure.
    
    This commit adds 4 byte array as a member of the structure and obsoletes
    the redundant allocation. This is deallocated with memory object of parent
    structure.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 27badc4c10da29b884f1ac7cc9ce13e849ce8be4
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:28 2017 +0900

    ALSA: firewire-tascam: use the same address for asynchronous transaction for MIDI message
    
    Units on TASCAM FireWire series receive MIDI messages by asynchronous
    transactions on IEEE 1394 bus. Although the transaction is sent to a
    certain register, current ALSA driver for this series has a redundant design.
    
    This commit use the same address for the transaction.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 38d5826142496a6e0c21fa3fdb48fa910008c159
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:27 2017 +0900

    ALSA: firewire-tascam: send fixed-length transaction for async midi port
    
    TASCAM FireWire series uses asynchronous transactions with fixed length
    payload for MIDI messaging. On the other hand, ALSA driver for the series
    has a redundant design to handle different length of payload.
    
    This commit removes the redundant abstraction.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 9bae2150d0144e0be423367e5385442141979213
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:26 2017 +0900

    ALSA: firewire-tascam: remove callback function from async midi port
    
    As a result of localization of async midi port, ALSA driver for TASCAM
    FireWire series can call helper function directly instead of callback
    registration.
    
    This commit removes the redundant design.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 531f471834227d0321110c071ea352bb14aca36d
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 14 16:46:25 2017 +0900

    ALSA: firewire-lib/firewire-tascam: localize async midi port
    
    In Linux kernel 4.4, firewire-lib got a feature called as 'async midi port'
    for transmission of MIDI message via IEEE 1394 asynchronous communication,
    however actual consumer of this feature is ALSA driver for TASCAM FireWire
    series only. When adding this feature, I assumed that ALSA driver for
    Digi00x might also be a consumer, actually it's not.
    
    This commit moves the feature from firewire-lib to firewire-tascam module.
    Two minor kernel APIs are removed.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 1900d947b5ebac3c9f67d45b30f1b002131b8057
Merge: 1e0f8f68f764 dfb00a569351
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 14 09:01:04 2017 +0200

    Merge branch 'for-linus' into for-next
    
    Back-merge to prepare for applying more FireWire updates.

commit 17909c1b3058b315698965aeb33ed6434501567c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Apr 9 21:33:28 2017 +0900

    ALSA: firewire-motu: add tracepoints for SPH in IEC 61883-1 fashion
    
    Unique protocol is used for MOTU FireWire series. In this protocol,
    data block format is not compliant to AM824 in IEC 61883-1/6. Each of
    the data block consists of 24 bit data chunks, except for a first
    quadlet. The quadlet is used for source packet header (SPH) described
    in IEC 61883-1.
    
    The sequence of SPH seems to represent presentation timestamp
    corresponding to included data. Developers have experienced that invalid
    sequence brings disorder of units in the series.
    
    Unfortunately, current implementation of ALSA IEC 61883-1/6 engine and
    firewire-motu driver brings periodical noises to the units at sampling
    transmission frequency based on 44.1 kHz. The engine generates the SPH with
    even interval and this mechanism seems not to be suitable to the units.
    Further work is required for this issue and infrastructure is preferable
    to assist the work.
    
    This commit adds tracepoints for the purpose. In the tracepoints, events
    are probed to gather the SPHs from each data blocks.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 5b33504bada4d85092b69b3aaa7048c398b21dbb
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Apr 3 21:13:50 2017 +0900

    ALSA: firewire-motu: remove invalid bitshift for register value
    
    In protocol version 3, drivers can read current sampling clock status from
    register 0x'ffff'f000'0b14. 8 bits of LSB of this register represents type
    of signal as source of clock.
    
    Current driver code includes invalid bitshift to handle the parameter. This
    commit fixes the bug.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Fixes: 5992e30034c4 ("ALSA: firewire-motu: add support for MOTU 828mk3 (FireWire/Hybrid) as a model with protocol version 3")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 19174295788de77dd58dc6060b0d1bcfda21625e
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Mar 31 22:06:03 2017 +0900

    ALSA: fireface: add transaction support
    
    As long as investigating Fireface 400, MIDI messages are transferred by
    asynchronous communication over IEEE 1394 bus.
    
    Fireface 400 receives MIDI messages by write transactions to two addresses;
    0x'0000'0801'8000 and 0x'0000'0801'9000. Each of two seems to correspond to
    MIDI port 1 and 2.
    
    Fireface 400 transfers MIDI messages by write transactions to certain
    addresses which configured by drivers. The drivers can decide upper 4 byte
    of the addresses by write transactions to 0x'0000'0801'03f4. For the rest
    part of the address, drivers can select from below options:
     * 0x'0000'0000
     * 0x'0000'0080
     * 0x'0000'0100
     * 0x'0000'0180
    
    Selected options are represented in register 0x'0000'0801'051c as bit
    flags. Due to this mechanism, drivers are restricted to use addresses on
    'Memory space' of IEEE 1222, even if transactions to the address have
    some side effects.
    
    This commit adds transaction support for MIDI messaging, based on my
    assumption that the similar mechanism is used on the other protocols. To
    receive asynchronous transactions, the driver allocates a range of address
    in 'Memory space'. I apply a strategy to use 0x'0000'0000 as lower 4 byte
    of the address. When getting failure from Linux FireWire subsystem, this
    driver retries to allocate addresses.
    
    Unfortunately, read transaction to address 0x'0000'0801'051c returns zero
    always, however write transactions have effects to the other features such
    as status of sampling clock. For this reason, this commit delegates a task
    to configure this register to user space applications. The applications
    should set 3rd bit in LSB in little endian order.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 5992e30034c43917968f2327d2948d22be6d4603
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:28 2017 +0900

    ALSA: firewire-motu: add support for MOTU 828mk3 (FireWire/Hybrid) as a model with protocol version 3
    
    MOTU 828mk3 (FireWire/Hybrid) is one of third generation in MOTU FireWire
    series, produced in 2008/2014. This model consists of three chips for
    functionality on IEEE 1394 bus:
    
     * TI TSB41AB2 (Physical layer for IEEE 1394 bus)
     * Xilinx Spartan-3E FPGA Family (Link layer for IEEE 1394 bus, packet
       processing and data block processing layer)
     * TI TMS320C6722 (Digital signal processing)
    
    This commit adds a support for this model, with its unique protocol as
    version 3. This protocol has some additional features to protocol
    version 2.
    
     * Support several optical interfaces.
     * Support a data chunk for return of reverb effect.
     * Have a quirk of tx packets.
     * Support heartbeat asynchronous transaction.
    
    In this protocol, series of transferred packets has some quirks. Below
    fields in CIP headers of the packets are out of IEC 61883-1:
     - SID (source node id): always 0x0d
     - DBS (data block size): always 0x04
     - DBC (data block counter): always 0x00
     - EOH (End of header): always 0x00
    
    Below is an actual sample of transferred packets.
    
    quads CIP1       CIP2
    520   0x0D040400 0x22FFFFFF
      8   0x0D040400 0x22FFFFFF
    520   0x0D040400 0x22FFFFFF
    520   0x0D040400 0x22FFFFFF
      8   0x0D040400 0x22FFFFFF
    
    Status of clock is configured by write transactions to 0x'ffff'f000'0b14,
    as well as version 2, while meanings of fields are different from the
    former protocols. Modes of optical interfaces are configured by write
    transactions to 0x'ffff'f000'0c94.
    
    Drivers can register its address to receive heatbeat transactions from the
    unit. 0x'ffff'f000'0b0c is for the higher part and 0x'ffff'f000'0b10 is
    for the lower part. Nevertheless, this feature is not useless for this
    driver and this commit omits it.
    
    Each data block consists of two parts in a point of the number of included
    data chunks. In both of 'fixed' and 'differed' parts, the number of
    included data blocks are a multiple of 4, thus depending on models there's
    some empty data chunks. For example, 828mk3 includes one pair of empty
    data chunks in its fixed part. When optical interface is configured to
    S/PDIF, 828mk3 includes one pair of empty data chunks in its differed part.
    To reduce consumption of CPU cycles with additional conditions/loops, this
    commit just exposes these empty chunks to user space as PCM channels.
    
    Additionally, 828mk3 has a non-negligible overhead to change its sampling
    transfer frequency. When softwares send asynchronous transaction to
    perform it, LED on the unit starts to blink. In a worst case, it continues
    blink during several seconds; e.g. 10 seconds. When stopping blinking,
    the unit seems to be prepared for the requested sampling transfer
    frequency. To wait for the preparation, this commit forces the driver
    to call task scheduler and applications sleeps for 4 seconds.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 949613e366ed436a7639722b0ab6ed66a0199ae9
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:26 2017 +0900

    ALSA: firewire-motu: add support for MOTU 828mk2 as a model with protocol version 2
    
    MOTU 828mk2 is one of second generation in MOTU FireWire series, produced in
    2003. This model consists of four chips:
     * TI TSB41AB2 (Physical layer for IEEE 1394 bus)
     * PDI 1394L40BE (Link layer for IEEE 1394 bus and packet processing layer)
     * ALTERA ACEX 1K EP1K30 Series FPGA (Data block processing layer)
     * TI TMS320VC5402 (Digital signal processing)
    
    This commit adds a support for this model, with its unique protocol as
    version 2. The features of this protocol are:
    
     * Support data chunks for status and control messages for both
       directions.
     * Support a pair of MIDI input/output.
     * Support a data chunk for mic/instrument independent of analog line in.
     * Support a data chunk for playback return.
     * Support independent data chunks for S/PDIF of both optical/coaxial
       interfaces.
     * Support independent data chunks for each of main out and phone out.
    
    Status of clock is configured by write transactions to 0x'ffff'f000'0b14.
    Modes of optical interfaces are configured by write transactions to
    0x'ffff'f000'0c04.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 5aaab1bf37ede45df4f5d13d735faf824edf3ec8
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:25 2017 +0900

    ALSA: firewire-motu: enable to read transaction cache via hwdep interface
    
    MOTU FireWire series can transfer messages to registered address. These
    messages are transferred for the status of internal clock synchronization
    just after starting streams.
    
    When the synchronization is stable, it's 0x01ffffff. Else, it's 0x05ffffff.
    
    This commit adds a functionality for user space applications to receive
    content of the message.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 9e796e7d59e71f8a556cfbdc2ffa3aff0555dd0e
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:23 2017 +0900

    ALSA: firewire-motu: add MIDI functionality
    
    In MOTU FireWire series, MIDI messages are multiplexed to isochronous
    packets as well as PCM frames, while the way is different from the one
    in IEC 61883-6.
    
    MIDI messages are put into a certain position in message chunks. One data
    block can includes one byte of the MIDI messages. When data block includes
    a MIDI byte, the block has a flag in a certain position of the message
    chunk. These positions are unique depending on protocols.
    
    Once a data block includes a MIDI byte, some following data blocks includes
    no MIDI bytes. Next MIDI byte appears on a data block corresponding to
    next cycle of physical MIDI bus. This seems to avoid buffer overflow caused
    by bandwidth differences between IEEE 1394 bus and physical MIDI bus.
    
    This commit adds MIDI functionality to transfer/receive MIDI messages.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 9b2bb4f2f4a213a768a84fa25c14be54844f5bb6
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:20 2017 +0900

    ALSA: firewire-motu: add stream management functionality
    
    This commit adds a functionality to manage packet streaming for MOTU
    FireWire series.
    
    The streaming is not controlled by CMP, thus against IEC 61883-1. Write
    transaction to certain addresses start/stop packet streaming.
    
    Transactions to 0x'ffff'f000'0b00 results in isochronous channel number for
    both directions and starting/stopping transmission of packets. The
    isochronous channel number is represented in 6 bit field, thus units can
    identify the channels up to 64, as IEEE 1394 bus specification described.
    
    Transactions to 0x'ffff'f000'0b10 results in packet format for both
    directions and transmission speed. When each of data block includes fixed
    part of data chunks only, corresponding flags stand.
    
    When bus reset occurs, the units continue to transmit packets with
    non-contiguous data block counter. This causes discontinuity detection in
    packet streaming engine and ALSA PCM applications receives EPIPE from any
    I/O operation. In this case, typical applications manage to recover
    corresponding PCM substream. This behaviour is kicked much earlier than
    callback of bus reset handler by Linux FireWire subsystem, therefore
    status of packet streaming is not changed in the handler.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2e76701bbb1fbe55f7d8538ae7f6869070eb3446
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:19 2017 +0900

    ALSA: firewire-motu: handle transactions specific for MOTU FireWire models
    
    All models of MOTU FireWire series can be controlled by write transaction
    to addresses in a range from 0x'ffff'f0000'0b00 to 0x'ffff'f000'0cff.
    
    The models support asynchronous notification. This notification has 32 bit
    field data, and is transferred when status of clock changes. Meaning of
    the value is not enough clear yet.
    
    Drivers can register its address to receive the notification. Write
    transaction to 0x'ffff'f000'0b04 registers higher 16 bits of the address.
    Write transaction to 0x'ffff'f0000'0b08 registers the rest of bits. The
    address includes node ID, thus it should be registered every time of bus
    reset.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 4641c939401076c0ab7faba024827069723f719c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:18 2017 +0900

    ALSA: firewire-motu: add MOTU specific protocol layer
    
    MOTU FireWire series uses blocking transmission for AMDTP packet streaming.
    They transmit/receive 8,000 packets per second, to handle the same number
    of data blocks as current sampling transmission frequency. Thus,
    IEC 61883-1/6 packet streaming engine of ALSA firewire stack is available
    for them.
    
    However, the sequence of packet and data blocks includes some quirks.
    Below sample is a sequence of CIP headers of packets received by 828mk2,
    at 44.1kHz of sampling transmission frequency.
    
    quads CIP1        CIP2
    488   0x020F04E8  0x8222FFFF
      8   0x020F04F8  0x8222FFFF
    488   0x020F0400  0x8222FFFF
    488   0x020F0408  0x8222FFFF
      8   0x020F04E8  0x8222FFFF
    488   0x020F04F0  0x8222FFFF
    488   0x020F04F8  0x8222FFFF
    
    The SID (source node ID), DBS (data block size), SPH (source packet header),
    FMT (format ID), FDF (format dependent field) and SYT (time stamp) fields
    are in IEC 61883-1. Especially, FMT is 0x02, FDF is 0x22 and SYT is 0xffff
    to define MOTU specific protocol. In an aspect of dbc field, the value
    represents accumulated number of data blocks included the packet. This
    is against IEC 61883-1, because according to the specification this value
    should be the number of data blocks already transferred.
    
    In ALSA IEC 61883-1/6 engine, this quirk is already supported by
    CIP_DBC_IS_END_EVENT flag, because Echo Audio Fireworks has.
    
    Each data block includes SPH as its first quadlet field, to represent its
    presentation time stamp. Actual value of SPH is compliant to IEC 61883-1;
    lower 25 bits of 32 bits width consists of 13 bits cycle count and 12 bits
    cycle offset.
    
    The rest of each data block consists of 24 bit chunks. All of PCM samples,
    MIDI messages, status and control messages are transferred by the chunks.
    This is similar to '24-bit * 4 Audio Pack' in IEC 61883-6. The position of
    each kind of data depends on generations of each model. The number of
    whole chunks in a data block is a multiple of 4, to consists of
    quadlet-aligned packets.
    
    This commit adds data block processing layer specific for the MOTU
    protocol. The remarkable point is the way to generate SPH header. Time
    stamps for each data blocks are generated by below calculation:
    
     * Using pre-computed table for the number of ticks per event
      *  44,1kHz: (557 + 123/441)
      *  48.0kHz: (512 +   0/441)
      *  88.2kHz: (278 + 282/441)
      *  96.0kHz: (256 +   0/441)
      * 176.4kHz: (139 + 141/441)
      * 192.0kHz: (128 +   0/441)
     * Accumulate the ticks and set the value to SPH for every events.
     * This way makes sense only for blocking transmission because this mode
       transfers fixed number or none of events.
    
    This calculation assumes that each data block has a PCM frame which is
    sampled according to event timing clock. Current packet streaming layer
    has the same assumption.
    
    Although this sequence works fine for MOTU FireWire series at sampling
    transmission frequency based on 48.0kHz, it is not enough at the frequency
    based on 44.1kHz. The units generate choppy noise every few seconds.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 9dae017bf69b1c5aacba7be18cb734b66df30a37
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:17 2017 +0900

    ALSA: firewire-lib: enable CIP_DBC_IS_END_EVENT for both directions of stream
    
    Commit c8bdf49b9935("ALSA: fireworks/firewire-lib: Add a quirk for the
    meaning of dbc") adds CIP_DBC_IS_END_EVENT flag just for tx packets.
    However, MOTU FireWire series has this quirk for rx packets.
    
    This commit allows both directions with the flag.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 59f6482c2183fc3b3e42e0e2ae83a347ee6346c5
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:14 2017 +0900

    ALSA: firewire-motu: add an abstraction layer for three types of protocols
    
    In an aspect of used protocols to communicate, models of MOTU FireWire
    units are categorized to three generations.
    
    This commit adds an abstraction layer of the protocols for features
    related to packet streaming functionality. This layer includes 5
    operations.
    
    When configuring packet streaming functionality with sampling rate and
    sampling transmission frequency, .get_clock_rate and .set_clock_rate are
    called with proper arguments. MOTU FireWire series supports up to 192.0kHz.
    
    When checking current source of sampling clock (not clock for packetization
    layer), .get_clock_source is used. Enumeration is added to represent the
    sources supported by this series. This operation can be used to expose
    available sampling rate to user space applications when the unit is
    configured to use any input signal as source of clock instead of crystal
    clock.
    
    In the protocols, the path between packet processing layer and digital
    signal processing layer can be controlled. This looks a functionality to
    'mute' the unit. For this feature, .switch_fetching_mode is added. This
    can be used to suppress noises every time packet streaming starts/stops.
    
    In a point of the size of data blocks at a certain sampling transmission
    frequency, the most units accept several modes. This is due to usage of
    optical interfaces. The size differs depending on which modes are
    configured to the interfaces; None, S/PDIF and ADAT. Additionally, format
    of packet is different depending on protocols. To cache current size of
    data blocks and its format, .cache_packet_formats is added. This is used
    by PCM functionality, packet streaming functionality and data block
    processing layer.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 5e03c33e3d8973e2c10abbf13f8f24779babafeb
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:13 2017 +0900

    ALSA: firewire-motu: add a structure for model-dependent parameters.
    
    MOTU FireWire series doesn't tell drivers their capabilities, thus
    the drivers should have and apply model-dependent parameters to detected
    models.
    
    This commit adds a structure to represent such parameters. Capabilities
    are represented by enumeration except for the number of analog line
    in/out. Identification name also be in the structure because the units has
    no registers for this purpose.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 6c3cef4890d072afa2d77371f358abaea54ec134
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed Mar 22 21:30:11 2017 +0900

    ALSA: firewire-motu: add skeleton for Mark of the unicorn (MOTU) FireWire series
    
    This commit adds an new driver for MOTU FireWire series. In this commit,
    this driver just creates/removes card instance according to bus event.
    More functionalities will be added in following commits.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit f31d4542bf1aa7c7c902cb9066fb37d4e8d9e3b6
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f upstream.
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1367cf34e7be7e5dedd68e597438e9d024a1f268
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f upstream.
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3ca5f4958d9f97dd87ac1e19dbc0fb7e887fd199
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f upstream.
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Willy Tarreau <w@1wt.eu>

commit bf5d3d296abf509169ca673423c76b000bcf1085
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    [ Upstream commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f ]
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>

commit 9b2e380324a14d10fe73a1dbbcc5f73fd89f12a5
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f upstream.
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>

commit 1eb043fffc0aeca62ca3b33ffb346eae40f45411
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    [ Upstream commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f ]
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>

commit 2e57069c869f3009ae70a429d6719a545de43522
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Nov 18 06:11:24 2016 +0900

    ALSA: bebob: compare whole string for model name so that readers are not confused
    
    A modalias of 'ieee1394:ven00000D6Cmo00010060sp' hits units for M-Audio
    FireWire Audiophile only. However the unit has two states relevant to
    loaded firmware. Initial firmware returns 'FW Audiophile Bootloader',
    while functional firmware returns 'FW Audiophile'.
    
    ALSA bebob driver compares the units' model name to strings of 24 characters
    by the first 15 characters. This is shorter way to differentiate these two
    states but confusing to readers.
    
    This commit improves the code for this point. Kernel stack is consumed more in
    call of check_audiophile_booted() by a bit.
    
    With initial firmware:
    $ ./linux-firewire-utils/src/crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04276da6  bus_info_length 4, crc_length 39, crc 28070
    404  31333934  bus_name "1394"
    408  006481f2  irmc 0, cmc 0, isc 0, bmc 0, pmc 0, cyc_clk_acc 100,
                   max_rec 8 (512), max_rom 1, gen 15, spd 2 (S400)
    40c  000d6c03  company_id 000d6c     |
    410  102b7e2e  device_id 03102b7e2e  | EUI-64 000d6c03102b7e2e
    
                   root directory
                   -----------------------------------------------------------------
    414  00067414  directory_length 6, crc 29716
    418  0c0083c0  node capabilities per IEEE 1394
    41c  03000d6c  vendor
    420  81000009  --> descriptor leaf at 444
    424  17010060  model
    428  8100000c  --> descriptor leaf at 458
    42c  d1000001  --> unit directory at 430
    
                   unit directory at 430
                   -----------------------------------------------------------------
    430  00049da1  directory_length 4, crc 40353 (should be 48611)
    434  1200a02d  specifier id: 1394 TA
    438  13014001  version: Vender Unique and AV/C
    43c  17010060  model
    440  8100000f  --> descriptor leaf at 47c
    
                   descriptor leaf at 444
                   -----------------------------------------------------------------
    444  0004073e  leaf_length 4, crc 1854
    448  00000000  textual descriptor
    44c  00000000  minimal ASCII
    450  4d2d4155  "M-AU"
    454  44494f00  "DIO"
    
                   descriptor leaf at 458
                   -----------------------------------------------------------------
    458  00086f21  leaf_length 8, crc 28449
    45c  00000000  textual descriptor
    460  00000000  minimal ASCII
    464  46572041  "FW A"
    468  7564696f  "udio"
    46c  7068696c  "phil"
    470  6520426f  "e Bo"
    474  6f746c6f  "otlo"
    478  61646572  "ader"
    
                   descriptor leaf at 47c
                   -----------------------------------------------------------------
    47c  00086f21  leaf_length 8, crc 28449
    480  00000000  textual descriptor
    484  00000000  minimal ASCII
    488  46572041  "FW A"
    48c  7564696f  "udio"
    490  7068696c  "phil"
    494  6520426f  "e Bo"
    498  6f746c6f  "otlo"
    49c  61646572  "ader"
    
    With functional firmware:
    $ ./linux-firewire-utils/src/crpp < /sys/bus/firewire/devices/fw1/config_rom
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  042de16f  bus_info_length 4, crc_length 45, crc 57711
    404  31333934  bus_name "1394"
    408  f0648122  irmc 1, cmc 1, isc 1, bmc 1, pmc 0, cyc_clk_acc 100,
                   max_rec 8 (512), max_rom 1, gen 2, spd 2 (S400)
    40c  000d6c03  company_id 000d6c     |
    410  002b7e2e  device_id 03002b7e2e  | EUI-64 000d6c03002b7e2e
    
                   root directory
                   -----------------------------------------------------------------
    414  0009dac4  directory_length 9, crc 56004
    418  0400000d  hardware version
    41c  0c0083c0  node capabilities per IEEE 1394
    420  03000d6c  vendor
    424  81000012  --> descriptor leaf at 46c
    428  17010060  model
    42c  81000015  --> descriptor leaf at 480
    430  13ffffff  version
    434  d1000002  --> unit directory at 43c
    438  d4000006  --> dependent info directory at 450
    
                   unit directory at 43c
                   -----------------------------------------------------------------
    43c  00041eb9  directory_length 4, crc 7865
    440  1200a02d  specifier id: 1394 TA
    444  13014001  version: Vender Unique and AV/C
    448  17010060  model
    44c  81000014  --> descriptor leaf at 49c
    
                   dependent info directory at 450
                   -----------------------------------------------------------------
    450  000637c7  directory_length 6, crc 14279
    454  120007f5  specifier id
    458  13000001  version
    45c  3affffc7  (immediate value)
    460  3b100000  (immediate value)
    464  3cffffc7  (immediate value)
    468  3d600000  (immediate value)
    
                   descriptor leaf at 46c
                   -----------------------------------------------------------------
    46c  0004b8e4  leaf_length 4, crc 47332
    470  00000000  textual descriptor
    474  00000000  minimal ASCII
    478  4d2d4175  "M-Au"
    47c  64696f00  "dio"
    
                   descriptor leaf at 480
                   -----------------------------------------------------------------
    480  0006194b  leaf_length 6, crc 6475
    484  00000000  textual descriptor
    488  00000000  minimal ASCII
    48c  46572041  "FW A"
    490  7564696f  "udio"
    494  7068696c  "phil"
    498  65000000  "e"
    
                   descriptor leaf at 49c
                   -----------------------------------------------------------------
    49c  0006194b  leaf_length 6, crc 6475
    4a0  00000000  textual descriptor
    4a4  00000000  minimal ASCII
    4a8  46572041  "FW A"
    4ac  7564696f  "udio"
    4b0  7068696c  "phil"
    4b4  65000000  "e"
    
    Reported-by: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
    Reported-by: Joe Perches <joe@perches.com>
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 27fa1e735c70423f3249c34c7c4049fdedb4320a
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f upstream.
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d22568ce5edabab9ff6b195c53074a5317df64e
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f upstream.
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03daa36f089f31002a2d0fb22088d3ebe3e28d98
Merge: d8d1721cfb31 e9300a4b7bba
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Nov 5 11:17:34 2016 -0700

    Merge tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull FireWire (IEEE 1394) fixes from Stefan Richter:
    
     - add missing input validation to the firewire-net driver. Invalid
       IP-over-1394 encapsulation headers could trigger buffer overflows
       (CVE 2016-8633).
    
     - IP-over-1394 link fragmentation headers were read and written
       incorrectly, breaking fragmented RX/TX with other OS's stacks.
    
    * tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: net: fix fragmented datagram_size off-by-one
      firewire: net: guard against rx buffer overflows

commit e9300a4b7bbae83af1f7703938c94cf6dc6d308f
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 30 17:32:01 2016 +0100

    firewire: net: fix fragmented datagram_size off-by-one
    
    RFC 2734 defines the datagram_size field in fragment encapsulation
    headers thus:
    
        datagram_size:  The encoded size of the entire IP datagram.  The
        value of datagram_size [...] SHALL be one less than the value of
        Total Length in the datagram's IP header (see STD 5, RFC 791).
    
    Accordingly, the eth1394 driver of Linux 2.6.36 and older set and got
    this field with a -/+1 offset:
    
        ether1394_tx() /* transmit */
            ether1394_encapsulate_prep()
                hdr->ff.dg_size = dg_size - 1;
    
        ether1394_data_handler() /* receive */
            if (hdr->common.lf == ETH1394_HDR_LF_FF)
                dg_size = hdr->ff.dg_size + 1;
            else
                dg_size = hdr->sf.dg_size + 1;
    
    Likewise, I observe OS X 10.4 and Windows XP Pro SP3 to transmit 1500
    byte sized datagrams in fragments with datagram_size=1499 if link
    fragmentation is required.
    
    Only firewire-net sets and gets datagram_size without this offset.  The
    result is lacking interoperability of firewire-net with OS X, Windows
    XP, and presumably Linux' eth1394.  (I did not test with the latter.)
    For example, FTP data transfers to a Linux firewire-net box with max_rec
    smaller than the 1500 bytes MTU
      - from OS X fail entirely,
      - from Win XP start out with a bunch of fragmented datagrams which
        time out, then continue with unfragmented datagrams because Win XP
        temporarily reduces the MTU to 576 bytes.
    
    So let's fix firewire-net's datagram_size accessors.
    
    Note that firewire-net thereby loses interoperability with unpatched
    firewire-net, but only if link fragmentation is employed.  (This happens
    with large broadcast datagrams, and with large datagrams on several
    FireWire CardBus cards with smaller max_rec than equivalent PCI cards,
    and it can be worked around by setting a small enough MTU.)
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 89ab88b01bacc5bfc338693da3925504757e7844
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 23 16:30:56 2016 +0200

    firewire: net: set initial MTU = 1500 unconditionally, fix IPv6 on some CardBus cards
    
    firewire-net, like the older eth1394 driver, reduced the initial MTU to
    less than 1500 octets if the local link layer controller's asynchronous
    packet reception limit was lower.
    
    This is bogus, since this reception limit does not have anything to do
    with the transmission limit.  Neither did this reduction affect the TX
    path positively, nor could it prevent link fragmentation at the RX path.
    
    Many FireWire CardBus cards have a max_rec of 9, causing an initial MTU
    of 1024 - 16 = 1008.  RFC 2734 and RFC 3146 allow a minimum max_rec = 8,
    which would result in an initial MTU of 512 - 16 = 496.  On such cards,
    IPv6 could only be employed if the MTU was manually increased to 1280 or
    more, i.e. IPv6 would not work without intervention from userland.
    
    We now always initialize the MTU to 1500, which is the default according
    to RFC 2734 and RFC 3146.
    
    On a VIA VT6316 based CardBus card which was affected by this, changing
    the MTU from 1008 to 1500 also increases TX bandwidth by 6 %.
    RX remains unaffected.
    
    CC: netdev@vger.kernel.org
    CC: linux1394-devel@lists.sourceforge.net
    CC: Jarod Wilson <jarod@redhat.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 067c2f472d81b8b235176ce8e2cb221c4edc1a9e
Merge: e45eeb43e676 816f318b2364
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Sep 9 12:02:46 2016 -0700

    Merge tag 'sound-4.8-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "We've got quite a few fixes at this time, and all are stable patches.
    
      syzkaller strikes back again (episode 19 or so), and we had to plug
      some holes in ALSA core part (mostly timer).
    
      In addition, a couple of FireWire audio fixes for the invalid copy
      user calls in locks, and a few quirks for HD-audio and USB-audio as
      usual are included"
    
    * tag 'sound-4.8-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: rawmidi: Fix possible deadlock with virmidi registration
      ALSA: timer: Fix zero-division by continue of uninitialized instance
      ALSA: timer: fix NULL pointer dereference in read()/ioctl() race
      ALSA: fireworks: accessing to user space outside spinlock
      ALSA: firewire-tascam: accessing to user space outside spinlock
      ALSA: hda - Enable subwoofer on Dell Inspiron 7559
      ALSA: hda - Add headset mic quirk for Dell Inspiron 5468
      ALSA: usb-audio: Add sample rate inquiry quirk for B850V3 CP2114
      ALSA: timer: fix NULL pointer dereference on memory allocation failure
      ALSA: timer: fix division by zero after SNDRV_TIMER_IOCTL_CONTINUE

commit 28e64f5176387bf5b9458d213650b90fa719be88
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon May 9 23:15:52 2016 +0900

    ALSA: firewire-tascam: drop reuse of incoming packet parameter for outgoing packet parameter
    
    In packet streaming protocol applied to TASCAM FireWire series, the value
    of SYT field in CIP header is always zero, therefore it has no meaning.
    There's no need to synchronize packets in both direction for the series.
    
    In current implementation of ALSA firewire stack, driver for the series
    uses incoming packet parameter for outgoing packet parameter to calculate
    the number of data blocks. This can be simplified because the task of
    corresponding driver is to transfer data blocks enough to sampling transfer
    frequency.
    
    This commit purges support of full duplex synchronization to prevent
    over-engineering implementation.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 0df34ad9b703222ead899465b054070758b317f1
Merge: 14379cdc763d 86c2ee167045
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Feb 12 09:42:05 2016 -0800

    Merge tag 'sound-4.5-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "In this rc, we've got more volume than previous rc, unsurprisingly;
      the majority of updates in ASoC are about Intel drivers, and another
      major changes are the continued plumbing of ALSA timer bugs revealed
      by syzkaller fuzzer.  Hopefully both settle down now.
    
      Other than that, HD-audio received a couple of code fixes as well as
      the usual quirks, and various small fixes are found for FireWire
      devices, ASoC codecs and drivers"
    
    * tag 'sound-4.5-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (50 commits)
      ASoC: arizona: fref must be limited in pseudo-fractional mode
      ASoC: sigmadsp: Fix missleading return value
      ALSA: timer: Fix race at concurrent reads
      ALSA: firewire-digi00x: Drop bogus const type qualifier on dot_scrt()
      ALSA: hda - Fix bad dereference of jack object
      ALSA: timer: Fix race between stop and interrupt
      ALSA: timer: Fix wrong instance passed to slave callbacks
      ASoC: Intel: Add module tags for common match module
      ASoC: Intel: Load the atom DPCM driver only
      ASoC: Intel: Create independent acpi match module
      ASoC: Intel: Revert "ASoC: Intel: fix ACPI probe regression with Atom DPCM driver"
      ALSA: dummy: Implement timer backend switching more safely
      ALSA: hda - Fix speaker output from VAIO AiO machines
      Revert "ALSA: hda - Fix noise on Gigabyte Z170X mobo"
      ALSA: firewire-tascam: remove needless member for control and status message
      ALSA: firewire-tascam: remove a flag for controller
      ALSA: firewire-tascam: add support for FW-1804
      ALSA: firewire-tascam: fix NULL pointer dereference when model identification fails
      ALSA: hda - Fix static checker warning in patch_hdmi.c
      ASoC: Intel: Skylake: Remove autosuspend delay
      ...

commit 3e78e1518e129407fae75c867e48828262b3ea6d
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Feb 5 09:56:06 2016 +0900

    ALSA: firewire-tascam: add support for FW-1804
    
    This model supports:
     * maximum 12 PCM channels for PCM playback
     * maximum 18 PCM channels for PCM capture
     * 4 ports for MIDI playback
     * 4 ports for MIDI capture
     * control and status messages in tx isochronous packets
     * up to 96.0 kHz
    
    This commit adds support for the model. As the other supported models,
    all of available PCM channels are always enabled.
    
    As I described in commit c0949b278515da94, Ilya Zimnovich had investigated
    TASCAM FireWire series in 2011 with his FW-1804. In his report, this model
    has internal multiplexer and any software implementation can control it.
    Following to the design of ALSA firewire stack, this commit won't
    implement it. It should be in userspace via Linux fw character device.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit b54544322e818c692e360fd37b0eb30ec8b3172f
Merge: b943d0b9c7c5 6639484ddaf6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 29 12:34:39 2016 -0800

    Merge tag 'sound-4.5-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "There are a few fixes in ALSA core for bugs that have been spotted by
      fuzzer.  Also a temporary workaround for PowerPC (and possibly other)
      builds with incompatible ioctls was applied to compress API.
    
      Other than that, a few trivial fixes and quirks for FireWire BeBoB,
      USB-audio and HD-audio are found, too"
    
    * tag 'sound-4.5-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda - disable dynamic clock gating on Broxton before reset
      ALSA: hda - Add new GPU codec ID 0x10de0083 to snd-hda
      ALSA: dummy: Disable switching timer backend via sysfs
      ALSA: timer: fix SND_PCM_TIMER Kconfig text
      ALSA: Add missing dependency on CONFIG_SND_TIMER
      ALSA: bebob: Use a signed return type for get_formation_index
      ALSA: usb-audio: Fix TEAC UD-501/UD-503/NT-503 usb delay
      ALSA: compress: Disable GET_CODEC_CAPS ioctl for some architectures
      ALSA: seq: Degrade the error message for too many opens
      ALSA: seq: Fix incorrect sanity check at snd_seq_oss_synth_cleanup()

commit a016af2e70bfca23f2f5de7d8708157b86ea374d
Merge: e535d74bc50d c3b1681375dc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jan 17 12:05:31 2016 -0800

    Merge tag 'sound-4.5-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "We've had quite busy weeks in this cycle.  Looking at ALSA core, the
      significant changes are a few fixes wrt timer and sequencer ioctls
      that have been revealed by fuzzer recently.  Other than that, ASoC
      core got a few updates about DAI link handling, but these are rather
      straightforward refactoring.
    
      In drivers scene, ASoC received quite lots of new drivers in addition
      to bunch of updates for still ongoing Intel Skylake support and
      topology API.  HD-audio gained a new HDMI/DP hotplug notification via
      component.  FireWire got a pile of code refactoring/updates with
      SCS.1x driver integration.
    
      More highlights are shown below.
    
      [ NOTE: this contains also many commits for DRM.  This is due to the
        pull of drm stable branch into sound tree, as the base of i915 audio
        component work for HD-audio.  The highlights below don't contain
        these DRM changes, as these are supposed to be pulled via drm tree
        in anyway sooner or later.  ]
    
      Core:
       - Handful fixes to harden ALSA timer and sequencer ioctls against
         races reported by syzkaller fuzzer
       - Irq description string can be unique to each card; only for
         HD-audio for now
    
      ASoC:
       - Conversion of the array of DAI links to a list for supporting
         dynamically adding and removing DAI links
       - Topology API enhancements to make everything more component based
         and being able to specify PCM links via topology
       - Some more fixes for the topology code, though it is still not final
         and ready for enabling in production; we really need to get to the
         point where that can be done
       - A pile of changes for Intel SkyLake drivers which hopefully deliver
         some useful initial functionality for systems with this chipset,
         though there is more work still to come
       - Lots of new features and cleanups for the Renesas drivers
       - ANC support for WM5110
       - New drivers: Imagination Technologies IPs, Atmel class D speaker,
         Cirrus CS47L24 and WM1831, Dialog DA7128, Realtek RT5659 and
         RT56156, Rockchip RK3036, TI PC3168A, and AMD ACP
       - Rename PCM1792a driver to be generic pcm179x
    
      HD-Audio:
       - Use audio component for i915 HDMI/DP hotplug handling
       - On-demand binding with i915 driver
       - bdl_pos_adj parameter adjustment for Baytrail controllers
       - Enable power_save_node for CX20722; this shouldn't lead to
         regression, hopefully
       - Kabylake HDMI/DP codec support
       - Quirks for Lenovo E50-80, Dell Latitude E-series, and other Dell
         machines
       - A few code refactoring
    
      FireWire:
       - Lots of code cleanup and refactoring
       - Integrate the support of SCS.1x devices into snd-oxfw driver;
         snd-scs1x driver is obsoleted
    
      USB-audio:
       - Fix possible NULL dereference at disconnection
       - A regression fix for Native Instruments devices
    
      Misc:
       - A few code cleanups of fm801 driver"
    
    * tag 'sound-4.5-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (722 commits)
      ALSA: timer: Code cleanup
      ALSA: timer: Harden slave timer list handling
      ALSA: hda - Add fixup for Dell Latitidue E6540
      ALSA: timer: Fix race among timer ioctls
      ALSA: hda - add codec support for Kabylake display audio codec
      ALSA: timer: Fix double unlink of active_list
      ALSA: usb-audio: Fix mixer ctl regression of Native Instrument devices
      ALSA: hda - fix the headset mic detection problem for a Dell laptop
      ALSA: hda - Fix white noise on Dell Latitude E5550
      ALSA: hda_intel: add card number to irq description
      ALSA: seq: Fix race at timer setup and close
      ALSA: seq: Fix missing NULL check at remove_events ioctl
      ALSA: usb-audio: Avoid calling usb_autopm_put_interface() at disconnect
      ASoC: hdac_hdmi: remove unused hdac_hdmi_query_pin_connlist
      ASoC: AMD: Add missing include file
      ALSA: hda - Fixup inverted internal mic for Lenovo E50-80
      ALSA: usb: Add native DSD support for Oppo HA-1
      ASoC: Make aux_dev more like a generic component
      ASoC: bcm2835: cleanup includes by ordering them alphabetically
      ASoC: AMD: Manage ACP 2.x SRAM banks power
      ...

commit 4a47a87defa0a67312932a3aaee3516dcf66659b
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Dec 31 13:58:11 2015 +0900

    ALSA: dice: split subaddress check from category check
    
    Before allocating an instance of sound card, ALSA dice driver checks
    chip_ID_hi in Bus information block of Config ROM, then also checks
    subaddresses. The former operation reads cache of Config ROM in Linux
    FireWire subsystem, while the latter operation sends read transaction.
    The latter can be merged into initialization of transaction system.
    
    This commit splits these two operations to reduce needless transactions
    in probe processing.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 172473407962df19d0344fcdba90b02d16fe98d0
Merge: 5d8686276a5a 0c25ad80408e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 27 11:59:02 2015 -0800

    Merge tag 'sound-4.4-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Here are no big surprises but just all small fixes, mostly
      device-specific quirks for HD-audio and USB-audio:
    
       - Fix for detection of FireWire DICE Loud devices
       - Intel Broxton HDMI/DP PCI IDs and relevant quirks
       - Noise fixes: Dell XPS13 2015 model, Dell Latitude E6440, Gigabyte
         Z170X mobo
       - Fix the headphone mixer assignment on HP laptops for PulseAudio
       - USB-MIDI fixes for Medeli DD305 and CH345
       - Apply fixup for Acer Aspire One Cloudbook 14"
    
    * tag 'sound-4.4-rc3' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda - Fix noise on Gigabyte Z170X mobo
      ALSA: hda - Fix headphone noise after Dell XPS 13 resume back from S3
      ALSA: hda - Apply HP headphone fixups more generically
      ALSA: hda - Add fixup for Acer Aspire One Cloudbook 14
      ALSA: hda - apply SKL display power request/release patch to BXT
      ALSA: hda - add PCI IDs for Intel Broxton
      ALSA: usb-audio: work around CH345 input SysEx corruption
      ALSA: usb-audio: prevent CH345 multiport output SysEx corruption
      ALSA: usb-audio: add packet size quirk for the Medeli DD305
      ALSA: dice: fix detection of Loud devices
      ALSA: hda - Fix noise on Dell Latitude E6440

commit bd04809bbe4c1f749650bb990c969112a5e10aef
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Oct 18 22:39:53 2015 +0900

    ALSA: firewire-digi00x/firewire-tascam: remove wrong conversion for Config ROM
    
    The contents of Config ROM in firewire device structure are already
    aligned to CPU-endianness. Thus, no need to convert it again.
    
    This commit removes needless conversions
    
    Fixes: 9edf723fd858('ALSA: firewire-digi00x: add skeleton for Digi 002/003 family')
    Fixes: c0949b278515('ALSA: firewire-tascam: add skeleton for TASCAM FireWire series')
    Reported-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 69ec98d7e5661a1c98ec51c26d6e91af3bbe0e72
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Oct 15 21:16:30 2015 +0300

    ALSA: firewire-tascam: fix an LED bug
    
    We recently tried to add some new code to support turning the LED on and
    off but the code in snd_tscm_transaction_reregister() is unreachable.
    
    Fixes: e65e2cb99e44 ('ALSA: firewire-tascam: Turn on/off FireWire LED')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 53b3ffee788559fe26d32f21b223bf4bad959477
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Oct 12 19:10:25 2015 +0900

    ALSA: firewire-tascam: change device probing processing
    
    Currently, this driver picks up model name with be32_to_cpu() macro
    to align characters. This is wrong operation because the result is
    different depending on CPU endiannness.
    
    Additionally, vendor released several versions of firmware for this
    series. It's not better to assign model-dependent information to
    device entry according to the version field.
    
    This commit fixes these bugs. The name of model is picked up correctly
    and used to identify model-dependent information.
    
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Fixes: c0949b278515 ('ALSA: firewire-tascam: add skeleton for TASCAM FireWire series')
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit e65e2cb99e44704f63b76e4395092b0533bef88b
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Oct 12 19:10:24 2015 +0900

    ALSA: firewire-tascam: Turn on/off FireWire LED
    
    TASCAM FireWire series has some LEDs on its surface. These LEDs can be
    turned on/off by receiving asynchronous transactions to a certain
    address. One of the LEDs is labels as 'FireWire'. It's better to light it
    up when this driver starts to work. Besides, the LED for 'FireWire' is
    turned off at bus reset.
    
    This commit implements this idea.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 0db18e7eec40a4331214185b37b0440856856775
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Oct 12 19:10:23 2015 +0900

    ALSA: firewire-tascam: add support for MIDI functionality
    
    In former commits, this driver got functionalities to transfer/receive
    MIDI messages to/from TASCAM FireWire series.
    
    This commit adds some ALSA MIDI ports to enable userspace applications
    to use the functionalities.
    
    I note that this commit doesn't support virtual MIDI ports which console
    models support. A physical controls can be assigned to a certain MIDI
    ports including physical and virtual. But the way is not clear.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 3beab0f844fadefe16b6383f6ff7b76147db686b
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Oct 12 19:10:22 2015 +0900

    ALSA: firewire-tascam: add support for outgoing MIDI messages by asynchronous transaction
    
    TASCAM FireWire series use asynchronous transaction to receive MIDI
    messages. The transaction should be sent to a certain address.
    
    This commit supports the outgoing MIDI messages. The messages in the
    transaction includes some quirks:
     * One MIDI message is transferred in one quadlet transaction, except for
       system exclusives.
     * MIDI running status is not allowed, thus transactions always include
       status byte.
     * The basic data format is the same as transferring MIDI messages
       supported in previous commit.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 107cc0129a685e88d09af88b8a371caec5c51ff0
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Oct 12 19:10:21 2015 +0900

    ALSA: firewire-tascam: add support for incoming MIDI messages by asynchronous transaction
    
    TASCAM FireWire series use asynchronous transaction to transfer MIDI
    messages. The transaction is sent to a registered address.
    
    This commit supports the incoming MIDI messages. The messages in the
    transaction include some quirks:
     * Two quadlets are used for one MIDI message and one timestamp.
     * Usually, the first byte of the first quadlet includes MIDI port and MSB
       4 bit of MIDI status. For system exclusive message, the first byte
       includes MIDI port and 0x04, or 0x07 in the end of the message.
     * The rest of the first quadlet includes MIDI bytes up to 3.
     * Several set of MIDI messages and timestamp can be transferred in one
       block transaction, up to 8 sets.
    
    I note that TASCAM FireWire series ignores ID bytes of system exclusive
    message. When receiving system exclusive messages with ID bytes on physical
    MIDI bus, the series transfers the messages without ID bytes on IEEE 1394
    bus, and vice versa.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2a7e1713cd652e7d2fdb54057fb6b2508cab15dc
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Oct 11 22:33:50 2015 +0900

    ALSA: firewire-lib: continue packet processing at detecting wrong CIP headers
    
    In firewire-lib, isochronous packet streaming is stopped when detecting
    wrong value for FMT field of CIP headers. Although this is appropriate
    to IEC 61883-1 and 6, some BeBoB based devices with vendors' customization
    use invalid value to FMT field of CIP headers in the beginning of
    streaming.
    
    $ journalctl
      snd-bebob fw1.0: Detect unexpected protocol: 01000000 8000ffff
    
    I got this log with M-Audio FireWire 1814. In this line, the value of FMT
    field is 0x00, while it should be 0x10 in usual AMDTP.
    
    Except for the beginning, these devices continue to transfer packets with
    valid value for FMT field, except for the beginning. Therefore, in this
    case, firewire-lib should continue to process packets. The former
    implementation of firewire-lib performs it.
    
    This commit loosens the handling of wrong value, to continue packet
    processing in the case.
    
    Fixes: 414ba022a528 ('ALSA: firewire-lib: add support arbitrary value for fmt/fdf fields in CIP header')
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 35efa5c489de63a9bdbb7ea4e66dcfadcca951b4
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Oct 1 22:02:15 2015 +0900

    ALSA: firewire-tascam: add streaming functionality
    
    This commit adds streaming functionality for both direction. To utilize
    the sequence of the number of data blocks in packets, full duplex with
    synchronization is applied.
    
    Besides, TASCAM FireWire series allows drivers to decide which PCM data
    channels are enabled. For convenience, this driver always enable whole the
    data channels.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 47faeea25ef3a39f2224377a1fc76581cd18c044
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Oct 1 22:02:14 2015 +0900

    ALSA: firewire-tascam: add data block processing layer
    
    TASCAM FireWire series uses non-blocking transmission for AMDTP packet
    streaming, while the format of data blocks is unique.
    
    The CIP headers includes specific value in FMT field and no SYT
    information.
    
    In transmitted packets, the first data channel represents event counter,
    and the last data channel has status and control information. The rest
    has 24bit PCM samples with right padding.
    
    In received packets, all of data channels include 16, 24, 32bit PCM
    samples. There's no other kind of information.
    
    This commit adds support for this protocol. For convenience, the size of
    PCM samples in outgoing packet is limited by 16 and 24bit. The status and
    control information will be supported in future commits.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 96e5fbb0dd128496378dbc404c2a894e49c1ac21
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Oct 1 22:02:13 2015 +0900

    ALSA: firewire-tascam: add proc node to show firmware information
    
    TASCAM FireWire series has certain registers for firmware information.
    
    This commit adds proc node to show the information.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 6f81ba19ace2282f2560f5ec3a827ec5370825cb
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Oct 1 22:02:12 2015 +0900

    ALSA: firewire-tascam: add a structure for model-dependent parameters.
    
    TASCAM FireWire series doesn't tell drivers their capabilities, thus
    the drivers should have model-dependent parameters and apply it to
    detected devices.
    
    This commit adds a structure to represent such parameters.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit c0949b278515da948597b4a1a2726f42591ef385
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Thu Oct 1 22:02:11 2015 +0900

    ALSA: firewire-tascam: add skeleton for TASCAM FireWire series
    
    This commit adds a new driver for TASCAM FireWire series. In this commit,
    this driver just creates/removes card instance according to bus event.
    More functionalities will be added in following commits.
    
    TASCAM FireWire series consists of:
     * PDI 1394P23 for IEEE 1394 PHY layer
     * PDI 1394L40 for IEEE 1394 LINK layer and IEC 61883 interface
     * XILINX XC9536XL
     * XILINX Spartan-II XC2S100
     * ATMEL AT91M42800A
    
    Ilya Zimnovich had investigated TASCAM FireWire series in 2011, and
    discover some features of his FW-1804. You can see a part of his research
    in FFADO project.
    http://subversion.ffado.org/wiki/Tascam
    
    A part of my work are based on Ilya's investigation, while this series
    doesn't support the FW-1804, because of a lack of config ROM
    information and its protocol detail, especially for PCM channels.
    
    I observed that FW-1884 and FW-1082 don't work properly with 1394 OHCI
    controller based on VT6315. The controller can actually communicate packets
    to these models, while these models generate no sounds. It may be due to
    the PHY/LINK layer issues. Using 1394 OHCI controller produced by the other
    vendors such as Texas Instruments may work. Or adding another node on the
    bus.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit c1972576af1db89251965ab266fd05aa58ff8e73
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sat Feb 21 23:54:58 2015 +0900

    ALSA: firewire-lib: remove reference counting
    
    commit c6f224dc20ad959175c2dfec70b5a61c6503a793 upstream.
    
    AMDTP helper functions increment/decrement reference counter for an
    instance of FireWire unit, while it's complicated for each driver to
    process error state.
    
    In previous commit, each driver has the role of reference counting. This
    commit removes this role from the helper function.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a5d626d0c627edd44347b0c55a7726faef95a3c
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sat Feb 21 23:54:57 2015 +0900

    ALSA: fireworks/bebob/dice/oxfw: add reference-counting for FireWire unit
    
    commit 12ed719291a953d443921f9cdb0ffee41066c340 upstream.
    
    Fireworks and Dice drivers try to touch instances of FireWire unit after
    sound card object is released, while references to the unit is decremented
    in .remove(). When unplugging during streaming, sound card object is
    released after .remove(), thus Fireworks and Dice drivers causes GPF or
    Null-pointer-dereferencing to application processes because an instance of
    FireWire unit was already released.
    
    This commit adds reference-counting for FireWire unit in drivers to allow
    them to touch an instance of FireWire unit after .remove(). In most case,
    any operations after .remove() may be failed safely.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbc54a00d8a3f664cb4bd9619a5c33d75f13d62b
Merge: 3d52c5bdbe57 ef403edb7558
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Mar 13 13:30:00 2015 -0700

    Merge tag 'sound-4.0-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "This is a round of HD-audio fixes: there are a long-standing
      regression fix and a few more device/codec-specific quirks.
    
      In addition, a couple of FireWire regression fixes, a USB-audio quirk
      for Roland UA-22 and a sanity check in API for user-defined control
      elements"
    
    * tag 'sound-4.0-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda - Don't access stereo amps for mono channel widgets
      ALSA: hda - Add workaround for MacBook Air 5,2 built-in mic
      ALSA: hda - Set single_adc_amp flag for CS420x codecs
      ALSA: snd-usb: add quirks for Roland UA-22
      ALSA: control: Add sanity checks for user ctl id name string
      ALSA: hda - Fix built-in mic on Compaq Presario CQ60
      ALSA: firewire-lib: leave unit reference counting completely
      Revert "ALSA: dice: fix wrong offsets for Dice interface"
      ALSA: hda - Fix regression of HD-audio controller fallback modes

commit ed42e71accf63f47ac49e1d75760f5389c4b8529
Merge: 7dac5cb1bc8c de5d0ad506cb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Feb 26 10:55:19 2015 -0800

    Merge tag 'sound-4.0-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Most of changes in this pull request are about the fixes of crash of
      FireWire drivers at hot-unplugging.  In addition, there are a few
      HD-audio fixes (removal of wrong static, a pin quirk for an ASUS mobo,
      a regression fix for runtime PM on Panther Point) and a long-standing
      (but fairly minor) bug of PCM core"
    
    * tag 'sound-4.0-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda - Disable runtime PM for Panther Point again
      ALSA: hda: controller code - do not export static functions
      ALSA: pcm: Don't leave PREPARED state after draining
      ALSA: fireworks/bebob/dice/oxfw: make it possible to shutdown safely
      ALSA: fireworks/bebob/dice/oxfw: allow stream destructor after releasing runtime
      ALSA: firewire-lib: remove reference counting
      ALSA: fireworks/bebob/dice/oxfw: add reference-counting for FireWire unit
      ALSA: hda - Add pin configs for ASUS mobo with IDT 92HD73XX codec
      ALSA: firewire-lib: fix an unexpected byte sequence for micro sign

commit c6f224dc20ad959175c2dfec70b5a61c6503a793
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sat Feb 21 23:54:58 2015 +0900

    ALSA: firewire-lib: remove reference counting
    
    AMDTP helper functions increment/decrement reference counter for an
    instance of FireWire unit, while it's complicated for each driver to
    process error state.
    
    In previous commit, each driver has the role of reference counting. This
    commit removes this role from the helper function.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 12ed719291a953d443921f9cdb0ffee41066c340
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sat Feb 21 23:54:57 2015 +0900

    ALSA: fireworks/bebob/dice/oxfw: add reference-counting for FireWire unit
    
    Fireworks and Dice drivers try to touch instances of FireWire unit after
    sound card object is released, while references to the unit is decremented
    in .remove(). When unplugging during streaming, sound card object is
    released after .remove(), thus Fireworks and Dice drivers causes GPF or
    Null-pointer-dereferencing to application processes because an instance of
    FireWire unit was already released.
    
    This commit adds reference-counting for FireWire unit in drivers to allow
    them to touch an instance of FireWire unit after .remove(). In most case,
    any operations after .remove() may be failed safely.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # 3.19+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 5eb11d6b3f55eb4d28c51ea7f641c0e5e255a70f
Merge: 479459a86ca5 6455931186bf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jan 21 20:37:25 2015 +1200

    Merge tag 'sound-3.19-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "This batch contains two fixes for FireWire lib module and a quirk for
      yet another Logitech WebCam.  The former is the fixes for MIDI
      handling I forgot to pick up during the merge window.  All the fixed
      code is pretty local and shouldn't give any regressions"
    
    * tag 'sound-3.19-rc6' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: usb-audio: Add mic volume fix quirk for Logitech Webcam C210
      ALSA: firewire-lib: limit the MIDI data rate
      ALSA: firewire-lib: remove rx_blocks_for_midi quirk

commit 25ca917c0fcdd1d2c4a701905e11751275186310
Author: Clemens Ladisch <clemens@ladisch.de>
Date:   Tue Nov 25 22:54:10 2014 +0100

    ALSA: firewire-lib: limit the MIDI data rate
    
    Do no send MIDI bytes at the full rate at which FireWire packets happen
    to be sent, but restrict them to the actual rate of a real MIDI port.
    This is required by the specification, and prevents data loss when the
    device's buffer overruns.
    
    Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Tested-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit bae41e45b7400496b9bf0c70c6004419d9987819
Merge: 7ef58b32f571 6e1d7a51392f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 11 13:20:50 2014 -0800

    Merge tag 'sound-3.19-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "This became a fairly large pull request.  In addition to the usual
      driver updates / fixes, there have been a high amount of cleanups in
      ASoC area, as well as control API helpers and kernel documentations
      fixes touching through the whole tree.
    
      In the driver side, the biggest changes are the support for new Intel
      SoC found on new x86 machines, and the updates of FireWire dice and
      oxfw drivers.
    
      Some remarkable items are below:
    
      ALSA core:
       - PCM mmap code cleanup, removal of arch-dependent codes
       - PCM xrun injection support
       - PCM hwptr tracepoint support
       - Refactoring of snd_pcm_action(), simplification of PCM locking
       - Robustified sequecner auto-load functionality
       - New control API helpers and lots of cleanups along with them
       - Lots of kerneldoc fixes and cleanups
    
      USB-audio:
       - The mixer resume code was largely rewritten, and the devices with
         quirks are resumed properly.
       - New hardware support: Focusrite Scarlett, Digidesign Mbox1,
         Denon/Marantz DACs, Zoom R16/24
    
      FireWire:
       - DICE driver updates with better duplex and sync support, including
         MIDI support
       - New OXFW driver for Oxford Semiconductor FW970/971 chipset,
         including the previous LaCie Speakers device.  Fullduplex and MIDI
         support included as well as DICE driver.
    
      HD-audio:
       - Refactoring the driver-caps quirk handling in snd-hda-intel
       - More consistent control names representing the topology better
       - Fixups: HP mute LED with ALC268 codec, Ideapad S210 built-in mic
         fix, ASUS Z99He laptop EAPD
    
      ASoC:
       - Conversion of AC'97 drivers to use regmap, bringing us closer to
         the removal of the ASoC level I/O code
       - Clean up a lot of old drivers that were open coding things that
         have subsequently been implemented in the core
       - Some DAPM performance improvements
       - Removal of the now seldom used CODEC mutex
       - Lots of updates for the newer Intel SoC support, including support
         for the DSP and some Cherrytrail and Braswell machine drivers
       - Support for Samsung boards using rt5631 as the CODEC
       - Removal of the obsolete AFEB9260 machine driver
       - Driver support for the TI TS3A227E headset driver used in some
         Chrombeooks
    
      Others:
       - ASIHPI driver update and cleanups
       - Lots of dev_*() printk conversions
       - Lots of trivial cleanups for the codes spotted by Coccinelle"
    
    * tag 'sound-3.19-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (594 commits)
      ALSA: pcxhr: NULL dereference on probe failure
      ALSA: lola: NULL dereference on probe failure
      ALSA: hda - Add "eapd" model string for AD1986A codec
      ALSA: hda - Add EAPD fixup for ASUS Z99He laptop
      ALSA: oxfw: Add hwdep interface
      ALSA: oxfw: Add support for capture/playback MIDI messages
      ALSA: oxfw: add support for capturing PCM samples
      ALSA: oxfw: Add support AMDTP in-stream
      ALSA: oxfw: Add support for Behringer/Mackie devices
      ALSA: oxfw: Change the way to start stream
      ALSA: oxfw: Add proc interface for debugging purpose
      ALSA: oxfw: Change the way to make PCM rules/constraints
      ALSA: oxfw: Add support for AV/C stream format command to get/set supported stream formation
      ALSA: oxfw: Change the way to name card
      ALSA: dice: Add support for MIDI capture/playback
      ALSA: dice: Add support for capturing PCM samples
      ALSA: dice: Support for non SYT-Match sampling clock source mode
      ALSA: dice: Add support for duplex streams with synchronization
      ALSA: dice: Change the way to start stream
      ALSA: jack: Add dummy snd_jack_set_key() definition
      ...

commit f720d7df993b2cd62c723f1803bc8330871d478f
Merge: 3865efcb14f4 eaca2d8e75e9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 14 12:44:48 2014 -0800

    Merge tag 'firewire-fix' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull firewire fix from Stefan Richter:
     "IEEE 1394 (FireWire) subsystem fix: The character device file
      interface for raw 1394 I/O took uninitialized kernel stack as
      substitute for missing ioctl() argument data.  This could partially
      show up in subsequent read() output"
    
    * tag 'firewire-fix' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: cdev: prevent kernel stack leaking into ioctl arguments

commit 57b252f8fdcb40044b721f0627efd3ae292b6970
Merge: 44bf091f5089 05244d166739
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Sep 4 08:49:06 2014 -0700

    Merge tag 'sound-3.17-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "This time it contains a bunch of small ASoC fixes that slipped from in
      previous updates, in addition to the usual HD-audio fixes and the
      regression fixes for FireWire updates in 3.17.
    
      All commits are reasonably small fixes"
    
    * tag 'sound-3.17-rc4' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda - Fix COEF setups for ALC1150 codec
      ASoC: simple-card: Fix bug of wrong decrement DT node's refcount
      ALSA: hda - Fix digital mic on Acer Aspire 3830TG
      ASoC: omap-twl4030: Fix typo in 2nd dai link's platform_name
      ALSA: firewire-lib/dice: add arrangements of PCM pointer and interrupts for Dice quirk
      ALSA: dice: fix wrong channel mappping at higher sampling rate
      ASoC: cs4265: Fix setting of functional mode and clock divider
      ASoC: cs4265: Fix clock rates in clock map table
      ASoC: rt5677: correct mismatch widget name
      ASoC: rt5640: Do not allow regmap to use bulk read-write operations
      ASoC: tegra: Fix typo in include guard
      ASoC: da732x: Fix typo in include guard
      ASoC: core: fix .info for SND_SOC_BYTES_TLV
      ASoC: rcar: Use && instead of & for boolean expressions
      ASoC: Use dev_set_name() instead of init_name
      ASoC: axi: Fix ADI AXI SPDIF specification

commit 27c828816d744d8aadd99f4965600aced35287de
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jul 26 14:05:10 2014 +0200

    ALSA: firewire: trivial typo fixes in Kconfig
    
    ESI Quotafire -> QuataFire
    TerraTec EWS Mic4 -> Mic8
    Firewire -> FireWire
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 2bdb5eb79bbb0403fd272d097b14ae649302b98d
Merge: 2062afb4f804 d584a6627994
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jul 27 09:42:06 2014 -0700

    Merge tag 'firewire-fix-vt6315' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull firewire regression fix from Stefan Richter:
     "IEEE 1394 (FireWire) subsystem fix: MSI don't work on VIA PCIe
      controllers with some isochronous workloads (regression since
      v3.16-rc1)"
    
    * tag 'firewire-fix-vt6315' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: ohci: disable MSI for VIA VT6315 again

commit 9c5502189fa00ad623aed7ff006d5c2a16b121c0
Merge: 051c2a9fdebd eb12f72ee724
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jul 25 18:03:45 2014 -0700

    Merge tag 'sound-3.16-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Here contains only the fixes for the new FireWire bebob driver.  All
      fairly trivial and local fixes, so safe to apply"
    
    * tag 'sound-3.16-rc7' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: bebob: Correction for return value of special_clk_ctl_put() in error
      ALSA: bebob: Correction for return value of .put callback
      ALSA: bebob: Use different labels for digital input/output
      ALSA: bebob: Fix a missing to unlock mutex in error handling case

commit 1b81e88189446fd6ee21e7e76770154931c5ea60
Merge: 8ec8ba8e7d5b 655fc39bf403
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 14 17:17:53 2014 -0700

    Merge tag 'firewire-fix' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull firewire fix from Stefan Richter:
     "The 1394 drivers cannot and are not supposed to be built on platforms
      which don't provide the DMA mapping API (regression since v3.16-rc1
      with CONFIG_COMPILE_TEST=y on some architectures)"
    
    * tag 'firewire-fix' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: IEEE 1394 (FireWire) support should depend on HAS_DMA

commit 655fc39bf40331e13503bed85c9ed0278bc35575
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Wed Jul 9 21:04:00 2014 +0200

    firewire: IEEE 1394 (FireWire) support should depend on HAS_DMA
    
    Commit b3d681a4fc108f9653bbb44e4f4e72db2b8a5734 ("firewire: Use
    COMPILE_TEST for build testing") added COMPILE_TEST as an alternative
    dependency for the purpose of build testing the firewire core.
    However, this bypasses all other implicit dependencies assumed by PCI,
    like HAS_DMA.
    
    If NO_DMA=y:
    
        drivers/built-in.o: In function `fw_iso_buffer_destroy':
        (.text+0x36a096): undefined reference to `dma_unmap_page'
        drivers/built-in.o: In function `fw_iso_buffer_map_dma':
        (.text+0x36a164): undefined reference to `dma_map_page'
        drivers/built-in.o: In function `fw_iso_buffer_map_dma':
        (.text+0x36a172): undefined reference to `dma_mapping_error'
        drivers/built-in.o: In function `sbp2_send_management_orb':
        sbp2.c:(.text+0x36c6b4): undefined reference to `dma_map_single'
        sbp2.c:(.text+0x36c6c8): undefined reference to `dma_mapping_error'
        sbp2.c:(.text+0x36c772): undefined reference to `dma_map_single'
        sbp2.c:(.text+0x36c786): undefined reference to `dma_mapping_error'
        sbp2.c:(.text+0x36c854): undefined reference to `dma_unmap_single'
        sbp2.c:(.text+0x36c872): undefined reference to `dma_unmap_single'
        drivers/built-in.o: In function `sbp2_map_scatterlist':
        sbp2.c:(.text+0x36ccbc): undefined reference to `scsi_dma_map'
        sbp2.c:(.text+0x36cd36): undefined reference to `dma_map_single'
        sbp2.c:(.text+0x36cd4e): undefined reference to `dma_mapping_error'
        sbp2.c:(.text+0x36cd84): undefined reference to `scsi_dma_unmap'
        drivers/built-in.o: In function `sbp2_unmap_scatterlist':
        sbp2.c:(.text+0x36cda6): undefined reference to `scsi_dma_unmap'
        sbp2.c:(.text+0x36cdc6): undefined reference to `dma_unmap_single'
        drivers/built-in.o: In function `complete_command_orb':
        sbp2.c:(.text+0x36d6ac): undefined reference to `dma_unmap_single'
        drivers/built-in.o: In function `sbp2_scsi_queuecommand':
        sbp2.c:(.text+0x36d8e0): undefined reference to `dma_map_single'
        sbp2.c:(.text+0x36d8f6): undefined reference to `dma_mapping_error'
    
    Add an explicit dependency on HAS_DMA to fix this.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 6391f34e844c71ebf645058b2b643f70fed5b990
Merge: 4bdeb312083e 8a02b164d4bf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jun 13 07:42:49 2014 -0700

    Merge tag 'sound-fix-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Most of changes are small and easy cleanup or fixes:
    
       - a few HD-audio Realtek codec fixes and quirks
       - Intel HDMI audio fixes for Broadwell and Haswell / ValleyView
       - FireWire sound stack cleanups
       - a couple of sequencer core fixes
       - compress ABI fix for 64bit
       - conversion to modern ktime*() API"
    
    * tag 'sound-fix-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (23 commits)
      ALSA: hda/realtek - Add more entry for enable HP mute led
      ALSA: hda - Add quirk for external mic on Lifebook U904
      ALSA: hda - fix a fixup value for codec alc293 in the pin_quirk table
      ALSA: intel8x0: Use ktime and ktime_get()
      ALSA: core: Use ktime_get_ts()
      ALSA: hda - verify pin:converter connection on unsol event for HSW and VLV
      ALSA: compress: Cancel the optimization of compiler and fix the size of struct for all platform.
      ALSA: hda - Add quirk for ABit AA8XE
      Revert "ALSA: hda - mask buggy stream DMA0 for Broadwell display controller"
      ALSA: hda - using POS_FIX_LPIB on Broadwell HDMI Audio
      ALSA: hda/realtek - Add support of ALC667 codec
      ALSA: hda/realtek - Add more codec rename
      ALSA: hda/realtek - New vendor ID for ALC233
      ALSA: hda - add two new pin tables
      ALSA: hda/realtek - Add support of ALC891 codec
      ALSA: seq: Continue broadcasting events to ports if one of them fails
      ALSA: bebob: Remove unused function prototype
      ALSA: fireworks: Remove meaningless mutex_destroy()
      ALSA: fireworks: Remove a constant over width to which it's applied
      ALSA: fireworks: Improve comments about Fireworks transaction
      ...

commit b77279bc2e81545b20824da701b349272a78e4e7
Merge: 15b588303155 16088cb6c02d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 4 09:08:25 2014 -0700

    Merge tag 'sound-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound into next
    
    Pull sound updates from Takashi Iwai:
     "At this time, majority of changes come from ASoC world while we got a
      few new drivers in other places for FireWire and USB.  There have been
      lots of ASoC core cleanups / refactoring, but very little visible to
      external users.
    
      ASoC:
       - Support for specifying aux CODECs in DT
       - Removal of the deprecated mux and enum macros
       - More moves towards full componentisation
       - Removal of some unused I/O code
       - Lots of cleanups, fixes and enhancements to the davinci, Freescale,
         Haswell and Realtek drivers
       - Several drivers exposed directly in Kconfig for use with
         simple-card
       - GPIO descriptor support for jacks
       - More updates and fixes to the Freescale SSI, Intel and rsnd drivers
       - New drivers for Cirrus CS42L56, Realtek RT5639, RT5642 and RT5651
         and ST STA350, Analog Devices ADAU1361, ADAU1381, ADAU1761 and
         ADAU1781, and Realtek RT5677
    
      HD-audio:
       - Clean up Dell headset quirks
       - Noise fixes for Dell and Sony laptops
       - Thinkpad T440 dock fix
       - Realtek codec updates (ALC293,ALC233,ALC3235)
       - Tegra HD-audio HDMI support
    
      FireWire-audio:
       - FireWire audio stack enhancement (AMDTP, MIDI), support for
         incoming isochronous stream and duplex streams with timestamp
         synchronization
       - BeBoB-based devices support
       - Fireworks-based device support
    
      USB-audio:
       - Behringer BCD2000 USB device support
    
      Misc:
       - Clean up of a few old drivers, atmel, fm801, etc"
    
    * tag 'sound-3.16-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (480 commits)
      ASoC: Fix wrong argument for card remove callbacks
      ASoC: free jack GPIOs before the sound card is freed
      ALSA: firewire-lib: Remove a comment about restriction of asynchronous operation
      ASoC: cache: Fix error code when not using ASoC level cache
      ALSA: hda/realtek - Fix COEF widget NID for ALC260 replacer fixup
      ALSA: hda/realtek - Correction of fixup codes for PB V7900 laptop
      ALSA: firewire-lib: Use IEC 61883-6 compliant labels for Raw Audio data
      ASoC: add RT5677 CODEC driver
      ASoC: intel: The Baytrail/MAX98090 driver depends on I2C
      ASoC: rt5640: Add the function "get_clk_info" to RL6231 shared support
      ASoC: rt5640: Add the function of the PLL clock calculation to RL6231 shared support
      ASoC: rt5640: Add RL6231 class device shared support for RT5640, RT5645 and RT5651
      ASoC: cache: Fix possible ZERO_SIZE_PTR pointer dereferencing error.
      ASoC: Add helper functions to cast from DAPM context to CODEC/platform
      ALSA: bebob: sizeof() vs ARRAY_SIZE() typo
      ASoC: wm9713: correct mono out PGA sources
      ALSA: synth: emux: soundfont.c: Cleaning up memory leak
      ASoC: fsl: Remove dependencies of boards for SND_SOC_EUKREA_TLV320
      ASoC: fsl-ssi: Use regmap
      ASoC: fsl-ssi: reorder and document fsl_ssi_private
      ...

commit 1b3636093d4e07f5fc8a8eb2f9a5e14a5a2674bf
Merge: 1605abfffe33 d151f9854f21
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 4 07:47:03 2014 -0700

    Merge tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394 into next
    
    Pull firewire updates from Stefan Richter:
     "IEEE 1394 (FireWire) subsystem changes: One optimization for some VIA
      controllers, one fix, one kconfig brushup"
    
    * tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: ohci: enable MSI for VIA VT6315 rev 1, drop cycle timer quirk
      firewire: Use COMPILE_TEST for build testing
      firewire: net: fix NULL derefencing in fwnet_probe()

commit fd6f4b0dc167c6329a153ceeeb95bc41307156f3
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Apr 25 22:45:14 2014 +0900

    ALSA: bebob: Add skelton for BeBoB based devices
    
    This commit adds a new driver for BeBoB based devices with no specific
    operations. Currently this driver just create/remove card instance according
    to callbacks.
    
    BeBoB is 'BridgeCo enhanced Breakout Box'. This is installed to firewire
    devices with DM1000/DM1100/DM1500 chipset. It gives common way for host
    system to handle BeBoB based devices.
    
    Current supported devices:
     - Edirol FA-66/FA-101
     - PreSonus FIREBOX/FIREPOD/FP10/Inspire1394
     - BridgeCo RDAudio1/Audio5
     - Mackie Onyx 1220/1620/1640 (Firewire I/O Card)
     - Mackie d.2 (Firewire Option)
     - Stanton FinalScratch 2 (ScratchAmp)
     - Tascam IF-FW DM
     - Behringer XENIX UFX 1204/1604
     - Behringer Digital Mixer X32 series (X-UF Card)
     - Apogee Rosetta 200/Rosetta 400 (X-FireWire card)
     - Apogee DA-16X/AD-16X/DD-16X (X-FireWire card)
     - Apogee Ensemble
     - ESI Quotafire610
     - AcousticReality eARMasterOne
     - CME MatrixKFW
     - Phonix Helix Board 12 MkII/18 MkII/24 MkII
     - Phonic Helix Board 12 Universal/18 Universal/24 Universal
     - Lynx Aurora 8/16 (LT-FW)
     - ICON FireXon
     - PrismSound Orpheus/ADA-8XR
    
    Devices possible to be supported if identifying IDs:
     - Apogee Mini-Me Firewire/Mini-DAC Firewire
     - Behringer F-Control Audio 610/1616
     - Cakewalk Sonar Power Studio 66
     - CME UF400e
     - ESI Quotafire XL
     - Infrasonic DewX/Windy6
     - Mackie Digital X Bus x.200/400
     - Phonic Helix Board 12/18/24
     - Phonic FireFly 202/302
     - Rolf Spuler Firewire Guitar
    
    Tested-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 028e219eff45ce8ba962c59e3dbc622499e88d50
Merge: 562e74fefc36 fcd46b34425d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jan 27 08:14:08 2014 -0800

    Merge tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull firewire updates from Stefan Richter:
     "IEEE 1394 (FireWire) subsystem changes:
    
       - make remote debugging over 1394 a runtime option instead of a
         buildtime option
       - extend remote debug access past the 4 GB barrier on respectively
         capable hardware
       - documentation update"
    
    * tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: Enable remote DMA above 4 GB
      firewire: ohci: Turn remote DMA support into a module parameter
      Documentation/: update FireWire debugging documentation

commit fcd46b34425da52703fe65b7f08850c509dcb0ed
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jan 18 17:32:20 2014 +0100

    firewire: Enable remote DMA above 4 GB
    
    This makes all of a machine's memory accessible to remote debugging via
    FireWire, using the physical response unit (i.e. RDMA) of OHCI-1394 link
    layer controllers.
    
    This requires actual support by the controller.  The only ones currently
    known to support it are Agere/LSI FW643.  Most if not all other OHCI-1394
    controllers do not implement the optional Physical Upper Bound register.
    With them, RDMA will continue to be limited to the lowermost 4 GB.
    
    firewire-ohci's startup message in the kernel log is augmented to tell
    whether the controller does expose more than 4 GB to RDMA.
    
    While OHCI-1394 allows for a maximum Physical Upper Bound of
    0xffff'0000'0000 (near 256 TB), this implementation sets it to
    0x8000'0000'0000 (128 TB) in order to avoid interference with applications
    that require interrupt-served asynchronous request reception at
    respectively low addresses.
    
    Note, this change does not switch remote DMA on.  It only increases the
    range of remote access to all memory (instead of just 4 GB) whenever
    remote DMA was switched on by other means.  The latter is achieved by
    setting firewire-ohci's remote_dma parameter, or if the physical DMA
    filter is opened through firewire-sbp2.
    
    Derived from patch "firewire: Enable physical DMA above 4GB" by
    Peter Hurley <peter@hurleysoftware.com> from March 27, 2013.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 8bc588e0e585bc9085df75e84d4d5635f45cf360
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sun Dec 22 11:34:22 2013 +0100

    firewire: ohci: Turn remote DMA support into a module parameter
    
    This makes it possible to debug kernel over FireWire without the need to
    recompile it.
    
    [Stefan R: changed description from "...0" to "...N"]
    
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit a9954ce769e2c8b450b00ab2a4e208f447996b2d
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sun Dec 22 11:31:41 2013 +0100

    Documentation/: update FireWire debugging documentation
    
    The old firewire stack is long dead now and a new version firescope has
    been released with support for current kernels.
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Cc: Rob Landley <rob@landley.net>
    Cc: Justin P. Mattock <justinmattock@gmail.com>
    Cc: Bernhard Kaindl <bk@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit b8495995dd8ad425ec1b78f7182586d5a004d8ec
Merge: b01537bfbc83 eb9ca3ab2194
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 29 09:36:42 2013 -0800

    Merge tag 'sound-3.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound fixes from Takashi Iwai:
     "Quite a few HD-Audio fixes, a WUSB audio fix and a fix for FireWire
      audio.  The HD-audio part contains a couple of fixes for the generic
      parser, and these are the only intrusive fixes.  The rest are mostly
      device-specific fixes"
    
    * tag 'sound-3.13-rc2' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound:
      ALSA: hda - Add LFE chmap to ASUS ET2700
      ALSA: hda - Initialize missing bass speaker pin for ASUS AIO ET2700
      ALSA: hda - limit mic boost on Asus UX31[A,E]
      ALSA: hda - Check leaf nodes to find aamix amps
      ALSA: hda - Fix hp-mic mode without VREF bits
      ALSA: hda - Create Headhpone Mic Jack Mode when really needed
      ALSA: usb: use multiple packets per urb for Wireless USB inbound audio
      ALSA: hda - Enable mute/mic-mute LEDs for more Thinkpads with Conexant codec
      ALSA: hda - Drop bus->avoid_link_reset flag
      ALSA: hda/realtek - Set pcbeep amp for ALC668
      ALSA: hda/realtek - Add support of ALC231 codec
      ALSA: firewire-lib: fix wrong value for FDF field as an empty packet

commit 94a87157cde95d38b9cdf1116e4f0fd93f6d25df
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Jun 9 18:15:00 2013 +0200

    firewire: introduce fw_driver.probe and .remove methods
    
    FireWire upper layer drivers are converted from generic
        struct driver.probe() and .remove()
    to bus-specific
        struct fw_driver.probe() and .remove().
    
    The new .probe() adds a const struct ieee1394_device_id *id argument,
    indicating the entry in the driver's device identifiers table which
    matched the fw_unit to be probed.  This new argument is used by the
    snd-firewire-speakers driver to look up device-specific parameters and
    methods.  There is at least one other FireWire audio driver currently in
    development in which this will be useful too.
    
    The new .remove() drops the unused error return code.
    
    Although all in-tree drivers are being converted to the new methods,
    support for the old methods is left in place in this commit.  This
    allows public developer trees to merge this commit and then move to the
    new fw_driver methods.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Acked-by: Clemens Ladisch <clemens@ladisch.de> (for sound/firewire/)
    Cc: Peter Hurley <peter@hurleysoftware.com> (for drivers/staging/fwserial/)

commit bd972688eb2404239a8f1255db26b0bb6b604686
Author: Peter Hurley <peter@hurleysoftware.com>
Date:   Sun Apr 28 23:24:08 2013 +0200

    firewire: ohci: Fix 'failed to read phy reg' on FW643 rev8
    
    With the LSI FW643 rev 8 [1], the first commanded bus reset at
    the conclusion of ohci_enable() has been observed to fail with
    the following messages:
    
    [    4.884015] firewire_ohci 0000:01:00.0: failed to read phy reg
    ....
    [    5.684012] firewire_ohci 0000:01:00.0: failed to read phy reg
    
    With drivers/firewire/ohci.c instrumented, the error condition [2]
    indicates the PHY arbitration state machine has timed out prior to
    enabling PHY LCtrl.
    
    Furthermore, instrumenting ohci_enable() shows that LPS has been
    enabled within 1 ms.
    
    Test LPS latching every 1 ms rather than every 50ms.
    
    [1]  lspci -v
    
    01:00.0 FireWire (IEEE 1394): LSI Corporation FW643 [TrueFire] PCIe 1394b Controller (rev 08) (prog-if 10 [OHCI])
            Subsystem: LSI Corporation FW643 [TrueFire] PCIe 1394b Controller
            Flags: bus master, fast devsel, latency 0, IRQ 92
            Memory at fbeff000 (64-bit, non-prefetchable) [size=4K]
            Capabilities: [44] Power Management version 3
            Capabilities: [4c] MSI: Enable+ Count=1/1 Maskable- 64bit+
            Capabilities: [60] Express Endpoint, MSI 00
            Capabilities: [100] Advanced Error Reporting
            Capabilities: [140] Virtual Channel
            Capabilities: [170] Device Serial Number 08-14-43-82-00-00-41-fc
            Kernel driver in use: firewire_ohci
            Kernel modules: firewire-ohci
    
    [2] instrumented WARNING in read_phy_reg()
    
    [    4.576010] ------------[ cut here ]------------
    [    4.576035] WARNING: at ./drivers/firewire/ohci.c:570 read_phy_reg+0x93/0xe0 [firewire_ohci]()
    [    4.576050] Hardware name: Precision WorkStation T5400
    [    4.576058] failed to read phy reg:1 (phy(5) @ config enhance:19)
    [    4.576068] Modules linked in: hid_logitech_dj hid_generic(+) usbhid <...snip...>
    [    4.576140] Pid: 61, comm: kworker/2:1 Not tainted 3.8.0-2+fwtest-xeon #2+fwtest
    [    4.576149] Call Trace:
    [    4.576160]  [<ffffffff8105468f>] warn_slowpath_common+0x7f/0xc0
    [    4.576168]  [<ffffffff81054786>] warn_slowpath_fmt+0x46/0x50
    [    4.576178]  [<ffffffffa00caca3>] read_phy_reg+0x93/0xe0 [firewire_ohci]
    [    4.576188]  [<ffffffffa00cae19>] ohci_read_phy_reg+0x39/0x60 [firewire_ohci]
    [    4.576203]  [<ffffffffa00731ff>] fw_send_phy_config+0xbf/0xe0 [firewire_core]
    [    4.576214]  [<ffffffffa006b2d6>] br_work+0x46/0xb0 [firewire_core]
    [    4.576225]  [<ffffffff81071e0c>] process_one_work+0x13c/0x500
    [    4.576238]  [<ffffffffa006b290>] ? fw_card_initialize+0x180/0x180 [firewire_core]
    [    4.576248]  [<ffffffff810737ed>] worker_thread+0x16d/0x470
    [    4.576257]  [<ffffffff81073680>] ? busy_worker_rebind_fn+0x100/0x100
    [    4.576266]  [<ffffffff8107d160>] kthread+0xc0/0xd0
    [    4.576275]  [<ffffffff816a0000>] ? pcpu_dump_alloc_info+0x1cb/0x2c4
    [    4.576284]  [<ffffffff8107d0a0>] ? kthread_create_on_node+0x130/0x130
    [    4.576297]  [<ffffffff816b2f6c>] ret_from_fork+0x7c/0xb0
    [    4.576305]  [<ffffffff8107d0a0>] ? kthread_create_on_node+0x130/0x130
    [    4.576313] ---[ end trace cbc940994b300302 ]---
    
    [Stefan R:  Peter also reports a change of behavior with LSI FW323.
    Before the patch, there would often occur a lock transaction failure
    during firewire-core startup:
    [    6.056022] firewire_core 0000:07:06.0: BM lock failed (timeout), making local node (ffc0) root
    This failure no longer happens after the patch, without an obvious
    reason for the failure or the fix.]
    
    [Stefan R:  Added quirk flag, quirk table entry, and comment.]
    
    Reported-by: Tim Jordan <tim@insipid.org.uk>
    Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit dadfab4873256d2145640c0ce468fcbfb48977fe
Merge: 046e7d685bc3 db2cad2f5507
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 13 11:59:27 2012 -0800

    Merge tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull IEEE 1394 (FireWire) subsystem updates from Stefan Richter:
      - IPv4-over-1394: fixes for broadcast and multicast
      - SBP-2: allow thin-provisioning related commands
      - trivia
    
    * tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: net: remove unused variable in fwnet_receive_broadcast()
      firewire: net: Fix handling of fragmented multicast/broadcast packets.
      firewire: sbp2: allow WRITE SAME and REPORT SUPPORTED OPERATION CODES
      tools/firewire: nosy-dump: check for allocation failure

commit 046e7d685bc370fd4c879ab6635ad3f69e6673d1
Merge: fe504c5c745a 6eb827d23577
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 13 11:51:23 2012 -0800

    Merge tag 'sound-3.8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
    
    Pull sound updates from Takashi Iwai:
     "This update contains a fairly wide range of changes all over in sound
      subdirectory, mainly because of UAPI header moves by David and __dev*
      annotation removals by Bill.  Other highlights are:
    
       - Introduced the support for wallclock timestamps in ALSA PCM core
    
       - Add the poll loop implementation for HD-audio jack detection
    
       - Yet more VGA-switcheroo fixes for HD-audio
    
       - New VIA HD-audio codec support
    
       - More fixes on resource management in USB audio and MIDI drivers
    
       - More quirks for USB-audio ASUS Xonar U3, Reloop Play, Focusrite,
         Roland VG-99, etc
    
       - Add support for FastTrack C400 usb-audio
    
       - Clean ups in many drivers regarding firmware loading
    
       - Add PSC724 Ultiimate Edge support to ice1712
    
       - A few hdspm driver updates
    
       - New Stanton SCS.1d/1m FireWire driver
    
       - Standardisation of the logging in ASoC codes
    
       - DT and dmaengine support for ASoC Atmel
    
       - Support for Wolfson ADSP cores
    
       - New drivers for Freescale/iVeia P1022 and Maxim MAX98090
    
       - Lots of other ASoC driver fixes and developments"
    
    Fix up trivial conflicts.  And go out on a limb and assume the dts file
    'status' field of one of the conflicting things was supposed to be
    "disabled", not "disable" like in pretty much all other cases.
    
    * tag 'sound-3.8' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound: (341 commits)
      ALSA: hda - Move runtime PM check to runtime_idle callback
      ALSA: hda - Add stereo-dmic fixup for Acer Aspire One 522
      ALSA: hda - Avoid doubly suspend after vga switcheroo
      ALSA: usb-audio: Enable S/PDIF on the ASUS Xonar U3
      ALSA: hda - Check validity of CORB/RIRB WP reads
      ALSA: hda - use usleep_range in link reset and change timeout check
      ALSA: HDA: VIA: Add support for codec VT1808.
      ALSA: HDA: VIA Add support for codec VT1705CF.
      ASoC: codecs: remove __dev* attributes
      ASoC: utils: remove __dev* attributes
      ASoC: ux500: remove __dev* attributes
      ASoC: txx9: remove __dev* attributes
      ASoC: tegra: remove __dev* attributes
      ASoC: spear: remove __dev* attributes
      ASoC: sh: remove __dev* attributes
      ASoC: s6000: remove __dev* attributes
      ASoC: OMAP: remove __dev* attributes
      ASoC: nuc900: remove __dev* attributes
      ASoC: mxs: remove __dev* attributes
      ASoC: kirkwood: remove __dev* attributes
      ...

commit 37419d674ca99739dbee5ada28b50aacc29c94e1
Author: Chris Boot <bootc@bootc.net>
Date:   Tue Dec 11 21:58:47 2012 +0000

    sbp-target: use simple assignment in tgt_agent_rw_agent_state()
    
    There is no need to memcpy() a 32-bit integer. The data pointer is
    guaranteed to be quadlet aligned by the FireWire stack so we can replace
    the memcpy() with an assignment.
    
    Thanks to Stefan Richter.
    
    Signed-off-by: Chris Boot <bootc@bootc.net>
    Cc: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: Clemens Ladisch <clemens@ladisch.de>
    Cc: Nicholas A. Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

commit 5db44863b6ebbb400c5e61d56ebe8f21ef48b1bd
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Tue Sep 18 12:19:32 2012 -0400

    [SCSI] sd: Implement support for WRITE SAME
    
    Implement support for WRITE SAME(10) and WRITE SAME(16) in the SCSI disk
    driver.
    
     - We set the default maximum to 0xFFFF because there are several
       devices out there that only support two-byte block counts even with
       WRITE SAME(16). We only enable transfers bigger than 0xFFFF if the
       device explicitly reports MAXIMUM WRITE SAME LENGTH in the BLOCK
       LIMITS VPD.
    
     - max_write_same_blocks can be overriden per-device basis in sysfs.
    
     - The UNMAP discovery heuristics remain unchanged but the discard
       limits are tweaked to match the "real" WRITE SAME commands.
    
     - In the error handling logic we now distinguish between WRITE SAME
       with and without UNMAP set.
    
    The discovery process heuristics are:
    
     - If the device reports a SCSI level of SPC-3 or greater we'll issue
       READ SUPPORTED OPERATION CODES to find out whether WRITE SAME(16) is
       supported. If that's the case we will use it.
    
     - If the device supports the block limits VPD and reports a MAXIMUM
       WRITE SAME LENGTH bigger than 0xFFFF we will use WRITE SAME(16).
    
     - Otherwise we will use WRITE SAME(10) unless the target LBA is beyond
       0xFFFFFFFF or the block count exceeds 0xFFFF.
    
     - no_write_same is set for ATA, FireWire and USB.
    
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Mike Snitzer <snitzer@redhat.com>
    Reviewed-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 3c6bdaeab4fda6c9fdd5f3f5c610dea97bddf7d6
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Tue Sep 18 12:19:30 2012 -0400

    [SCSI] Add a report opcode helper
    
    The REPORT SUPPORTED OPERATION CODES command can be used to query
    whether a given opcode is supported by a device. Add a helper function
    that allows us to look up commands.
    
    We only issue RSOC if the device reports compliance with SPC-3 or
    later. But to err on the side of caution we disable the command for ATA,
    FireWire and USB.
    
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Acked-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

commit 1999c3a035d7eace5dc9c5044e2aa3aaba8a1974
Author: Clemens Ladisch <clemens@ladisch.de>
Date:   Sat May 26 11:43:19 2012 +0200

    ALSA: firewire: add Stanton SCS.1d/1m driver
    
    Add a MIDI driver for the Stanton FireWire DJ controllers.
    
    Tested-by: Sean M. Pappalardo - D.J. Pegasus <spappalardo@mixxx.org>
    Signed-off-by: Clemens Ladisch <clemens@ladisch.de>

commit eb86ec51f839e3ad794a03d0f8f40a2b13df6da4
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Nov 3 09:25:20 2012 +0100

    [media] firedtv: add MAINTAINERS entry
    
    There is currently discussion to add MAINTAINERS records for media
    drivers that don't have one yet, possibly with 'orphan' or 'odd fixes'
    status.  Here is a proper entry for the firedtv driver (for 1394
    attached DVB STBs and 1394 attached DVB cards from Digital Everywhere).
    
    The L: linux-media and T: linux-media.git lines in this entry are
    redundant to what scripts/get_maintainer.pl would show automatically but
    I added them for folks who read MAINTAINERS directly.  The "(firedtv)"
    string is for those folks as well if they look for driver name rather
    than file path.
    
    The F: drivers/media/firewire/ pattern and the "FireWire media drivers"
    title are currently synonymous with firedtv.  If more drivers get added
    there, this can be revisited.
    
    I don't have documentation or DVB-S2 devices to test, but I have DVB-C
    and DVB-T devices for testing.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

commit df5a2a1fbca44bebeebb78530ac93c734f289707
Merge: 9b2e077c42a9 4d50c44381c9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Oct 3 13:55:12 2012 -0700

    Merge tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull firewire updates from Stefan Richter:
      - feed GUIDs of FireWire nodes to the random pool
      - more complete quirk handling of a TI S400B phy
      - avoid holding a core lock while calling into highlevel drivers
    
    * tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: addendum to address handler RCU conversion
      firewire: remove global lock around address handlers, convert to RCU
      firewire: ohci: get IR bit from TSB41BA3D phy
      firewire: core: feed /dev/random with devices' GUIDs

commit 2f78d8e249973f1eeb88315e6444e616c60177ae
Merge: f2fde3a65e88 26c72e22c94f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 24 12:57:47 2012 -0700

    Merge tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull IEEE 1394 (FireWire) subsystem updates from Stefan Richter:
    
     - Fix mismatch between DMA mapping direction (was wrong) and DMA
       synchronization direction (was correct) of isochronous reception
       buffers of userspace drivers if vma-mapped for R/W access.  For
       example, libdc1394 was affected.
    
     - more consistent retry stategy in device discovery/ rediscovery, and
       improved failure diagnostics
    
     - various small cleanups, e.g. use SCSI layer's DMA mapping API in
       firewire-sbp2
    
    * tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: sbp2: document the absence of alignment requirements
      firewire: sbp2: remove superfluous blk_queue_max_segment_size() call
      firewire: sbp2: use scsi_dma_(un)map
      firewire: sbp2: give correct DMA device to scsi framework
      firewire: core: fw_device_refresh(): clean up error handling
      firewire: core: log config rom reading errors
      firewire: core: log error in case of failed bus manager lock
      firewire: move rcode_string() to core
      firewire: core: improve reread_config_rom() interface
      firewire: core: wait for inaccessible devices after bus reset
      firewire: ohci: omit spinlock IRQ flags where possible
      firewire: ohci: correct signedness of a local variable
      firewire: core: fix DMA mapping direction
      firewire: use module_pci_driver

commit 2c13bc0f8f0d3e13b42be70bf74fec8e56b58324
Merge: 0bd3fbd4abea a511ce339780
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 23 16:52:27 2012 -0700

    Merge branch 'sbp-target-merge' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending
    
    Pull sbp-2 (firewire) target mode support from Nicholas Bellinger:
     "The FireWire SBP-2 Target is a driver for using an IEEE-1394
      connection as a SCSI transport.  This module uses the SCSI Target
      framework to expose LUNs to other machines attached to a FireWire bus,
      in effect acting as a FireWire hard disk similar to FireWire Target
      Disk mode on many Apple computers.
    
      Also included are the two drivers/firewire/ patches required by
      sbp-target to access fw_request fabric speed needed for mgt_agent
      TCODE_WRITE_BLOCK_REQUEST ops, and exporting fw_card kref logic used
      when creating/destroying active session references to individual
      endpoints.
    
      A credit goes to Chris in being able to get this code up and running
      so quickly w/o any target core changes, and special thanks goes out to
      Stefan Richter + Clemens Ladisch + Andy Grover for their help in
      getting this driver ready for mainline.  Also, one of Chris's goals
      was to be able to connect sbp-target to a PowerPC based MacOS-X based
      client, that he accomplished along the way in this obligatory
      screenshot:
    
        http://linux-iscsi.org/wiki/File:Linux-fireware-target-bootc-macosx.png
    
      Great work Chris + linux-1394 team !!"
    
    Acked-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    
    * 'sbp-target-merge' of git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending:
      sbp-target: Initial merge of firewire/ieee-1394 target mode support
      firewire: Move fw_card kref functions into linux/firewire.h
      firewire: Add function to get speed from opaque struct fw_request

commit a511ce3397803558a3591e55423f3ae6aa28c9db
Author: Chris Boot <bootc@bootc.net>
Date:   Sat Apr 14 17:50:35 2012 -0700

    sbp-target: Initial merge of firewire/ieee-1394 target mode support
    
    The FireWire SBP-2 Target is a driver for using an IEEE-1394 connection
    as a SCSI transport. This module uses the SCSI Target framework to
    expose LUNs to other machines attached to a FireWire bus, in effect
    acting as a FireWire hard disk similar to FireWire Target Disk mode
    on many Apple computers.
    
    This commit contains the squashed pull from Chris Boot's SBP-2-Target:
    
          https://github.com/bootc/Linux-SBP-2-Target.git patch-v3
    
    firewire-sbp-target: Add sbp_base.h header
    firewire-sbp-target: Add sbp_configfs.c
    firewire-sbp-target: Add sbp_fabric.{c,h}
    firewire-sbp-target: Add sbp_management_agent.{c,h}
    firewire-sbp-target: Add sbp_login.{c,h}
    firewire-sbp-target: Add sbp_target_agent.{c,h}
    firewire-sbp-target: Add sbp_scsi_cmnd.{c,h}
    firewire-sbp-target: Add to target Kconfig and Makefile
    
    Also add bootc's entry to the MAINTAINERS file.  Great work Chris !!
    
    Signed-off-by: Chris Boot <bootc@bootc.net>
    Acked-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

commit fc5f80b152896c1ffded2a91d11dcb08ffcffebb
Author: Chris Boot <bootc@bootc.net>
Date:   Wed Feb 1 22:36:02 2012 +0000

    firewire: Move fw_card kref functions into linux/firewire.h
    
    When writing a firewire driver that doesn't deal with struct fw_device
    objects (e.g. it only publishes FireWire units and doesn't subscribe to
    them), you likely need to keep referenced to struct fw_card objects so
    that you can send messages to other nodes. This patch moves
    fw_card_put(), fw_card_get() and fw_card_release() into the public
    include/linux/firewire.h header instead of drivers/firewire/core.h, and
    adds EXPORT_SYMBOL_GPL(fw_card_release).
    
    The firewire-sbp-target module requires these so it can keep a reference
    to the fw_card object in order that it can fetch ORBs to execute and
    read/write related data and status information.
    
    Signed-off-by: Chris Boot <bootc@bootc.net>
    Acked-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

commit 253d92371ca29a470b2bbf91fb9824a9fef05657
Author: Chris Boot <bootc@bootc.net>
Date:   Thu Feb 16 09:16:35 2012 +0000

    firewire: Add function to get speed from opaque struct fw_request
    
    Sometimes it's useful to know the FireWire speed of the request that has
    just come in to a fw_address_handler callback. As struct fw_request is
    opaque we can't peek inside to get the speed out of the struct fw_packet
    that's just inside. For example, the SBP-2 spec says:
    
    "The speed at which the block write request to the MANAGEMENT_AGENT
    register is received shall determine the speed used by the target for
    all subsequent requests to read the initiator’s configuration ROM, fetch
    ORB’s from initiator memory or store status at the initiator’s
    status_FIFO. Command block ORB’s separately specify the speed for
    requests addressed to the data buffer or page table."
    
    [ ANSI T10/1155D Revision 4 page 53/54 ]
    
    Signed-off-by: Chris Boot <bootc@bootc.net>
    Acked-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

commit 34699403e9916060af8ae23f5e4705a6c078e79d
Merge: 7fc86a7908a4 d1bbd2097293
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Mar 22 20:31:15 2012 -0700

    Merge tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    Pull IEEE 1394 (FireWire) subsystem updates post v3.3 from Stefan Richter:
    
     - Some SBP-2 initiator fixes, side product from ongoing work on a target.
    
     - Reintroduction of an isochronous I/O feature of the older ieee1394 driver
       stack (flush buffer completions); it was evidently rarely used but not
       actually unused.  Matching libraw1394 code is already available.
    
     - Be sure to prefix all kernel log messages with device name or card name,
       and other logging related cleanups.
    
     - Misc other small cleanups, among them a small API change that affects
       sound/firewire/ too. Clemens Ladisch is aware of it.
    
    * tag 'firewire-updates' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394: (26 commits)
      firewire: allow explicit flushing of iso packet completions
      firewire: prevent dropping of completed iso packet header data
      firewire: ohci: factor out iso completion flushing code
      firewire: ohci: simplify iso header pointer arithmetic
      firewire: ohci: optimize control bit checks
      firewire: ohci: remove unused excess_bytes field
      firewire: ohci: copy_iso_headers(): make comment match the code
      firewire: cdev: fix IR multichannel event documentation
      firewire: ohci: fix too-early completion of IR multichannel buffers
      firewire: ohci: move runtime debug facility out of #ifdef
      firewire: tone down some diagnostic log messages
      firewire: sbp2: replace a GFP_ATOMIC allocation
      firewire: sbp2: Fix SCSI sense data mangling
      firewire: sbp2: Ignore SBP-2 targets on the local node
      firewire: sbp2: Take into account Unit_Unique_ID
      firewire: nosy: Use the macro DMA_BIT_MASK().
      firewire: core: convert AR-req handler lock from _irqsave to _bh
      firewire: core: fix race at address_handler unregistration
      firewire: core: remove obsolete comment
      firewire: core: prefix log messages with card name
      ...

commit 4995a6913d6ada9672179736affd5606f2281edb
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Aug 11 00:06:04 2011 +0200

    firewire: cdev: fix 32 bit userland on 64 bit kernel compat corner cases
    
    commit 9c1176b6a28850703ea6e3a0f0c703f6d6c61cd3 upstream.
    
    Clemens points out that we need to use compat_ptr() in order to safely
    cast from u64 to addresses of a 32-bit usermode client.
    
    Before, our conversion went wrong
      - in practice if the client cast from pointer to integer such that
        sign-extension happened, (libraw1394 and libdc1394 at least were not
        doing that, IOW were not affected)
    or
      - in theory on s390 (which doesn't have FireWire though) and on the
        tile architecture, regardless of what the client does.
    The bug would usually be observed as the initial get_info ioctl failing
    with "Bad address" (EFAULT).
    
    Reported-by: Carl Karsten <carl@personnelware.com>
    Reported-by: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98466cc4502b3171f1bdc146db0d2106fcbc3f4f
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Mar 4 14:24:31 2012 +0100

    firewire: tone down some diagnostic log messages
    
    The "skipped bus generations" message was added together with the
    respective fw_device retaining/ reviving code in order to see how it all
    works out.  It did well, so don't spam the log anymore.
    
    The "register access failure" situation still needs an actual handler.
    But at this point it makes less sense to ask folks to send mails about
    it.  We now have a pretty good picture of what controllers emit this and
    when:
    
    Texas Instruments PCIxx21 FireWire + CardBus + flash memory card
    controller:
    https://bugzilla.redhat.com/show_bug.cgi?id=608544
    
    O2 Micro FireWire + flash memory card controller:
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/801719
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/881688
    http://marc.info/?l=linux1394-devel&m=132309283531423
    http://marc.info/?l=linux1394-devel&m=132368567907469
    http://marc.info/?l=linux1394-devel&m=132516165727468
    http://marc.info/?l=linux1394-devel&m=133006486927699
    
    Pinnacle Movieboard:
    commit 7f7e37115a8b6724f26d0637a04e1d35e3c59717
    http://marc.info/?l=linux1394-devel&m=130714243325962
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 90963f1cdb3baffc68321e7c98073bf9e99d2ec7
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Feb 18 19:54:45 2012 +0100

    firewire: core: fix race at address_handler unregistration
    
    Fix the following unlikely but possible race:
    
    CPU 1                             CPU 2
    ------------------------------------------------------------------------
    AR-request tasklet
        lookup handler
                                      unregister handler
                                      free handler->callback_data or handler
        call handler->callback
    
    The application which registered the handler has no way to stop nodes
    sending new requests to their address range, hence cannot prevent this
    race.
    
    Fix it simply by extending the address_handler_lock-protected region
    from only around the lookup to around both lookup and call.  We only
    need to do so in the exclusive region handler; the FCP region handler
    already holds the lock around the handler->callback call.
    
    Alas this removes the current ability to execute the callback in
    parallel on different CPUs if it was called for different FireWire cards
    at the same time.  (For a single card, the handler is already
    serialized.)  If this loss of a rather obscure feature is not tolerable,
    a more complex fix would be required:  Add a handler reference counter;
    wait in fw_core_remove_address_handler() for this conter to become zero.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit c1a1e15fd6fe7ed496d115ac9b87649e4d827d65
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Jan 29 12:41:15 2012 +0100

    firewire: ohci: disable MSI on Ricoh controllers
    
    commit 320cfa6ce0b3dc794fedfa4bae54c0f65077234d upstream.
    
    The PCIe device
    
        FireWire (IEEE 1394) [0c00]: Ricoh Co Ltd FireWire Host Controller
        [1180:e832] (prog-if 10 [OHCI])
    
    is unable to access attached FireWire devices when MSI is enabled but
    works if MSI is disabled.
    http://www.mail-archive.com/alsa-user@lists.sourceforge.net/msg28251.html
    
    Hence add the "disable MSI" quirks flag for this device, or in fact for
    safety and simplicity for all current (R5U230, R5U231, R5U240) and
    future Ricoh PCIe 1394 controllers.
    
    Reported-by: Stefan Thomas <kontrapunktstefan@googlemail.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2f8080ae4ebf8d860addf050536b1ec71c53e19
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Jan 29 12:41:15 2012 +0100

    firewire: ohci: disable MSI on Ricoh controllers
    
    commit 320cfa6ce0b3dc794fedfa4bae54c0f65077234d upstream.
    
    The PCIe device
    
        FireWire (IEEE 1394) [0c00]: Ricoh Co Ltd FireWire Host Controller
        [1180:e832] (prog-if 10 [OHCI])
    
    is unable to access attached FireWire devices when MSI is enabled but
    works if MSI is disabled.
    http://www.mail-archive.com/alsa-user@lists.sourceforge.net/msg28251.html
    
    Hence add the "disable MSI" quirks flag for this device, or in fact for
    safety and simplicity for all current (R5U230, R5U231, R5U240) and
    future Ricoh PCIe 1394 controllers.
    
    Reported-by: Stefan Thomas <kontrapunktstefan@googlemail.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd3ce7d57c380af110c86d19e256115d0e7053ca
Merge: da46d7dd530c 320cfa6ce0b3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Feb 1 18:30:15 2012 -0800

    Merge tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394
    
    firewire fixes post v3.3-rc1
    
    Add workarounds table entries for hardware bugs in
      - FireWire part of Sound Blaster Audigy cards,
      - Ricoh PCIe 1394 controllers.
    Without these, several protocols, e.g. AV/C, do not work on the
    Audigy, and the Ricoh PCIe controllers wouldn't work at all.
    This does not concern the older Ricoh PCI controllers.
    
    * tag 'firewire-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394:
      firewire: ohci: disable MSI on Ricoh controllers
      firewire: ohci: add reset packet quirk for SB Audigy

commit 320cfa6ce0b3dc794fedfa4bae54c0f65077234d
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Jan 29 12:41:15 2012 +0100

    firewire: ohci: disable MSI on Ricoh controllers
    
    The PCIe device
    
        FireWire (IEEE 1394) [0c00]: Ricoh Co Ltd FireWire Host Controller
        [1180:e832] (prog-if 10 [OHCI])
    
    is unable to access attached FireWire devices when MSI is enabled but
    works if MSI is disabled.
    http://www.mail-archive.com/alsa-user@lists.sourceforge.net/msg28251.html
    
    Hence add the "disable MSI" quirks flag for this device, or in fact for
    safety and simplicity for all current (R5U230, R5U231, R5U240) and
    future Ricoh PCIe 1394 controllers.
    
    Reported-by: Stefan Thomas <kontrapunktstefan@googlemail.com>
    Cc: 2.6.36+ <stable@vger.kernel.org>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit a74477db9171e677b7a37b89e6e0ac8a15ba1f26
Author: Stephan Gatzka <stephan@gatzka.org>
Date:   Mon Sep 26 21:44:30 2011 +0200

    firewire: net: Use posted writes
    
    Change memory region to ohci "middle address space". This effectively
    reduces the number of packets by 50%.
    
    [Stefan R.:]  This eliminates 1394 ack packets and improved throughput
    by a few percent in some tests with an S400a connection with and without
    gap count optimization.  Since firewire-net taxes the AR-req DMA unit of
    a FireWire controller much more than firewire-sbp2 (which uses the
    middle address space with PCI posted writes too), this commit also
    changes a related error printk into a ratelimited one as a precaution.
    
    Side note:  The IPv4-over-1394 drivers of Mac OS X 10.4, Windows XP SP3,
    and the Thesycon 1394 bus driver for Windows all use the middle address
    space too.
    
    Signed-off-by: Stephan Gatzka <stephan@gatzka.org>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 8d448162bda5ae3b5ecb26fe50c8fbbeae99faa4
Author: Clemens Ladisch <clemens@ladisch.de>
Date:   Fri Oct 7 22:38:59 2011 +0200

    ALSA: control: add support for ENUMERATED user space controls
    
    Handling of user control elements was implemented for all types except
    ENUMERATED.  This type will be needed for the device-specific mixers of
    upcoming FireWire drivers.
    
    Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 3917a8efa50bc38ef2f2194a5e35c2062640feed
Author: Ming Lei <ming.lei@canonical.com>
Date:   Wed Aug 31 10:45:46 2011 +0800

    firewire: ohci: add no MSI quirk for O2Micro controller
    
    commit f39aa30d7741f40ad964341e9243dbbd7f8ff057 upstream.
    
    This fixes https://bugs.launchpad.net/ubuntu/+source/linux/+bug/801719 .
    
    An O2Micro PCI Express FireWire controller,
    "FireWire (IEEE 1394) [0c00]: O2 Micro, Inc. Device [1217:11f7] (rev 05)"
    which is a combination device together with an SDHCI controller and some
    sort of storage controller, misses SBP-2 status writes from an attached
    FireWire HDD.  This problem goes away if MSI is disabled for this
    FireWire controller.
    
    The device reportedly does not require QUIRK_CYCLE_TIMER.
    
    Signed-off-by: Ming Lei <ming.lei@canonical.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit f39aa30d7741f40ad964341e9243dbbd7f8ff057
Author: Ming Lei <ming.lei@canonical.com>
Date:   Wed Aug 31 10:45:46 2011 +0800

    firewire: ohci: add no MSI quirk for O2Micro controller
    
    This fixes https://bugs.launchpad.net/ubuntu/+source/linux/+bug/801719 .
    
    An O2Micro PCI Express FireWire controller,
    "FireWire (IEEE 1394) [0c00]: O2 Micro, Inc. Device [1217:11f7] (rev 05)"
    which is a combination device together with an SDHCI controller and some
    sort of storage controller, misses SBP-2 status writes from an attached
    FireWire HDD.  This problem goes away if MSI is disabled for this
    FireWire controller.
    
    The device reportedly does not require QUIRK_CYCLE_TIMER.
    
    Signed-off-by: Ming Lei <ming.lei@canonical.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de> (amended changelog)
    Cc: <stable@kernel.org>

commit 9c1176b6a28850703ea6e3a0f0c703f6d6c61cd3
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Aug 11 00:06:04 2011 +0200

    firewire: cdev: fix 32 bit userland on 64 bit kernel compat corner cases
    
    Clemens points out that we need to use compat_ptr() in order to safely
    cast from u64 to addresses of a 32-bit usermode client.
    
    Before, our conversion went wrong
      - in practice if the client cast from pointer to integer such that
        sign-extension happened, (libraw1394 and libdc1394 at least were not
        doing that, IOW were not affected)
    or
      - in theory on s390 (which doesn't have FireWire though) and on the
        tile architecture, regardless of what the client does.
    The bug would usually be observed as the initial get_info ioctl failing
    with "Bad address" (EFAULT).
    
    Reported-by: Carl Karsten <carl@personnelware.com>
    Reported-by: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 215fa444c2a6d571f1f915cf3dc7a8b01cc51a0a
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Wed Jun 22 21:05:08 2011 +0200

    firewire: ohci: fix PHY reg access after card ejection
    
    Detect and handle ejection of FireWire CardBus cards in PHY register
    accesses:
    
      - The last attempt of firewire-core to reset the bus during shutdown
        caused a spurious "firewire_ohci: failed to write phy reg" error
        message in the log.  Skip this message as well as the prior retry
        loop that needlessly took 100 milliseconds.
    
      - In the unlikely case that a PHY register was read right after card
        ejection, a bogus value was obtained and possibly acted upon.
        Instead, fail the read attempt.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 09cefbb605ccb07c65f313253268a634e0dcd283
Merge: dc7acbb2518f cf73df1e2975
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri May 27 10:10:51 2011 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound-2.6
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound-2.6: (26 commits)
      ASoC: Fix power down for widgetless per-card DAPM context case
      ASoC: wm1250-ev1: Define "WM1250 Output" with SND_SOC_DAPM_OUTPUT
      ASoC: Remove duplicate linux/delay.h inclusion.
      ASoC: sam9g20_wm8731: use the proper SYSCKL value
      ASoC: wm8731: fix wm8731_check_osc() connected condition
      ALSA: hda - Reorganize controller quriks with bit flags
      ALSA: hda - Use snd_printd() in snd_hda_parse_pin_def_config()
      ALSA: core: remove unused variables.
      ALSA: HDA: Increase MAX_HDMI_PINS
      ALSA: PCM - Don't check DMA time-out too shortly
      MAINTAINERS: add FireWire audio maintainer
      ALSA: usb-audio: more control quirks for M-Audio FastTrack devices
      ALSA: usb-audio: add new quirk type QUIRK_AUDIO_STANDARD_MIXER
      ALSA: usb-audio: export snd_usb_feature_unit_ctl
      ALSA: usb-audio: rework add_control_to_empty()
      ALSA: usb-audio: move assignment of chip->ctrl_intf
      ALSA: hda - Use model=auto for Lenovo G555
      ALSA: HDA: Unify HDMI hotplug handling.
      ALSA: hda - Force AD1988_6STACK_DIG for Asus M3N-HT Deluxe
      ASoC: core - remove superfluous new line.
      ...

commit a331b0c3665506aa23bfc78c777199b30349d731
Author: Clemens Ladisch <clemens@ladisch.de>
Date:   Wed May 25 09:48:48 2011 +0200

    MAINTAINERS: add FireWire audio maintainer
    
    Add the maintainer of the FireWire audio drivers.
    
    Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit 105e53f863c04e1d9e5bb34bf753c9fdbce6a60c
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun May 1 20:50:31 2011 +0200

    firewire: sbp2: parallelize login, reconnect, logout
    
    The struct sbp2_logical_unit.work items can all be executed in parallel
    but are not reentrant.  Furthermore, reconnect or re-login work must be
    executed in a WQ_MEM_RECLAIM workqueue.
    
    Hence replace the old single-threaded firewire-sbp2 workqueue by a
    concurrency-managed but non-reentrant workqueue with rescuer.
    firewire-core already maintains one, hence use this one.
    
    In earlier versions of this change, I observed occasional failures of
    parallel INQUIRY to an Initio INIC-2430 FireWire 800 to dual IDE bridge.
    More testing indicates that parallel INQUIRY is not actually a problem,
    but too quick successions of logout and login + INQUIRY, e.g. a quick
    sequence of cable plugout and plugin, can result in failed INQUIRY.
    This does not seem to be something that should or could be addressed by
    serialization.
    
    Another dual-LU device to which I currently have access to, an
    OXUF924DSB FireWire 800 to dual SATA bridge with firmware from MacPower,
    has been successfully tested with this too.
    
    This change is beneficial to environments with two or more FireWire
    storage devices, especially if they are located on the same bus.
    Management tasks that should be performed as soon and as quickly as
    possible, especially reconnect, are no longer held up by tasks on other
    devices that may take a long time, especially login with INQUIRY and sd
    or sr driver probe.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit e68044e2351ee937997c1e014fbbbe1c97b935cf
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Sat Feb 5 10:07:39 2011 -0300

    [media] firedtv: remove obsolete ieee1394 backend code
    
    drivers/ieee1394/ has been removed in Linux 2.6.37.  The corresponding
    backend code in firedtv is no longer built in now and can be deleted.
    Firedtv continues to work with drivers/firewire/.
    
    Also, fix a Kconfig menu comment:  Removal of CONFIG_IEEE1394 made the
    "Supported FireWire (IEEE 1394) Adapters" comment disappear; bring it back
    with corrected dependency.
    
    Signed-off-by: Hans Verkuil <hverkuil@xs4all.nl>
    Reviewed-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

commit 4796e5e331675712ec5d4e26a6b904d856c99058
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jan 15 18:19:48 2011 +0100

    firewire: core: fix unstable I/O with Canon camcorder
    
    commit 6044565af458e7fa6e748bff437ecc49dea88d79 upstream.
    
    Regression since commit 10389536742c, "firewire: core: check for 1394a
    compliant IRM, fix inaccessibility of Sony camcorder":
    
    The camcorder Canon MV5i generates lots of bus resets when asynchronous
    requests are sent to it (e.g. Config ROM read requests or FCP Command
    write requests) if the camcorder is not root node.  This causes drop-
    outs in videos or makes the camcorder entirely inaccessible.
    https://bugzilla.redhat.com/show_bug.cgi?id=633260
    
    Fix this by allowing any Canon device, even if it is a pre-1394a IRM
    like MV5i are, to remain root node (if it is at least Cycle Master
    capable).  With the FireWire controller cards that I tested, MV5i always
    becomes root node when plugged in and left to its own devices.
    
    Reported-by: Ralf Lange
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit d3e458d78167102cc961237cfceef6fffc80c0b3
Merge: f2e1fbb5f217 d351cf4603ed
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Mar 18 10:46:37 2011 -0700

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound-2.6
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound-2.6: (308 commits)
      ALSA: sound/pci/asihpi: check adapter index in hpi_ioctl
      ALSA: aloop - Fix possible IRQ lock inversion
      ALSA: sound/core: merge list_del()/list_add_tail() to list_move_tail()
      ALSA: ctxfi - use list_move() instead of list_del()/list_add() combination
      ALSA: firewire - msleep needs delay.h
      ALSA: firewire-lib, firewire-speakers: handle packet queueing errors
      ALSA: firewire-lib: allocate DMA buffer separately
      ALSA: firewire-lib: use no-info SYT for packets without SYT sample
      ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver
      ALSA: hda - Remove an unused variable in patch_realtek.c
      ALSA: hda - pin-adc-mux-dmic auto-configuration of 92HD8X codecs
      ALSA: hda - fix digital mic selection in mixer on 92HD8X codecs
      ALSA: hda - Move default input-src selection to init part
      ALSA: hda - Initialize special cases for input src in init phase
      ALSA: ctxfi - Clear input settings before initialization
      ALSA: ctxfi - Fix SPDIF status retrieval
      ALSA: ctxfi - Fix incorrect SPDIF status bit mask
      ALSA: ctxfi - Fix microphone boost codes/comments
      ALSA: atiixp - Fix wrong time-out checks during ac-link reset
      ALSA: intel8x0m: append 'm' to "r_intel8x0"
      ...

commit 31ef9134eb52636d383a7d0626cbbd345cb94f2f
Author: Clemens Ladisch <clemens@ladisch.de>
Date:   Tue Mar 15 07:53:21 2011 +0100

    ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver
    
    Add a driver for two playback-only FireWire devices based on the OXFW970
    chip.
    
    v2: better AMDTP API abstraction; fix fw_unit leak; small fixes
    v3: cache the iPCR value
    v4: FireWave constraints; fix fw_device reference counting;
        fix PCR caching; small changes and fixes
    v5: volume/mute support; fix crashing due to pcm stop races
    v6: fix build; one-channel volume for LaCie
    v7: use signed values to make volume (range checks) work; fix function
        block IDs for volume/mute; always use channel 0 for LaCie volume
    
    Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
    Acked-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Tested-by: Jay Fenlason <fenlason@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

commit fd920389c28bd1770df596d8dba8bc794bb1b790
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jan 15 18:19:48 2011 +0100

    firewire: core: fix unstable I/O with Canon camcorder
    
    commit 6044565af458e7fa6e748bff437ecc49dea88d79 upstream.
    
    Regression since commit 10389536742c, "firewire: core: check for 1394a
    compliant IRM, fix inaccessibility of Sony camcorder":
    
    The camcorder Canon MV5i generates lots of bus resets when asynchronous
    requests are sent to it (e.g. Config ROM read requests or FCP Command
    write requests) if the camcorder is not root node.  This causes drop-
    outs in videos or makes the camcorder entirely inaccessible.
    https://bugzilla.redhat.com/show_bug.cgi?id=633260
    
    Fix this by allowing any Canon device, even if it is a pre-1394a IRM
    like MV5i are, to remain root node (if it is at least Cycle Master
    capable).  With the FireWire controller cards that I tested, MV5i always
    becomes root node when plugged in and left to its own devices.
    
    Reported-by: Ralf Lange
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 40688b6476e61cedd9d6ca5d2e1078c7e35cd7c0
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jan 15 18:19:48 2011 +0100

    firewire: core: fix unstable I/O with Canon camcorder
    
    commit 6044565af458e7fa6e748bff437ecc49dea88d79 upstream.
    
    Regression since commit 10389536742c, "firewire: core: check for 1394a
    compliant IRM, fix inaccessibility of Sony camcorder":
    
    The camcorder Canon MV5i generates lots of bus resets when asynchronous
    requests are sent to it (e.g. Config ROM read requests or FCP Command
    write requests) if the camcorder is not root node.  This causes drop-
    outs in videos or makes the camcorder entirely inaccessible.
    https://bugzilla.redhat.com/show_bug.cgi?id=633260
    
    Fix this by allowing any Canon device, even if it is a pre-1394a IRM
    like MV5i are, to remain root node (if it is at least Cycle Master
    capable).  With the FireWire controller cards that I tested, MV5i always
    becomes root node when plugged in and left to its own devices.
    
    Reported-by: Ralf Lange
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 6044565af458e7fa6e748bff437ecc49dea88d79
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jan 15 18:19:48 2011 +0100

    firewire: core: fix unstable I/O with Canon camcorder
    
    Regression since commit 10389536742c, "firewire: core: check for 1394a
    compliant IRM, fix inaccessibility of Sony camcorder":
    
    The camcorder Canon MV5i generates lots of bus resets when asynchronous
    requests are sent to it (e.g. Config ROM read requests or FCP Command
    write requests) if the camcorder is not root node.  This causes drop-
    outs in videos or makes the camcorder entirely inaccessible.
    https://bugzilla.redhat.com/show_bug.cgi?id=633260
    
    Fix this by allowing any Canon device, even if it is a pre-1394a IRM
    like MV5i are, to remain root node (if it is at least Cycle Master
    capable).  With the FireWire controller cards that I tested, MV5i always
    becomes root node when plugged in and left to its own devices.
    
    Reported-by: Ralf Lange
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: <stable@kernel.org> # 2.6.32.y and newer

commit 14d7e74a7f658fdd370e9a790b55e3b93eb259fc
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 17 14:09:12 2010 +0200

    firewire: ohci: fix TI TSB82AA2 regression since 2.6.35
    
    commit aa0170fff3c26bf2b42159af2dd9cf86444c292a upstream.
    
    Revert commit 54672386ccf36ffa21d1de8e75624af83f9b0eeb
    "firewire: ohci: fix up configuration of TI chips".
    It caused massive slow-down and data corruption with a TSB82AA2 based
    StarTech EC1394B2 ExpressCard and FireWire 800 harddisks.
    
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/657081
    http://thread.gmane.org/gmane.linux.kernel.firewire.user/4013
    
    The fact that some card EEPROMs do not program these enhancements may be
    related to TSB81BA3 phy chip errata, if not to bugs of TSB82AA2 itself.
    We could re-add these configuration steps, but only conditional on a
    whitelist of cards on which these enhancements bring a proven positive
    effect.
    
    Reported-and-tested-by: Eric Shattow <lucent@gmail.com>
    Cc: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit aa0170fff3c26bf2b42159af2dd9cf86444c292a
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 17 14:09:12 2010 +0200

    firewire: ohci: fix TI TSB82AA2 regression since 2.6.35
    
    Revert commit 54672386ccf36ffa21d1de8e75624af83f9b0eeb
    "firewire: ohci: fix up configuration of TI chips".
    It caused massive slow-down and data corruption with a TSB82AA2 based
    StarTech EC1394B2 ExpressCard and FireWire 800 harddisks.
    
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/657081
    http://thread.gmane.org/gmane.linux.kernel.firewire.user/4013
    
    The fact that some card EEPROMs do not program these enhancements may be
    related to TSB81BA3 phy chip errata, if not to bugs of TSB82AA2 itself.
    We could re-add these configuration steps, but only conditional on a
    whitelist of cards on which these enhancements bring a proven positive
    effect.
    
    Reported-and-tested-by: Eric Shattow <lucent@gmail.com>
    Cc: Clemens Ladisch <clemens@ladisch.de>
    Cc: <stable@kernel.org> 2.6.35
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 970f4be85ae6ecf97b711a3a2a1d5cecd3ea0534
Author: Heikki Lindholm <holin@iki.fi>
Date:   Mon Sep 6 22:30:45 2010 +0300

    firewire: ohci: activate cycle timer register quirk on Ricoh chips
    
    The Ricoh FireWire controllers appear to have the non-atomic cycle
    timer register access bug, so, activate the driver workaround by
    default.
    
    The behaviour was observed on:
    Ricoh Co Ltd R5C552 IEEE 1394 Controller [1180:0552] and
    Ricoh Co Ltd R5C832 IEEE 1394 Controller [1180:0832] (rev 04).
    
    Signed-off-by: Heikki Lindholm <holin@iki.fi>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 3014420b6b5d0a6483cf5e56c10df180a33e957e
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Mon May 24 21:31:23 2010 +0200

    ieee1394: schedule for removal
    
    All application domains that are supported by the old ieee1394 driver
    stack are supported by the newer firewire driver stack too.  There is
    now good and extensive experience with the newer stack from deployment
    in Fedora since F7 as well as by enthusiast users of other
    distributions.
    
    The new drivers have consequently been recommended as the default ones
    since 2.6.33, in order to fix some severe usability problems of FireWire
    on Linux due to limitations of the old stack.  It is now high time to
    announce when the obsolete drivers will be removed.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Acked-by: Jarod Wilson <jarod@redhat.com>

commit 5ae73518cb39dd81e641dfa7ce20751c853579e0
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Fri Mar 19 00:38:29 2010 +0100

    firewire: core: fix Model_ID in modalias
    
    The modalias string of devices that represent units on a FireWire node
    did not show Module_ID entries within unit directories.  This was
    because firewire-core searched only the root directory of the
    configuration ROM for a Model_ID entry.
    
    We now search first the root directory, then the unit directory.  IOW
    honor a unit directory's Model_ID if present, otherwise fall back to the
    root directory's model ID (if present).
    
    Furthermore, apply the same change to Vendor_ID.  This had the same
    issue but it was less apparent because most devices provide Vendor_ID
    only in the root directory.
    
    And finally, also use this strategy for the remaining two IDs in the
    modalias, Specifier_ID and Version.  It does not actually make sense to
    look for them elsewhere than in the unit directory because they are
    mandatory there.  However, a uniform search order simplifies the
    implementation and has no adverse affect in practice.
    
    Side notes:
      - The older counterpart of this, nodemgr.c of ieee1394, looked for
        Vendor_ID first in the root directory, then in the unit directory,
        and for Model_ID only in the unit directory.
      - There is a single mainline driver which requires Vendor_ID and
        Model_ID --- the firedtv driver.  This one worked because FireDTVs
        provide Vendor_ID in the root directory and Model_ID identically in
        root directory and unit directory.
      - Apart from firedtv, there are currently no drivers known to me
        (including userspace drivers) that look at the Vendor_ID or Model_ID
        of the modalias.
    
    Reported-by: Maciej Żenczykowski <zenczykowski@gmail.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 16a2ae6eb112b506ca1e464d848e684f6f90dadc
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Jan 26 21:39:07 2010 +0100

    firewire: ohci: fix crashes with TSB43AB23 on 64bit systems
    
    commit 7a481436787cbc932af6c407b317ac603969a242 upstream.
    
    Unsurprisingly, Texas Instruments TSB43AB23 exhibits the same behaviour
    as TSB43AB22/A in dual buffer IR DMA mode:  If descriptors are located
    at physical addresses above the 31 bit address range (2 GB), the
    controller will overwrite random memory.  With luck, this merely
    prevents video reception.  With only a little less luck, the machine
    crashes.
    
    We use the same workaround here as with TSB43AB22/A:  Switch off the
    dual buffer capability flag and use packet-per-buffer IR DMA instead.
    Another possible workaround would be to limit the coherent DMA mask to
    31 bits.
    
    In Linux 2.6.33, this change serves effectively only as documentation
    since dual buffer mode is not used for any controller anymore.  But
    somebody might want to re-enable it in the future to make use of
    features of dual buffer DMA that are not available in packet-per-buffer
    mode.
    
    In Linux 2.6.32 and older, this update is vital for anyone with this
    controller, more than 2 GB RAM, a 64 bit kernel, and FireWire video or
    audio applications.
    
    We have at least four reports:
    http://bugzilla.kernel.org/show_bug.cgi?id=13808
    http://marc.info/?l=linux1394-user&m=126154279004083
    https://bugzilla.redhat.com/show_bug.cgi?id=552142
    http://marc.info/?l=linux1394-user&m=126432246128386
    
    Reported-by: Paul Johnson
    Reported-by: Ronneil Camara
    Reported-by: G Zornetzer
    Reported-by: Mark Thompson
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 7a481436787cbc932af6c407b317ac603969a242
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Jan 26 21:39:07 2010 +0100

    firewire: ohci: fix crashes with TSB43AB23 on 64bit systems
    
    Unsurprisingly, Texas Instruments TSB43AB23 exhibits the same behaviour
    as TSB43AB22/A in dual buffer IR DMA mode:  If descriptors are located
    at physical addresses above the 31 bit address range (2 GB), the
    controller will overwrite random memory.  With luck, this merely
    prevents video reception.  With only a little less luck, the machine
    crashes.
    
    We use the same workaround here as with TSB43AB22/A:  Switch off the
    dual buffer capability flag and use packet-per-buffer IR DMA instead.
    Another possible workaround would be to limit the coherent DMA mask to
    31 bits.
    
    In Linux 2.6.33, this change serves effectively only as documentation
    since dual buffer mode is not used for any controller anymore.  But
    somebody might want to re-enable it in the future to make use of
    features of dual buffer DMA that are not available in packet-per-buffer
    mode.
    
    In Linux 2.6.32 and older, this update is vital for anyone with this
    controller, more than 2 GB RAM, a 64 bit kernel, and FireWire video or
    audio applications.
    
    We have at least four reports:
    http://bugzilla.kernel.org/show_bug.cgi?id=13808
    http://marc.info/?l=linux1394-user&m=126154279004083
    https://bugzilla.redhat.com/show_bug.cgi?id=552142
    http://marc.info/?l=linux1394-user&m=126432246128386
    
    Reported-by: Paul Johnson
    Reported-by: Ronneil Camara
    Reported-by: G Zornetzer
    Reported-by: Mark Thompson
    Cc: stable@kernel.org
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit b7bfb2a7a9296871a5e45c35a2cdc6a174995aa7
Merge: 5b889bf237fc 5d7db0499e5b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Dec 31 12:01:24 2009 -0800

    Merge branch 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394-2.6
    
    * 'for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/ieee1394/linux1394-2.6:
      firewire, ieee1394: update Kconfig help
      firewire, ieee1394: update MAINTAINERS entries
      firewire: ohci: always use packet-per-buffer mode for isochronous reception
      firewire: cdev: fix another memory leak in an error path
      firewire: fix use of multiple AV/C devices, allow multiple FCP listeners
    
    Comments from Stefan:
    
       Distributors who still ship the old stack (ieee1394, ohci1394,
       raw1394, sbp2, eth1394 and more) should now switch to the new one
       (firewire-core, firewire-ohci, firewire-sbp2, firewire-net).  In the
       first iteration, those distributors might want to ship the old stack
       also (but blacklisted) as a fallback for their users if unforeseen
       problems with the newer replacement drivers are encountered.
    
       The older FireWire stack contains several known problems which are
       not going to be fixed; instead, those issues are addressed by the new
       stack.  An incomplete list of these issues is kept in bugzilla:
    
            http://bugzilla.kernel.org/show_bug.cgi?id=10046
    
       We have a guide on migration from the older to the newer stack:
    
            http://ieee1394.wiki.kernel.org/index.php/Juju_Migration

commit 5d7db0499e5bb13381a7fbfdd0d913b966545e75
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Dec 26 01:36:53 2009 +0100

    firewire, ieee1394: update Kconfig help
    
    Update the Kconfig help texts of both stacks to encourage a general move
    from the older to the newer drivers.  However, do not label ieee1394 as
    "Obsolete" yet, as the newer drivers have not been deployed as default
    stack in the majority of Linux distributions yet, and those who start
    doing so now may still want to install the old drivers as fallback for
    unforeseen issues.
    
    Since Linux 2.6.32, FireWire audio devices can be driven by the newer
    firewire driver stack too, hence remove an outdated comment about audio
    devices.  Also remove comments about library versions since the 2nd
    generation of libraw1394 and libdc1394 is now in common use; details on
    library versions can be read at the wiki link from the help texts.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 31769cef2e973544164aa7d0db2e2024660d5e21
Author: Jay Fenlason <fenlason@redhat.com>
Date:   Sat Nov 21 00:05:56 2009 +0100

    firewire: ohci: pass correct iso xmit timestamps to core
    
    Here is the final set of patches I used to get ffado to work with the
    new firewire stack.  With these patches, I was able to start ardour
    and record from and playback to my PreSonus Inspire1394 from a
    (mostly) Fedora 12 system.
    
    Signed-off-by: Jay Fenlason <fenlason@redhat.com>
    
    Until now, firewire-ohci exposed only the transmit cycle of the last
    transmitted packet at each isochronous transmit complete event.  This
    made it impossible for FFADO (FireWire audio drivers in userspace) to
    synchronize audio-out streams.  The fix is to store the timestamp of
    each packet in the iso xmit event.  As a bonus, the transfer status is
    stored too.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 0c53decdd0a9f9c459ccabe0b5f79660bde5375b
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Jun 16 22:36:34 2009 +0200

    firewire: new stack is no longer experimental
    
    The new stack is now recommended over the old one if used for industrial
    video (IIDC/DCAM) or for storage devices (SBP-2) due to better
    performance, improved compatibility, added features, and security.  It
    should also be functionally on par with and is more secure than the old
    ieee1394 stack in the use case of consumer video devices.
    
    IP-over-1394 support for the new stack is currently emerging, and a
    backend of the firedtv DVB driver to the new stack should be available
    soon.
    
    The one remaining area where the old stack is still required are audio
    devices, as the new stack is not yet able to support the FFADO FireWire
    audio framework.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 0210b66dd88a2a1e451901b00378a2068b6ccb35
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat May 23 00:03:29 2009 +0200

    firewire: core: add sysfs attribute for easier udev rules
    
    This adds the attribute /sys/bus/firewire/devices/fw[0-9]+/units.  It
    can be used in udev rules like the following ones:
    
    # IIDC devices: industrial cameras and some webcams
    SUBSYSTEM=="firewire", ATTR{units}=="*0x00a02d:0x00010?*", GROUP="video"
    
    # AV/C devices: camcorders, set-top boxes, TV sets, audio devices, ...
    SUBSYSTEM=="firewire", ATTR{units}=="*0x00a02d:0x010001*", GROUP="video"
    
    Background:
    
    firewire-core manages two device types:
      - fw_device is a FireWire node.  A character device file is associated
        with it.
      - fw_unit is a unit directory on a node.  Each fw_device may have 0..n
        children of type fw_unit.  The units tell us what kinds of protocols
        a node implements.
    
    We want to set ownership or ACLs or permissions of the character device
    file of an fw_device, or/and create symlinks to it, based on available
    protocols.  Until now udev rules had to look at the fw_unit devices and
    then modify their parent's character device file accordingly.  This is
    problematic for two reasons:  1) It happens sometime after the creation
    of the fw_device, 2) an access policy may require that information from
    all children is evaluated before a decision about the parent is made.
    
    Problem 1) can ultimately not be avoided since this is the nature of
    FireWire nodes:  They may add or remove unit directories at any point in
    time.
    
    However, we can still help userland a lot by providing the protocol type
    information of all units in a summary sysfs attribute directly at the
    fw_device.  This way,
       - the information is immediately available at the affected device
         when userspace goes about to handle an ADD or CHANGE event of the
         fw_device,
       - with most policies, it won't be necessary anymore to dig through
         child attributes.
    
    The new attribute is called "units".  It contains space-separated tuples
    of specifier_id and version of each present unit.  The delimiter within
    tuples is a colon.  Specifier_id and version are printed as 0x%06x.
    
    Here is an example of a node which implements an IPv4 unit and an IPv6
    unit:  $ cat /sys/bus/firewire/devices/fw2/units
    0x00005e:0x000001 0x00005e:0x000002
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 4817ed240232e89583b0506c2d8e426739af5da3
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Dec 21 16:39:46 2008 +0100

    firewire: prevent creation of multiple IR DMA contexts for the same channel
    
    OHCI-1394 1.1 clause 10.4.3 says:  "If more than one IR DMA context
    specifies receives for packets from the same isochronous channel, the
    context destination for that channel's packets is undefined."
    
    Any userspace client and in the future also kernelspace clients can
    allocate IR DMA contexts for any channel.  We don't want them to
    interfere with each other, hence it is preferable to return -EBUSY if
    allocation of a second context for a channel is attempted.
    
    Notes:
      - This limitation is OHCI-1394 specific, therefore its proper place of
        implementation is down in the low-level driver.
    
      - Since the <linux/firewire-cdev.h> ABI simply maps one userspace iso
        client context to one hardware iso context, this OHCI-1394
        limitation alas requires userspace to implement its own multiplexing
        of iso reception from the same channel and card to multiple clients
        when needed.
    
      - The limitation is independent of channel allocation at the IRM; the
        latter is really only important for the initiation of iso
        transmission but not of iso reception.
    
      - We don't need to do the same for IT DMA because OHCI-1394 does not
        have any ties between IT contexts and channels.  Only the voluntary
        channel allocation protocol via the IRM, globally to the FireWire
        bus, can ensure proper isochronous transmit behaviour anyway.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 8ae83cdf3297d7da301af36bdb6ff45bd331c6d0
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Nov 2 13:45:00 2008 +0100

    firedtv: cleanups and minor fixes
    
    Combination of the following changes:
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: increase FCP frame length for DVB-S2 tune QSPK
    
        The last three bytes didn't go out to the wire.
        Effect of the fix not yet tested.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: replace mdelay by msleep
    
        These functions can sleep (and in fact sleep for the duration of a whole
        FCP transaction).  Hence msleep is more appropriate here.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: trivial reorganization in avc_api
    
        Reduce nesting level by factoring code out of avc_tuner_dsd() into
        helper functions.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: trivial cleanups in avc_api
    
        Use dev_err(), no CamelCase function names, adjust comment style, put
        #if 0 around unused code and add FIXME comments, standardize on
        lower-case hexadecimal constants, use ALIGN() for some frame length
        calculations, make a local function static...
    
        The code which writes FCP command frames and reads FCP response frames
        is not yet brought into canonical kernel coding style because this
        involves changes of typedefs (on-the-wire bitfields).
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: don't retry oPCR updates endlessly
    
        In the theoretical case that the target node wasn't handling the lock
        transactions as expected or there was continued interference by other
        initiating nodes, these functions wouldn't return for ages.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: remove bitfield typedefs from cmp, fix for big endian CPUs
    
        Use macros/ inline functions/ standard byte order accessors to read and
        write oPCR register values (big endian bitfields, on-the-wire data).
        The new code may not be the ultimate optimum, but it doesn't occur in a
        hot path.
    
        This fixes the CMP code for big endian CPUs.  So far I tested it only on
        a little endian CPU though.
    
        For now, include <asm/byteorder.h> instead of <linux/byteorder.h>
        because drivers/ieee1394/*.h also include the former.  I will fix this
        in drivers/ieee1394 and firedtv later.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: trivial cleanups in cmp
    
        Reduce nesting level by means of early exit and goto.
        Remove obsolete includes, use dev_err(), no CamelCase function names...
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: trivial cleanups in firesat-ci
    
        Whitespace, variable names, comment style...
    
        Also, use dvb_generic_open() and dvb_generic_release() directly as
        our hooks in struct file_operations because firedtv's wrappers merely
        called these generic functions.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: remove CA debug code
    
        This looks like it is not necessary to have available for endusers who
        cannot patch kernels for bug reporting and tests of fixes.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: remove AV/C debug code
    
        This looks like it is not necessary to have available for endusers who
        cannot patch kernels for bug reporting and tests of fixes.
    
    Sun, 2 Nov 2008 13:45:00 +0100 (CET)
    firedtv: remove various debug code
    
        Most of this was already commented out.  And that which wasn't is not
        relevant in normal use.
    
    Mon, 29 Sep 2008 19:22:48 +0200 (CEST)
    firedtv: register input device as child of a FireWire device
    
        Instead of one virtual input device which exists for the whole lifetime
        of the driver and receives events from all connected FireDTVs, register
        one input device for each firedtv device.  These input devices will show
        up as children of the respective firedtv devices in the sysfs hierarchy.
    
        However, the implementation falls short because of a bug in userspace:
        Udev's path_id script gets stuck with 100% CPU utilization, maybe
        because of an assumption about the maximum ieee1394 device hierarchy
        depth.
    
        To avoid this bug, we use the fw-host device instead of the proper
        unit_directory device as parent of the input device.
    
        There is hope that the port to the new firewire stack won't be inhibited
        by this userspace bug because there are no fw-host devices there.
    
    Mon, 29 Sep 2008 19:21:52 +0200 (CEST)
    firedtv: fix string comparison and a few sparse warnings
    
        Sparse found a bug:
            while ((kv_buf + kv_len - 1) == '\0')
        should have been
            while (kv_buf[kv_len - 1] == '\0')
        We fix it by a better implementation without a temporary copy.
    
        Also fix sparse warnings of 0 instead of NULL and signedness mismatches.
    
    Mon, 29 Sep 2008 19:21:20 +0200 (CEST)
    firedtv: remove unused struct members
    
        and redefine an int as a bool.
    
    Mon, 29 Sep 2008 19:20:36 +0200 (CEST)
    firedtv: fix initialization of dvb_frontend.ops
    
        There was a NULL pointer reference if no dvb_frontend_info was found.
    
        Also, don't directly assign struct typed values to struct typed
        variables.  Instead write out assignments to individual strcut members.
        This reduces module size by about 1 kB.
    
    Mon, 29 Sep 2008 19:19:41 +0200 (CEST)
    firedtv: remove unused dual subunit code from initialization
    
        No FireDTVs with more than one subunit exists, hence simplify the
        initialization for the special case of one subunit.  The driver was able
        to check for more than one subunit but was broken for more than two
        subunits.
    
        While we are at it, add several missing cleanups after failure, and
        include a few dynamically allocated structures diretly into struct
        firesat instead of allocating them separately.
    
    Mon, 29 Sep 2008 19:19:08 +0200 (CEST)
    firedtv: add vendor_id and version to driver match table
    
        Now that nodemgr was enhanced to match against the root directory's
        vendor ID if there isn't one in the unit directory, use this to
        prevent firedtv to be bound to wrong devices by accident.
    
        Also add the AV/C software version ID to the match flags for
        completeness; specifier ID and software only make sense as a pair.
    
    Mon, 29 Sep 2008 19:18:30 +0200 (CEST)
    firedtv: use hpsb_node_read(), _write(), _lock()
    
        because they are simpler and treat the node generation more correctly.
        While we are at it, clean up and simplify surrounding code.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 00a3a8d6daf77f5f2df3ec3d164a5077abb8d2d3
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Feb 7 13:04:09 2009 +0100

    firewire: ohci: increase AT req. retries, fix ack_busy_X from Panasonic camcorders and others
    
    Commit 8b7b6afaa84708d08139daa08538ca3e56c351f1 upstream.
    
    Camcorders have a tendency to fail read requests to their config ROM and
    write request to their FCP command register with ack_busy_X.  This has
    become a problem with newer kernels and especially Panasonic camcorders,
    causing AV/C in dvgrab and kino to fail.  Dvgrab for example frequently
    logs "send oops"; kino reports loss of AV/C control.  I suspect that
    lower CPU scheduling latencies in newer kernels made this issue more
    prominent now.
    
    According to
    https://sourceforge.net/tracker/?func=detail&atid=114103&aid=2492640&group_id=14103
    this can be fixed by configuring the FireWire controller for more
    hardware retries for request transmission; these retries are evidently
    more successful than libavc1394's own retry loop (typically 3 tries on
    top of hardware retries).
    
    Presumably the same issue has been reported at
    https://bugzilla.redhat.com/show_bug.cgi?id=449252 and
    https://bugzilla.redhat.com/show_bug.cgi?id=477279 .
    
    In a quick test with a JVC camcorder (which didn't malfunction like the
    reported camcorders), this change decreased the number of ack_busy_X
    from 16 in three runs of dvgrab to 4 in three runs of the same capture
    duration.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 437a9be5ddd9b1487a52f2e400b471c741ac82fd
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Feb 7 13:03:22 2009 +0100

    ieee1394: ohci1394: increase AT req. retries, fix ack_busy_X from Panasonic camcorders and others
    
    Commit 64c634ef83991b390ec0503e61f16efb0ba3c60b upstream.
    
    Camcorders have a tendency to fail read requests to their config ROM and
    write request to their FCP command register with ack_busy_X.  This has
    become a problem with newer kernels and especially Panasonic camcorders,
    causing AV/C in dvgrab and kino to fail.  Dvgrab for example frequently
    logs "send oops"; kino reports loss of AV/C control.  I suspect that
    lower CPU scheduling latencies in newer kernels made this issue more
    prominent now.
    
    According to
    https://sourceforge.net/tracker/?func=detail&atid=114103&aid=2492640&group_id=14103
    this can be fixed by configuring the FireWire controller for more
    hardware retries for request transmission; these retries are evidently
    more successful than libavc1394's own retry loop (typically 3 tries on
    top of hardware retries).
    
    Presumably the same issue has been reported at
    https://bugzilla.redhat.com/show_bug.cgi?id=449252 and
    https://bugzilla.redhat.com/show_bug.cgi?id=477279 .
    
    Tested-by: Mathias Beilstein
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 9b43ba103a54853c55012757d0baa0200c1ec1e7
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Feb 7 13:08:41 2009 +0100

    firewire: ohci: increase AT req. retries, fix ack_busy_X from Panasonic camcorders and others
    
    Commit 8b7b6afaa84708d08139daa08538ca3e56c351f1 upstream.
    
    Camcorders have a tendency to fail read requests to their config ROM and
    write request to their FCP command register with ack_busy_X.  This has
    become a problem with newer kernels and especially Panasonic camcorders,
    causing AV/C in dvgrab and kino to fail.  Dvgrab for example frequently
    logs "send oops"; kino reports loss of AV/C control.  I suspect that
    lower CPU scheduling latencies in newer kernels made this issue more
    prominent now.
    
    According to
    https://sourceforge.net/tracker/?func=detail&atid=114103&aid=2492640&group_id=14103
    this can be fixed by configuring the FireWire controller for more
    hardware retries for request transmission; these retries are evidently
    more successful than libavc1394's own retry loop (typically 3 tries on
    top of hardware retries).
    
    Presumably the same issue has been reported at
    https://bugzilla.redhat.com/show_bug.cgi?id=449252 and
    https://bugzilla.redhat.com/show_bug.cgi?id=477279 .
    
    In a quick test with a JVC camcorder (which didn't malfunction like the
    reported camcorders), this change decreased the number of ack_busy_X
    from 16 in three runs of dvgrab to 4 in three runs of the same capture
    duration.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 5d16506948ff1108e54e336d6c06f929879d6648
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Feb 7 13:08:01 2009 +0100

    ieee1394: ohci1394: increase AT req. retries, fix ack_busy_X from Panasonic camcorders and others
    
    Commit 64c634ef83991b390ec0503e61f16efb0ba3c60b upstream.
    
    Camcorders have a tendency to fail read requests to their config ROM and
    write request to their FCP command register with ack_busy_X.  This has
    become a problem with newer kernels and especially Panasonic camcorders,
    causing AV/C in dvgrab and kino to fail.  Dvgrab for example frequently
    logs "send oops"; kino reports loss of AV/C control.  I suspect that
    lower CPU scheduling latencies in newer kernels made this issue more
    prominent now.
    
    According to
    https://sourceforge.net/tracker/?func=detail&atid=114103&aid=2492640&group_id=14103
    this can be fixed by configuring the FireWire controller for more
    hardware retries for request transmission; these retries are evidently
    more successful than libavc1394's own retry loop (typically 3 tries on
    top of hardware retries).
    
    Presumably the same issue has been reported at
    https://bugzilla.redhat.com/show_bug.cgi?id=449252 and
    https://bugzilla.redhat.com/show_bug.cgi?id=477279 .
    
    Tested-by: Mathias Beilstein
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 64c634ef83991b390ec0503e61f16efb0ba3c60b
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Jan 20 19:09:58 2009 +0100

    ieee1394: ohci1394: increase AT req. retries, fix ack_busy_X from Panasonic camcorders and others
    
    Camcorders have a tendency to fail read requests to their config ROM and
    write request to their FCP command register with ack_busy_X.  This has
    become a problem with newer kernels and especially Panasonic camcorders,
    causing AV/C in dvgrab and kino to fail.  Dvgrab for example frequently
    logs "send oops"; kino reports loss of AV/C control.  I suspect that
    lower CPU scheduling latencies in newer kernels made this issue more
    prominent now.
    
    According to
    https://sourceforge.net/tracker/?func=detail&atid=114103&aid=2492640&group_id=14103
    this can be fixed by configuring the FireWire controller for more
    hardware retries for request transmission; these retries are evidently
    more successful than libavc1394's own retry loop (typically 3 tries on
    top of hardware retries).
    
    Presumably the same issue has been reported at
    https://bugzilla.redhat.com/show_bug.cgi?id=449252 and
    https://bugzilla.redhat.com/show_bug.cgi?id=477279 .
    
    Tested-by: Mathias Beilstein
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 8b7b6afaa84708d08139daa08538ca3e56c351f1
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Jan 20 19:10:58 2009 +0100

    firewire: ohci: increase AT req. retries, fix ack_busy_X from Panasonic camcorders and others
    
    Camcorders have a tendency to fail read requests to their config ROM and
    write request to their FCP command register with ack_busy_X.  This has
    become a problem with newer kernels and especially Panasonic camcorders,
    causing AV/C in dvgrab and kino to fail.  Dvgrab for example frequently
    logs "send oops"; kino reports loss of AV/C control.  I suspect that
    lower CPU scheduling latencies in newer kernels made this issue more
    prominent now.
    
    According to
    https://sourceforge.net/tracker/?func=detail&atid=114103&aid=2492640&group_id=14103
    this can be fixed by configuring the FireWire controller for more
    hardware retries for request transmission; these retries are evidently
    more successful than libavc1394's own retry loop (typically 3 tries on
    top of hardware retries).
    
    Presumably the same issue has been reported at
    https://bugzilla.redhat.com/show_bug.cgi?id=449252 and
    https://bugzilla.redhat.com/show_bug.cgi?id=477279 .
    
    In a quick test with a JVC camcorder (which didn't malfunction like the
    reported camcorders), this change decreased the number of ack_busy_X
    from 16 in three runs of dvgrab to 4 in three runs of the same capture
    duration.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 0bed1819687b50a769a1fee6d91cb0ef79b011b4
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Dec 13 23:12:06 2008 +0100

    ieee1394: ignore nonzero Bus_Info_Block.max_rom, fetch config ROM in quadlets
    
    It is already known that buggy firmwares exist which report a bogus
    link_spd in their config ROM bus info block.  We now got the first
    report of a bogus max_rom too (Freecom FireWire Hard Drive 1TB,
    http://bugzilla.kernel.org/show_bug.cgi?id=12206).
    
    I suspect other OSs only use quadlet reads to fetch the config ROM,
    otherwise the firmware authors would have noticed their mistake.
    Hence limit ieee1394's config ROM fetching routine to quadlets as the
    safe minimum regardless of what the bus info block says.
    
    This will potentially slow the bus reset handling by nodemgr somewhat
    down.  But most existing devices support only quadlet reads anyway,
    hence there will often be no actual difference to before this change.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit a5330d7ca215757e9949e31f0bb88214f41fd413
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Dec 16 20:35:13 2008 +0100

    ieee1394: add quirk fix for Freecom HDD
    
    commit 25a41b280083259d05d68f61633194344a1f8a9f upstream.
    
    According to http://bugzilla.kernel.org/show_bug.cgi?id=12206, Freecom
    FireWire Hard Drive 1TB reports max_rom=2 but returns garbage if block
    read requests are used to read the config ROM.  Force max_rom=0 to limit
    them to quadlet read requests.
    
    Reported-by: Christian Mueller <cm1@mumac.de>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 25a41b280083259d05d68f61633194344a1f8a9f
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Dec 13 01:43:59 2008 +0100

    ieee1394: add quirk fix for Freecom HDD
    
    According to http://bugzilla.kernel.org/show_bug.cgi?id=12206, Freecom
    FireWire Hard Drive 1TB reports max_rom=2 but returns garbage if block
    read requests are used to read the config ROM.  Force max_rom=0 to limit
    them to quadlet read requests.
    
    Reported-by: Christian Mueller <cm1@mumac.de>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit e47c1feb17e61ef4e2f245c0af0c5a8e2a7798b2
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Wed Nov 26 01:34:25 2008 +0100

    ieee1394: fix list corruption (reported at module removal)
    
    If there is more than one FireWire controller present, dummy_zero_addr
    and dummy_max_addr were added multiple times to different lists, thus
    corrupting the lists.  Fix this by allocating them dynamically per host
    instead of just once globally.
    
    (Perhaps a better address space allocation algorithm could rid us of the
    two dummy address spaces.)
    
    Fixes http://bugzilla.kernel.org/show_bug.cgi?id=10129 .
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 09b12dd4e3caff165a0f17a2f3ebd2bbc8544cc6
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Aug 14 21:47:21 2008 +0200

    firewire: fw-sbp2: enforce s/g segment size limit
    
    1. We don't need to round the SBP-2 segment size limit down to a
       multiple of 4 kB (0xffff -> 0xf000).  It is only necessary to
       ensure quadlet alignment (0xffff -> 0xfffc).
    
    2. Use dma_set_max_seg_size() to tell the DMA mapping infrastructure
       and the block IO layer about the restriction.  This way we can
       remove the size checks and segment splitting in the queuecommand
       path.
    
       This assumes that no other code in the firewire stack uses
       dma_map_sg() with conflicting requirements.  It furthermore assumes
       that the controller device's platform actually allows us to set the
       segment size to our liking.  Assert the latter with a BUG_ON().
    
    3. Also use blk_queue_max_segment_size() to tell the block IO layer
       about it.  It cannot know it because our scsi_add_host() does not
       point to the FireWire controller's device.
    
    Thanks to Grant Grundler and FUJITA Tomonori for advice.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit ed6ffd08084c68e9c3911e27706dec9d4c9a4175
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Aug 14 09:28:14 2008 +0200

    ieee1394: sbp2: enforce s/g segment size limit
    
    1. We don't need to round the SBP-2 segment size limit down to a
       multiple of 4 kB (0xffff -> 0xf000).  It is only necessary to
       ensure quadlet alignment (0xffff -> 0xfffc).
    
    2. Use dma_set_max_seg_size() to tell the DMA mapping infrastructure
       and the block IO layer about the restriction.  This way we can
       remove the size checks and segment splitting in the queuecommand
       path.
    
       This assumes that no other code in the ieee1394 stack uses
       dma_map_sg() with conflicting requirements.  It furthermore assumes
       that the controller device's platform actually allows us to set the
       segment size to our liking.  Assert the latter with a BUG_ON().
    
    3. Also use blk_queue_max_segment_size() to tell the block IO layer
       about it.  It cannot know it because our scsi_add_host() does not
       point to the FireWire controller's device.
    
    We can also uniformly use dma_map_sg() for the single segment case just
    like for the multi segment case, to further simplify the code.
    
    Also clean up how the page table is converted to big endian.
    
    Thanks to Grant Grundler and FUJITA Tomonori for advice.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit d2886ea368a67704ecc13e69075f18a9d74cb12b
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun May 11 00:34:07 2008 +0200

    scsi: sd: optionally set power condition in START STOP UNIT
    
    Adds a new scsi_device flag, start_stop_pwr_cond:  If enabled, the sd
    driver will not send plain START STOP UNIT commands but ones with the
    power condition field set to 3 (standby) or 1 (active) respectively.
    
    Some FireWire disk firmwares do not stop the motor if power condition is
    zero.  Or worse, they become unresponsive after a START STOP UNIT with
    power condition = 0 and start = 0.
    
    http://lkml.org/lkml/2008/4/29/704
    
    This patch only adds the necessary code to sd_mod but doesn't activate
    it.  Follow-up patches to the FireWire drivers will add detection of
    affected devices and enable the code for them.
    
    I did not add power condition values to scsi_error.c::scsi_eh_try_stu()
    for now.  The three firmwares which suffer from above mentioned problems
    do not need START STOP UNIT in the error handler, and they are not
    adversely affected by START STOP UNIT with power condition = 0 and start
    = 1 (like scsi_eh_try_stu() sends it if scsi_device.allow_restart is
    enabled).
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Tested-by: Tino Keitel <tino.keitel@gmx.de>

commit 9499fe2b340d19ef55c349de794db9d917e7403f
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Mon Jun 16 01:39:28 2008 +0200

    ieee1394: Kconfig menu touch-up
    
    Rename and reorder some prompts and modify some help texts.
    The result:
    
      -------------------- IEEE 1394 (FireWire) support --------------------
      *** Enable only one of the two stacks, unless you know what you are doing ***
      New FireWire stack, EXPERIMENTAL
        OHCI-1394 controllers
        Storage devices (SBP-2 protocol)
      Stable FireWire stack
        OHCI-1394 controllers
        PCILynx controller
        Storage devices (SBP-2 protocol)
          Enable replacement for physical DMA in SBP2
        IP over 1394
        raw1394 userspace interface
        video1394 userspace interface
        dv1394 userspace interface (deprecated)
        Excessive debugging output
    
    The old prompts for reference:
    
      -------------------- IEEE 1394 (FireWire) support --------------------
      IEEE 1394 (FireWire) support - alternative stack, EXPERIMENTAL
        Support for OHCI FireWire host controllers
        Support for storage devices (SBP-2 protocol driver)
      IEEE 1394 (FireWire) support
        *** Subsystem Options ***
        Excessive debugging output
        *** Controllers ***
        Texas Instruments PCILynx support
        OHCI-1394 support
        *** Protocols ***
        OHCI-1394 Video support
        SBP-2 support (Harddisks etc.)
          Enable replacement for physical DMA in SBP2
        IP over 1394
        OHCI-DV I/O support (deprecated)
        Raw IEEE1394 I/O support
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit e896ec4302f45fdaf2fc78aec0093eca5478fe28
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Jun 5 20:49:38 2008 +0200

    firewire: fw-ohci: disable PHY packet reception into AR context
    
    We want the rcvPhyPkt bit in LinkControl off before we start using the
    chip.  However, the spec says that the reset value of it is undefined.
    Hence switch it explicitly off.
    
    https://bugzilla.redhat.com/show_bug.cgi?id=244576#c48 shows that for
    example the nForce2 integrated FireWire controller seems to have it on
    by default.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Jarod Wilson <jwilson@redhat.com>

commit 5513c5f6f9bd8c8ad3727130910fa288c62526a7
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Feb 17 14:56:19 2008 +0100

    firewire: fw-sbp2: fix NULL pointer deref. in slave_alloc
    
    Fix a kernel bug when running rescan-scsi-bus while a FireWire disk is
    connected:  http://bugzilla.kernel.org/show_bug.cgi?id=10008
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 13050d89019a4127178c0945733fb23649f9f3fe
Author: Stephan Boettcher <boettcher@physik.uni-kiel.de>
Date:   Fri Feb 8 04:20:56 2008 -0800

    parport: fix ieee1284_epp_read_addr
    
    We bought cheap notebooks to control our custom data acquisition system, which
    requires EPP mode (read/write, data/addr).  The bios does not offer EPP mode,
    and indeed hardware EPP mode appears not to work, although the parport driver
    tries to use it.  EPPSWE mode does work for data r/w and addr write, but addr
    read requires this patch.
    
    (stephan)rshgse3: lspci
    
    00:00.0 Host bridge: Intel Corporation Mobile 945GM/PM/GMS/940GML and 945GT Express Memory Controller Hub (rev 03)
    00:02.0 VGA compatible controller: Intel Corporation Mobile 945GM/GMS/940GML Express Integrated Graphics Controller (rev 03)
    00:02.1 Display controller: Intel Corporation Mobile 945GM/GMS/940GML Express Integrated Graphics Controller (rev 03)
    00:1b.0 Audio device: Intel Corporation 82801G (ICH7 Family) High Definition Audio Controller (rev 02)
    00:1c.0 PCI bridge: Intel Corporation 82801G (ICH7 Family) PCI Express Port 1 (rev 02)
    00:1c.1 PCI bridge: Intel Corporation 82801G (ICH7 Family) PCI Express Port 2 (rev 02)
    00:1c.2 PCI bridge: Intel Corporation 82801G (ICH7 Family) PCI Express Port 3 (rev 02)
    00:1d.0 USB Controller: Intel Corporation 82801G (ICH7 Family) USB UHCI #1 (rev 02)
    00:1d.1 USB Controller: Intel Corporation 82801G (ICH7 Family) USB UHCI #2 (rev 02)
    00:1d.2 USB Controller: Intel Corporation 82801G (ICH7 Family) USB UHCI #3 (rev 02)
    00:1d.3 USB Controller: Intel Corporation 82801G (ICH7 Family) USB UHCI #4 (rev 02)
    00:1d.7 USB Controller: Intel Corporation 82801G (ICH7 Family) USB2 EHCI Controller (rev 02)
    00:1e.0 PCI bridge: Intel Corporation 82801 Mobile PCI Bridge (rev e2)
    00:1f.0 ISA bridge: Intel Corporation 82801GBM (ICH7-M) LPC Interface Bridge (rev 02)
    00:1f.1 IDE interface: Intel Corporation 82801G (ICH7 Family) IDE Controller (rev 02)
    00:1f.2 SATA controller: Intel Corporation 82801GBM/GHM (ICH7 Family) Serial ATA Storage Controller AHCI (rev 02)
    00:1f.3 SMBus: Intel Corporation 82801G (ICH7 Family) SMBus Controller (rev 02)
    02:00.0 Ethernet controller: Marvell Technology Group Ltd. 88E8055 PCI-E Gigabit Ethernet Controller (rev 12)
    05:00.0 Network controller: Intel Corporation PRO/Wireless 3945ABG Network Connection (rev 02)
    08:03.0 CardBus bridge: Ricoh Co Ltd RL5c476 II (rev b3)
    08:03.1 FireWire (IEEE 1394): Ricoh Co Ltd R5C552 IEEE 1394 Controller (rev 08)
    08:03.2 Generic system peripheral [0805]: Ricoh Co Ltd R5C822 SD/SDIO/MMC/MS/MSPro Host Adapter (rev 17)
    
    (stephan)rshgse3: grep . /proc/sys/dev/parport/parport0/*
    
    /proc/sys/dev/parport/parport0/base-addr:888    1912
    /proc/sys/dev/parport/parport0/dma:-1
    /proc/sys/dev/parport/parport0/irq:7
    /proc/sys/dev/parport/parport0/modes:PCSPP,TRISTATE,EPP
    /proc/sys/dev/parport/parport0/spintime:500
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit dd430ca20c40ecccd6954a7efd13d4398f507728
Merge: 60e233172eab afadcd788f37
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jan 31 00:40:09 2008 +1100

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/x86/linux-2.6-x86: (890 commits)
      x86: fix nodemap_size according to nodeid bits
      x86: fix overlap between pagetable with bss section
      x86: add PCI IDs to k8topology_64.c
      x86: fix early_ioremap pagetable ops
      x86: use the same pgd_list for PAE and 64-bit
      x86: defer cr3 reload when doing pud_clear()
      x86: early boot debugging via FireWire (ohci1394_dma=early)
      x86: don't special-case pmd allocations as much
      x86: shrink some ifdefs in fault.c
      x86: ignore spurious faults
      x86: remove nx_enabled from fault.c
      x86: unify fault_32|64.c
      x86: unify fault_32|64.c with ifdefs
      x86: unify fault_32|64.c by ifdef'd function bodies
      x86: arch/x86/mm/init_32.c printk fixes
      x86: arch/x86/mm/init_32.c cleanup
      x86: arch/x86/mm/init_64.c printk fixes
      x86: unify ioremap
      x86: fixes some bugs about EFI memory map handling
      x86: use reboot_type on EFI 32
      ...

commit f212ec4b7b4d84290f12c9c0416cdea283bf5f40
Author: Bernhard Kaindl <bk@suse.de>
Date:   Wed Jan 30 13:34:11 2008 +0100

    x86: early boot debugging via FireWire (ohci1394_dma=early)
    
    This patch adds a new configuration option, which adds support for a new
    early_param which gets checked in arch/x86/kernel/setup_{32,64}.c:setup_arch()
    to decide wether OHCI-1394 FireWire controllers should be initialized and
    enabled for physical DMA access to allow remote debugging of early problems
    like issues ACPI or other subsystems which are executed very early.
    
    If the config option is not enabled, no code is changed, and if the boot
    paramenter is not given, no new code is executed, and independent of that,
    all new code is freed after boot, so the config option can be even enabled
    in standard, non-debug kernels.
    
    With specialized tools, it is then possible to get debugging information
    from machines which have no serial ports (notebooks) such as the printk
    buffer contents, or any data which can be referenced from global pointers,
    if it is stored below the 4GB limit and even memory dumps of of the physical
    RAM region below the 4GB limit can be taken without any cooperation from the
    CPU of the host, so the machine can be crashed early, it does not matter.
    
    In the extreme, even kernel debuggers can be accessed in this way. I wrote
    a small kgdb module and an accompanying gdb stub for FireWire which allows
    to gdb to talk to kgdb using remote remory reads and writes over FireWire.
    
    An version of the gdb stub fore FireWire is able to read all global data
    from a system which is running a a normal kernel without any kernel debugger,
    without any interruption or support of the system's CPU. That way, e.g. the
    task struct and so on can be read and even manipulated when the physical DMA
    access is granted.
    
    A HOWTO is included in this patch, in Documentation/debugging-via-ohci1394.txt
    and I've put a copy online at
    ftp://ftp.suse.de/private/bk/firewire/docs/debugging-via-ohci1394.txt
    
    It also has links to all the tools which are available to make use of it
    another copy of it is online at:
    ftp://ftp.suse.de/private/bk/firewire/kernel/ohci1394_dma_early-v2.diff
    
    Signed-Off-By: Bernhard Kaindl <bk@suse.de>
    Tested-By: Thomas Renninger <trenn@suse.de>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit a186b4a6b22fdc96a1ed63da483d267b5d00839e
Author: Jarod Wilson <jwilson@redhat.com>
Date:   Mon Dec 3 13:43:12 2007 -0500

    firewire: OHCI 1.0 Isochronous Receive support
    
    Third rendition of FireWire OHCI 1.0 Isochronous Receive support, using a
    zer-copy method similar to OHCI 1.1 which puts the IR data payload directly
    into the userspace buffer. The zero-copy implementation eliminates the
    video artifacts, audio popping, and buffer underrun problems seen with
    version 1 of this patch, as well as fixing a regression in OHCI 1.1 support
    introduced by version 2 of this patch.
    
    Successfully tested in OHCI 1.1 mode on the following chipsets:
    
    - NEC uPD72847 (rev 01), OHCI 1.1 (PCI)
    - Ti XIO2200(A) (rev 01), OHCI 1.1 (PCIe)
    - Ti TSB41AB2 (rev 01), OHCI 1.1 (PCI on SB Audigy)
    - Apple UniNorth 2 (rev 81), OHCI 1.1 (PowerBook G4 onboard)
    
    Successfully tested in OHCI 1.0 mode on the following chipsets:
    
    - Agere FW323 (rev 06), OHCI 1.0 (Mac Mini onboard)
    - Agere FW323 (rev 06), OHCI 1.0 (PCI)
    - Via VT6306 (rev 46), OHCI 1.0 (PCI)
    - NEC OrangeLink (rev 01), OHCI 1.0 (PCI)
    - NEC uPD72847 (rev 01), OHCI 1.1 (PCI)
    - Ti XIO2200(A) (rev 01), OHCI 1.1 (PCIe)
    
    The bulk of testing was done in an x86_64 system, but was also successfully
    sanity-tested on other systems, including a PPC(32) PowerBook G4 and an i686
    EPIA M10k. Crude benchmarking (watching top during capture) puts the cpu
    utilization during capture on the EPIA's 1GHz Via C3 processor around 13%,
    which is down from 30% with the v1 code.
    
    Some implementation details:
    
    To maintain the same userspace API as dual-buffer mode, we set up two
    descriptors for every incoming packet. The first is an INPUT_MORE descriptor,
    pointing to a buffer large enough to hold just the packet's iso headers,
    immediately followed by an INPUT_LAST descriptor, pointing to a chunk of the
    userspace buffer big enough for the packet's data payload. With this setup,
    each incoming packet fills in these two descriptors in a manner that very
    closely emulates dual-buffer receive, to the point where the bulk of the
    handle_ir_* code is now identical between the two (and probably primed for
    some restructuring to share code between them).
    
    The only caveat I have at the moment is that neither of my OHCI 1.0 Via
    VT6307-based FireWire controllers work particularly well with this code
    for reasons I have yet to figure out.
    
    Signed-off-by: Jarod Wilson <jwilson@redhat.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 7c45d1913f0a1d597eb4bc3b2c962bc2967da9ea
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Wed Nov 7 01:11:56 2007 +0100

    firewire: fw-sbp2: fix refcounting
    
    Since patch "fw-sbp2: use an own workqueue (fix system responsiveness)"
    increased parallelism between fw-sbp2 and fw-core, it was possible that
    fw-sbp2 didn't release the SCSI device when the FireWire device was
    disconnected.
    
    This happened if sbp2_update() ran during sbp2_login(), because a bus
    reset occurred during sbp2_login().  The sbp2_login() work would [try
    to] reschedule itself because it failed due to the bus reset, and it
    would _not_ drop its reference on the target.  However, sbp2_update()
    would schedule sbp2_login() too before sbp2_login() rescheduled itself
    and hence sbp2_update() would take an additional reference.  And then
    we would have one reference too many.
    
    The fix is to _always_ drop the reference when leaving the sbp2_login()
    work.  If the sbp2_login() work reschedules itself, it takes a
    reference, but only if it wasn't already rescheduled by sbp2_update().
    
    Ditto in the sbp2_reconnect() work.
    
    The resulting code is actually simpler than before:  We _always_ take
    a reference when successfully scheduling work.  And we _always_ drop
    a reference when leaving a workqueue job.  No exceptions.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit d9e0dded68a8de6a831dd9c31be32a45f4b67373
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Wed Oct 10 22:37:25 2007 +0200

    firewire: fix unloading of fw-ohci while devices are attached
    
    Fix panic in run_timer_softirq right after "modprobe -r firewire-ohci"
    if a FireWire disk was attached and firewire-sbp2 loaded.
    
    Same as commit 8a2d9ed3210464d22fccb9834970629c1c36fa36.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 73c3d061da9a50bdd17240440aa66647c72624a9
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Fri Sep 21 08:11:08 2007 +0200

    [PATCH] ieee1394: ohci1394: fix initialization if built non-modular
    
    Initialization of ohci1394 was broken according to one reporter if the
    driver was statically linked, i.e. not built as loadable module.  Dmesg:
    
      PCI: Device 0000:02:07.0 not available because of resource collisions
      ohci1394: Failed to enable OHCI hardware.
    
    This was reported for a Toshiba Satellite 5100-503.  The cause is commit
    8df4083c5291b3647e0381d3c69ab2196f5dd3b7 in Linux 2.6.19-rc1 which only
    served purposes of early remote debugging via FireWire.  This
    functionality is better provided by the currently out-of-tree driver
    ohci1394_earlyinit.  Reversal of the commit was OK'd by Andi Kleen.
    
    Same as pre-2.6.23 commit be7963b7e7f08a149e247c0bf29a4abd174e0929.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 7cd5471bea6f4e7f97e28ff71a30bb2c7656e1c2
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Fri Sep 21 08:11:08 2007 +0200

    ieee1394: ohci1394: fix initialization if built non-modular
    
    Initialization of ohci1394 was broken according to one reporter if the
    driver was statically linked, i.e. not built as loadable module.  Dmesg:
    
      PCI: Device 0000:02:07.0 not available because of resource collisions
      ohci1394: Failed to enable OHCI hardware.
    
    This was reported for a Toshiba Satellite 5100-503.  The cause is commit
    8df4083c5291b3647e0381d3c69ab2196f5dd3b7 in Linux 2.6.19-rc1 which only
    served purposes of early remote debugging via FireWire.  This
    functionality is better provided by the currently out-of-tree driver
    ohci1394_earlyinit.  Reversal of the commit was OK'd by Andi Kleen.
    
    Same as pre-2.6.23 commit be7963b7e7f08a149e247c0bf29a4abd174e0929.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 406d6c2a1515d7c38325cdfa4159319e3374a599
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Sep 11 14:59:17 2007 +0200

    firewire: fw-ohci: ignore failure of pci_set_power_state (fix suspend regression)
    
    Minor regression since 2.6.22-rc1:  If the experimental firewire-ohci
    driver instead of ohci1394 was loaded, iBook G3 and older PowerBooks
    refused to suspend.
    
    Same as commit 5511142870046a7bed947d51ec9b320856ee120a plus format
    string touch-ups from 8a8cea2734808522f02941ea16125810ee42c9c7,
    "firewire: missing newline in printk".  Original patch description:
    
    Fixes (papers over) "Sleep problems with kernels >= 2.6.21 on powerpc",
    http://lkml.org/lkml/2007/8/25/155.  The issue is that the FireWire
    controller's pci_dev.current_state of iBook G3 and presumably older
    PowerBooks is still in PCI_UNKNOWN instead of PCI_D0 when the firewire
    driver's .suspend method is called.
    
    Like it was suggested earlier in http://lkml.org/lkml/2006/10/24/13, we
    do not fail .suspend anymore if pci_set_power_state failed.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit be7963b7e7f08a149e247c0bf29a4abd174e0929
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Sep 20 21:17:33 2007 +0200

    ieee1394: ohci1394: fix initialization if built non-modular
    
    Initialization of ohci1394 was broken according to one reporter if the
    driver was statically linked, i.e. not built as loadable module.  Dmesg:
    
      PCI: Device 0000:02:07.0 not available because of resource collisions
      ohci1394: Failed to enable OHCI hardware.
    
    This was reported for a Toshiba Satellite 5100-503.  The cause is commit
    8df4083c5291b3647e0381d3c69ab2196f5dd3b7 in Linux 2.6.19-rc1 which only
    served purposes of early remote debugging via FireWire.  This
    functionality is better provided by the currently out-of-tree driver
    ohci1394_earlyinit.  Reversal of the commit was OK'd by Andi Kleen.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 5511142870046a7bed947d51ec9b320856ee120a
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Sep 6 09:50:30 2007 +0200

    firewire: fw-ohci: ignore failure of pci_set_power_state (fix suspend regression)
    
    Fixes (papers over) "Sleep problems with kernels >= 2.6.21 on powerpc",
    http://lkml.org/lkml/2007/8/25/155.  The issue is that the FireWire
    controller's pci_dev.current_state of iBook G3 and presumably older
    PowerBooks is still in PCI_UNKNOWN instead of PCI_D0 when the firewire
    driver's .suspend method is called.
    
    Like it was suggested earlier in http://lkml.org/lkml/2006/10/24/13, we
    do not fail .suspend anymore if pci_set_power_state failed.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 8a2d9ed3210464d22fccb9834970629c1c36fa36
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Aug 21 01:05:14 2007 +0200

    firewire: fix unloading of fw-ohci while devices are attached
    
    Fix panic in run_timer_softirq right after "modprobe -r firewire-ohci"
    if a FireWire disk was attached and firewire-sbp2 loaded.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 76525808fce1f652a6d8472db5a84d28b0951c90
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Aug 4 18:38:32 2007 +0200

    firewire: fw-sbp2: set correct maximum payload (fixes CardBus adapters)
    
    As far as I know, all CardBus FireWire 400 adapters have a maximum
    payload of 1024 bytes which is less than the speed-dependent limit of
    2048 bytes.  Fw-sbp2 has to take the host adapter's limit into account.
    
    This apparently fixes Juju's incompatibility with my CardBus cards, a
    NEC based card and a VIA based card.
    
    Backport of commit 25659f7183376c6b37661da6141d5eaa21479061.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 25659f7183376c6b37661da6141d5eaa21479061
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jul 21 22:43:05 2007 +0200

    firewire: fw-sbp2: set correct maximum payload (fixes CardBus adapters)
    
    As far as I know, all CardBus FireWire 400 adapters have a maximum
    payload of 1024 bytes which is less than the speed-dependent limit of
    2048 bytes.  Fw-sbp2 has to take the host adapter's limit into account.
    
    This apparently fixes Juju's incompatibility with my CardBus cards, a
    NEC based card and a VIA based card.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Acked-by: Kristian Høgsberg <krh@redhat.com>

commit 89f518f161a04e825e9143778521afe8c4c1adf0
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Wed May 30 07:33:47 2007 +0200

    [PATCH] ieee1394: eth1394: bring back a parent device
    
    This adds a real parent device to eth1394's ethX device like in Linux
    2.6.20 and older.  However, due to unfinished conversion of the ieee1394
    away from class_device, we now refer to the FireWire controller's PCI
    device as the parent, not to the ieee1394 driver's fw-host device.
    
    Having a real parent device instead of a virtual one allows udev scripts
    to distinguish eth1394 interfaces from networking bridges, bondings and
    the likes.
    
    Fixes a regression since 2.6.21:
    https://bugs.gentoo.org/show_bug.cgi?id=177199
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Chris Wright <chrisw@sous-sol.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 9a60731d0036a6c6c265acd4248c17fd24fc8e13
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Fri May 25 13:54:49 2007 +0200

    firewire: prefix modules with firewire- instead of fw-
    
    Of course everybody immediately associates "fw-" with FireWire, not
    firmware or firewall or whatever.  But "firewire-" has a nice ring to
    it too.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Acked-by: Kristian Hoegsberg <krh@bitplanet.net>

commit ef50a6c59dc66f22eba67704e291d709f21e0456
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Mon May 21 01:05:41 2007 +0200

    ieee1394: eth1394: bring back a parent device
    
    This adds a real parent device to eth1394's ethX device like in Linux
    2.6.20 and older.  However, due to unfinished conversion of the ieee1394
    away from class_device, we now refer to the FireWire controller's PCI
    device as the parent, not to the ieee1394 driver's fw-host device.
    
    Having a real parent device instead of a virtual one allows udev scripts
    to distinguish eth1394 interfaces from networking bridges, bondings and
    the likes.
    
    Fixes a regression since 2.6.21:
    https://bugs.gentoo.org/show_bug.cgi?id=177199
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 70093cfde8af52b0b9030d90f9004cbde38f2ff8
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Mar 27 01:36:50 2007 +0200

    ieee1394: eth1394: don't autoload by hotplug when ohci1394 starts
    
    Until now, ieee1394 put an IP-over-1394 capability entry into each new
    host's config ROM.  As soon as the controller was initialized --- i.e.
    right after modprobe ohci1394 --- this entry triggered a hotplug event
    which typically caused auto-loading of eth1394.
    
    This irritated or annoyed many users and distributors.  Of course they
    could blacklist eth1394, but then ieee1394 wrongly advertized IP-over-
    1394 capability to the FireWire bus.
    
    Therefore
      - remove the offending kernel config option
        IEEE1394_CONFIG_ROM_IP1394,
      - let eth1394 add the ROM entry by itself, i.e. only after eth1394 was
        loaded.
    
    This fixes http://bugzilla.kernel.org/show_bug.cgi?id=7793 .
    
    To emulate the behaviour of older kernels, simply add the following to
    to /etc/modprobe.conf:
    
    install ohci1394 /sbin/modprobe eth1394; \
                     /sbin/modprobe --ignore-install ohci1394
    
    Note, autoloading of eth1394 when an _external_ IP-over-1394 capable
    device is discovered is _not_ affected by this patch.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit fd2f3bddaeb20564f32e59f64e5063fbe0c8f4cc
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Mar 11 22:51:24 2007 +0100

    ieee1394: replace vmalloc by kmalloc in csr1212
    
    The biggest chunk ever allocated by CSR1212_MALLOC is 1024 Bytes +
    sizeof(struct csr1212_csr_rom_cache) big.  Most of the time much
    smaller data structures are allocated.  Therefore vmalloc is a waste.
    
    The one exception is csr1212_append_new_cache() which is called to
    append a chunk of CSR1212_EXTENDED_ROM_SIZE + sizeof(struct
    csr1212_csr_rom_cache) if the currently allocated ROM cache is too
    small.  CSR1212_EXTENDED_ROM_SIZE is generously defined as 256 kBytes.
    In SVN commit 1220, Steve Kinneberg lowered this to 2 kBytes in the
    config_rom_2.4 branch.  This same commit also switched CSR1212_MALLOC
    from kmalloc to vmalloc in the SVN trunk branch:
    
    > r1220 | kberg | 2004-05-31 01:51:44 +0200 (Mon, 31 May 2004) | 13 lines
    >
    > CSR1212 Extended ROM bug fixes:
    > trunk line changes:
    >   - Use vmalloc instead of kmalloc
    >   - Change delayed_reset_bus() to operate in a work_queue instead of a
    >     timer interrupt.
    >   - Fix hpsb_allocate_and_register_addrspace() to not allocate space
    >     on top of already allocated space.
    >   - Fix problems in csr1212.c filling ConfigROM images when extend
    >     ROMs are present.
    > config-rom-2.4 changes:
    >   - Changed extended rom allocation from 256K to 8K.
    (It was actually 2 kB, not 8 kB.)
    >   - Fix hpsb_allocate_and_register_addrspace() to not allocate space
    >     on top of already allocated space.
    >   - Fix problems in csr1212.c filling ConfigROM images when extend
    >     ROMs are present.
    
    I am now setting CSR1212_EXTENDED_ROM_SIZE to 2 kB minus the overhead of
    struct csr1212_csr_rom_cache.  Note, this code path is not used by the
    in-kernel drivers though.  raw1394 could trigger it, but the respective
    libraw1394 functions don't exist yet.
    
    Furthermore, userspace programs can replace the entire local ROM via
    raw1394.  If kmalloc does not fulfill their needs --- well, tough luck.
    I decree that nobody needs such huge extended ROMs.  (Extended ROMs are
    defined by IEEE 1212 clause 7.7.18.  The spec does not impose
    practically relevant restrictions on the size of extended ROM chunks.)
    
    Another potentially demanding use of CSR1212_MALLOC is if external
    FireWire devices come with Extended ROM entries.  If they are too big
    for kmalloc (or have been too big for vmalloc) we just fail to read
    their ROM.  This is quite unlikely though, to my knowledge.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 0555659d63c285ceb7ead3115532e1b71b0f27a7
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Feb 4 20:25:43 2007 +0100

    ieee1394: sbp2: enforce 32bit DMA mapping
    
    In order to use OHCI-1394 physical DMA, all s/g elements, s/g tables,
    ORBs, and response buffers have to reside within the first 4 GB of the
    FireWire controller's physical address space.  Set the correct mask for
    DMA mappings.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit f412bf440be2dfc0f0ded917410c599c002549e0
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Feb 4 13:04:32 2007 +0100

    ieee1394: sbp2: remove unnecessary alignments of struct members
    
    The members "dma_addr_t command_orb_dma" and "dma_addr_t sge_dma" of
    sbp2.h::sbp2_command_info do not have to be aligned themselves --- only
    the memory which they point to has to be.
    
    The member "struct sbp2_command_orb command_orb" has to be aligned on
    4 bytes boundary which is guaranteed because it contains u32 members.
    
    The member "struct sbp2_unrestricted_page_table scatter_gather_element",
    i.e. the SBP-2 s/g table, has to be aligned on 8 bytes boundary
    according to the SBP-2 spec.  This is not a requirement for FireWire
    controllers but could be expected by SBP-2 targets.
    
    I see no need to align the members command_orb and
    scatter_gather_element on CPU cacheline boundaries.  It could have
    performance benefits, but on the other hand sbp2 has a somewhat wasteful
    allocation scheme which should be optimized first before further tweaks
    like cacheline alignments.  (E.g. don't always allocate SG_ALL s/g table
    elements.)
    
    Note, before as well as after the patch, the code relies on the
    assumption that memory alignment in the virtual address space is
    preserved in the physical address space after DMA mapping.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 041172896309634d3a2065d69f3534de9d111ddd
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Mar 25 21:24:43 2007 +0200

    ieee1394: dv1394: fix CardBus card ejection
    
    Fix NULL pointer dereference on hot ejection of a FireWire card while
    dv1394 was loaded.  http://bugzilla.kernel.org/show_bug.cgi?id=7121
    I did not test card ejection with open /dev/dv1394 files yet.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit aaab1c66f78311771aeaeb4f2e9aab8fab3b1c6d
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Mar 27 00:49:40 2007 +0200

    ieee1394: dv1394: fix CardBus card ejection
    
    Fix NULL pointer dereference on hot ejection of a FireWire card while
    dv1394 was loaded.  http://bugzilla.kernel.org/show_bug.cgi?id=7121
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Adrian Bunk <bunk@stusta.de>

commit 374a00392853db6fac4ec4c93139873a368a78af
Author: Kristian Høgsberg <krh@redhat.com>
Date:   Tue Feb 6 14:49:36 2007 -0500

    firewire: Complete SCSI commands with DID_BUS_BUSY when a bus reset happens.
    
    This lets the SCSI stack retry the command when a SCSI command is
    interrupted by a FireWire bus reset.
    
    Signed-off-by: Kristian Høgsberg <krh@redhat.com>
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 22a38e72bc18b9e8b860182c512efaade5590c7d
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Dec 31 17:20:20 2006 +0100

    firewire: put old and new stack into same Kconfig submenu
    
    Screenshot from "make menuconfig":
    ...
      ?????????????????????? IEEE 1394 (FireWire) support ???????????????????????
      ?  Arrow keys navigate the menu.  <Enter> selects submenus --->.          ?
    ...
      ? ??????????????????????????????????????????????????????????????????????? ?
      ? ?    <M> IEEE 1394 (FireWire) support (JUJU alternative stack, experim? ?
      ? ?    <M>   Support for OHCI firewire host controllers                 ? ?
      ? ?    <M>   Support for storage devices (SBP-2 protocol driver)        ? ?
      ? ?    <M> IEEE 1394 (FireWire) support                                 ? ?
      ? ?    ---   Subsystem Options                                          ? ?
      ? ?    [ ]   Excessive debugging output                                 ? ?
    ...
      ?                    <Select>    < Exit >    < Help >                     ?
      ???????????????????????????????????????????????????????????????????????????
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 35b7541c8fb40e298017c2b1a90d82d740c3e2eb
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Jan 4 18:35:00 2007 +0100

    firewire: typo in Kconfig
    
    Correct a typo.  Also spell FireWire consistently.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 9b6412dda1511fea316aea1b886cabe4b48ca5be
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Feb 10 00:44:44 2007 +0100

    ieee1394: fix host device registering when nodemgr disabled
    
    Since my commit 8252bbb1363b7fe963a3eb6f8a36da619a6f5a65 in 2.6.20-rc1,
    host devices have a dummy driver attached.  Alas the driver was not
    registered before use if ieee1394 was loaded with disable_nodemgr=1.
    
    This resulted in non-functional FireWire drivers or kernel lockup.
    http://bugzilla.kernel.org/show_bug.cgi?id=7942
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit 91efa462054d44ae52b0c6c8325ed5e899f2cd17
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Tue Feb 6 02:34:45 2007 +0100

    ieee1394: fix host device registering when nodemgr disabled
    
    Since my commit 8252bbb1363b7fe963a3eb6f8a36da619a6f5a65 in 2.6.20-rc1,
    host devices have a dummy driver attached.  Alas the driver was not
    registered before use if ieee1394 was loaded with disable_nodemgr=1.
    
    This resulted in non-functional FireWire drivers or kernel lockup.
    http://bugzilla.kernel.org/show_bug.cgi?id=7942
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 0fe4c6fcacb28bda75b31f63d3629f640a6b9bf9
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Feb 3 16:48:51 2007 +0100

    ieee1394: raw1394: prevent unloading of low-level driver
    
    Unloading the low-level driver module of a FireWire host can lead to
    all sorts of trouble if a raw1394 userspace client is using the host.
    Just disallow it by incrementing the LLD's module reference count on
    a RAW1394_REQ_SET_CARD write operation.  Decrement it when the file
    is closed.
    
    This feature wouldn't be relevant if "modprobe -r video1394" or
    "modprobe -r dv1394" didn't automatically unload ohci1394 too.
    http://bugzilla.kernel.org/show_bug.cgi?id=7701
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Dan Dennedy <dan@dennedy.org>

commit 88e7bf2a4c35d1200c2f72f5cd3d9e72c7f6c890
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sat Jan 27 13:52:52 2007 +0100

    ieee1394: dv1394: fix CardBus card ejection
    
    Fix NULL pointer dereference on hot ejection of a FireWire card while
    dv1394 was loaded.  http://bugzilla.kernel.org/show_bug.cgi?id=7121
    I did not test card ejection with open /dev/dv1394 files yet.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 3060e6145db41e6fb3944ee42376977fed761c27
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Thu Jan 11 08:50:27 2007 +0100

    [PATCH] ieee1394: sbp2: fix probing of some DVD-ROM/RWs
    
    Since commit 98e238cd42be6c0852da519303cf0182690f8d9f in Linux 2.6.19,
    "ieee1394: sbp2: don't prefer MODE SENSE 10", some FireWire DVD-ROMs and
    DVD-RWs were mistaken as CD-ROM because sr_mod now sent MODE SENSE 6.
    The MMC command set includes only MODE SENSE 10.
    http://bugzilla.kernel.org/show_bug.cgi?id=7800
    
    This fix lets sbp2 switch scsi_device.use_10_for_rw on for MMC LUs.
    This should rather be done in the command set driver sr_mod, not in the
    sbp2 transport driver, and an according patch will follow for a next
    Linux release.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Chris Wright <chrisw@sous-sol.org>

commit 1a74bc68e4c0534d150e6454b45a70dab831fa32
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Wed Jan 10 20:17:15 2007 +0100

    ieee1394: sbp2: fix probing of some DVD-ROM/RWs
    
    Since commit 98e238cd42be6c0852da519303cf0182690f8d9f in Linux 2.6.19,
    "ieee1394: sbp2: don't prefer MODE SENSE 10", some FireWire DVD-ROMs and
    DVD-RWs were mistaken as CD-ROM because sr_mod now sent MODE SENSE 6.
    The MMC command set includes only MODE SENSE 10.
    http://bugzilla.kernel.org/show_bug.cgi?id=7800
    
    This fix lets sbp2 switch scsi_device.use_10_for_rw on for MMC LUs.
    This should rather be done in the command set driver sr_mod, not in the
    sbp2 transport driver, and an according patch will follow for a next
    Linux release.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 97d552e35d9404df3254e1157df3340e4e2eaedc
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Fri Dec 29 23:47:04 2006 +0100

    ieee1394: sbp2: fix bogus dma mapping
    
    Need to use a PCI device, not a FireWire host device.  Problem found by
    Andreas Schwab, mistake pointed out by Benjamin Herrenschmidt.
    http://ozlabs.org/pipermail/linuxppc-dev/2006-December/029595.html
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Tested-by: Andreas Schwab <schwab@suse.de>

commit 8252bbb1363b7fe963a3eb6f8a36da619a6f5a65
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Wed Nov 22 21:09:42 2006 +0100

    ieee1394: nodemgr: fix deadlock in shutdown
    
    If "modprobe ohci1394" was quickly followed by "modprobe -r ohci1394",
    say with 1 second pause in between, the modprobe -r got stuck in
    uninterruptible sleep in kthread_stop.  At the same time the knodemgrd
    slept uninterruptibly in bus_rescan_devices_helper.  That's because
    driver_detach took the semaphore of the PCI device and
    bus_rescan_devices_helper wanted to take the semaphore of the FireWire
    host device's parent, which is the same semaphore. This was a regression
    since Linux 2.6.16, commit bf74ad5bc41727d5f2f1c6bedb2c1fac394de731,
    "Hold the device's parent's lock during probe and remove".
    
    The fix (or workaround) adds a dummy driver to the hpsb_host device. Now
    bus_rescan_devices_helper won't scan the host device anymore.  This
    doesn't hurt since we have no drivers which will bind to these devices
    and it is unlikely that there will ever be such a driver.  The dummy
    driver is befittingly presented as a representation of ieee1394 itself.
    
    Fixes: http://bugzilla.kernel.org/show_bug.cgi?id=6706
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit b07375b155a0d2ed21a64db68e737da1f19385f7
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Sun Oct 22 16:16:27 2006 +0200

    ieee1394: nodemgr: revise semaphore protection of driver core data
    
     - The list "struct class.children" is supposed to be protected by
       class.sem, not by class.subsys.rwsem.
    
     - nodemgr_remove_uds() iterated over nodemgr_ud_class.children without
       proper protection.  This was never observed as a bug since the code
       is usually only accessed by knodemgrd.  All knodemgrds are currently
       globally serialized.  But userspace can trigger this code too by
       writing to /sys/bus/ieee1394/destroy_node.
    
     - Clean up access to the FireWire bus type's subsys.rwsem:  Access it
       uniformly via ieee1394_bus_type.  Shrink rwsem protected regions
       where possible.  Expand them where necessary.  The latter wasn't a
       problem so far because knodemgr is globally serialized.
    
    This should harden the interaction of ieee1394 with sysfs and lay ground
    for deserialized operation of multiple knodemgrds and for implementation
    of subthreads for parallelized scanning and probing.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit c394f1eafef61c6666f5876afde6110a276c4c9f
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Mon Aug 7 20:48:00 2006 +0200

    ieee1394: sbp2: enable auto spin-up for all SBP-2 devices
    
    This is a follow-up to patch "ieee1394: sbp2: enable auto spin-up for
    Maxtor disks".  When I 'ejected' an OXUF922 based HDD from a Mac OS X
    box, it was spun down by the Mac and did not spin up by itself when
    attached to a Linux box right after that.  The first SCSI command that
    required the bridge to access the drive ended in
    sda:<6>sd 18:0:0:0: Device not ready: <6>: Current: sense key: Not Ready
        Additional sense: Logical unit not ready, initializing cmd. required
    
    Therefore the flag which instructs scsi_mod to send START STOP UNIT with
    START=1 ("make medium ready") after such a condition is now enabled
    unconditionally for all FireWire storage devices.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>

commit 9e5bd023df09e57692a87aba78d9ddee1888a559
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Fri Jun 2 19:34:30 2006 +0200

    [PATCH] sbp2: backport read_capacity workaround for iPod
    
    There is a firmware bug in several Apple iPods which prevents access to
    these iPods under certain conditions. The disk size reported by the iPod
    is one sector too big. Once access to the end of the disk is attempted,
    the iPod becomes inaccessible. This problem has been known for USB iPods
    for some time and has recently been discovered to exist with
    FireWire/USB combo iPods too.
    
    This patch is derived from the fix in Linux 2.6.17, commit
    e9a1c52c7b19d10342226c12f170d7ab644427e2, to be applicable to 2.6.16.x
    without prerequisite patches. It hard-wires a workaround for three known
    affected model numbers (those of 4th generation iPod, iPod Photo, iPod
    mini).
    
    Note: This patch lacks Linux 2.6.17's ability to enable and disable the
    workaround via a module parameter.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Chris Wright <chrisw@sous-sol.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

commit e9a1c52c7b19d10342226c12f170d7ab644427e2
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Mon May 15 22:06:37 2006 +0200

    [PATCH] sbp2: add read_capacity workaround for iPod
    
    Apple decided to copy some USB stupidity over to FireWire.
    
    The sector number returned by iPods from read_capacity is one too many.
    This may cause I/O errors, especially if the kernel is configured for EFI
    partition support. We use the same workaround as usb-storage but have to
    check for different model IDs.
    
            http://marc.theaimsgroup.com/?t=114233262300001
            https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=187409
    
    Acknowledgements:
      Diagnosis and therapy by Mathieu Chouquet-Stringer <ml2news@free.fr>,
      additional data about affected and unaffected Apple hardware from
      Vladimir Kotal, Sander De Graaf, Bryan Olmstead and Hugh Dixon.
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

commit 910573c7c4aced8fd5f45c334cc67862e3424d92
Author: Stefan Richter <stefanr@s5r6.in-berlin.de>
Date:   Fri Oct 7 16:43:49 2005 -0700

    [PATCH] ieee1394/sbp2: fixes for hot-unplug and module unloading
    
    Fixes for reference counting problems, deadlocks, and delays when SBP-2 devices
    are unplugged or unbound from sbp2, or when unloading of sbp2/ ohci1394/ pcilynx
    is attempted.
    
    Most often reported symptoms were hotplugs remaining undetected once a FireWire
    disk was unplugged since the knodemgrd kernel thread went to uninterruptible
    sleep, and "modprobe -r sbp2" being unable to complete because still being in
    use.
    
    Patch is equivalent to commit abd559b1052e28d8b9c28aabde241f18fa89090b in
    2.6.14-rc3 plus a fix which is necessary together with 2.6.13's scsi core API
    (linux1394.org commit r1308 by Ben Collins).
    
    Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Cc: Ben Collins <bcollins@debian.org>
    Signed-off-by: Chris Wright <chrisw@osdl.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
