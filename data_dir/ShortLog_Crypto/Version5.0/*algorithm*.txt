    According to the algorithm described in the comment block at the
    algorithm from commit 1da177e4c3f4 ("Linux-2.6.12-rc2")
    * The algorithm to abort the transaction first pauses the channel by
    soon after setting it.  Some async crypto algorithms don't save the iv,
    fls64(x) is 64.  (1UL << 64) is an overflow and breaks the algorithm.
      That means the hash algorithm has dependency on the size of macro
    Fixes: 4de9d0b547b9 ("crypto: talitos - Add ablkcipher algorithms")
    certain cases where algorithms are dynamically loaded/unloaded.  E.g.
    detection of algorithms supported by MDHA (Message Digest Hardware
    the NH hash function.  These algorithms are fast even on processors
    different allocation algorithms.  With gen_pool_first_fit_align()
    optimize the algorithm further under known guarantees from
     - Log which algorithm is used for dm-crypt's encryption and
      dm verity: log the hash algorithm implementation
      dm crypt: log the encryption algorithm implementation
    it depens on data patterns and compression algorithms.  While "IDLE
       - Support incremental algorithm dumps
    As it is, last_piece is not helping at all: because Nagle algorithm is
    - The "givcipher" (GIVCIPHER) algorithm type.  No algorithms are
      blkcipher_alg.  A few algorithms still set this, but it isn't used
    algorithm wasn't considering the valid physical and virtual address
    Vinicius adds igb kernel documentation regarding the CBS algorithm and
    Add some pointers to the definition of the CBS algorithm, and some
    Sort the list of RAID6 algorithms in roughly decreasing order of
    Fixes: 31c4f4cc32f7 ("tipc: improve broadcast retransmission algorithm")
    dm verity: log the hash algorithm implementation
    Log the hash algorithm's driver name when a dm-verity target is created.
    dm crypt: log the encryption algorithm implementation
    Log the encryption algorithm's driver name when a dm-crypt target is
    IV algorithm is plain64, plain64be, essiv or benbi. It will be assigned to
    a hash based algorithm (private boot seed + hash of endpoint addresses)
    The current algorithm for detecting a page boundary crossing in
    in the tuning range which may be missed by the current algorithm.
    algorithmic TCAM (A-TCAM). HW performs multiple exact match lookups in a
    See algorithm description in clean_live_states().
    * APA - address authentication present, using an architected algorithm
    * API - address authentication present, using an IMP DEF algorithm
    * GPA - generic authentication present, using an architected algorithm
    * GPI - generic authentication present, using an IMP DEF algorithm
    separately. It is assumed that if all CPUs support an IMP DEF algorithm,
    the same algorithm is used across all CPUs.
    crypto: adiantum - fix leaking reference to hash algorithm
    crypto_alg_mod_lookup() takes a reference to the hash algorithm but
    crypto: user - support incremental algorithm dumps
    registered crypto algorithms, because it doesn't support incremental
    a subset of the crypto algorithms even if the user buffer passed to
    to keep track of the current position in the algorithm list.  Then
    asking for a synchronous algorithm can get an asynchronous algorithm.
    In order to have better coverage of algorithms operating on block
    algorithm. The selection of an energy-efficient CPU for a task
    The existing garbage collection algorithm has a number of problems:
    1. The gc algorithm will not evict PERMANENT entries as those entries
       are managed by userspace, yet the existing algorithm walks the entire
      crypto: do not free algorithm before using
    useless to have the algorithm name in the err_cnt member.
    one for each algorithm class.
    algorithms certified by the Chinesse Office of the State Commercial
    The current code uses an algorithm to clamp the FPS values and round them
    resolution, framerate and bytes per pixel. Now that we have an algorithm to
    to the new algorithm should be transparent.
    - Enable dynamic RSS flow key algorithm configuration
    0..31 works as an index to choose the algorithm, On success, the mailbox
    returns the index to the client of chosen LSO algorithm selection.
    0..127 works as an index to choose the algorithm. On success,
    Introduced reserve_flowkey_alg_idx()to reserve RSS algorithm index,
    Introduce state-based algorithm to convert the flow_key value
    selected RSS algorithm index.
    HFI message path.  The new algorithm removed a forced call send for
    names, and thus bypass modpost's whitelisting algorithm, which relies
    Update vga tuning algorithm to the one used in mt76x2 driver
    ERFKILL) that it doesn't handle in its server/address rotation algorithms.
         algorithms into a common function and expand usage into the server
    b43: Use cordic algorithm from kernel library
    Kernel library has a common cordic algorithm which is identical
    utilize the same cordic algorithm implementation.
    input and output sglists based on the algorithm requirements.
    crypto: do not free algorithm before using
    In multiple functions, the algorithm fields are read after its reference
    is dropped through crypto_mod_put. In this case, the algorithm memory
    put operation until the algorithm is never used.
    the algorithm implemented herein only requires O(1) additional work.
    netvsc and storvsc have their own algorithms to determine the outgoing
    On every iteration of net_dim, the algorithm may choose to
    performance as the algorithm works properly now.
    Thermal zone algorithm operates with the numerical states for PWM
    xchacha20, and xchacha12 modules, so that these algorithms could be
    itself; all other parts of the algorithm are the same.  Therefore,
    Instead, we make XChaCha20 its own top-level algorithm which calls the
    'shash' algorithms are always synchronous, so passing CRYPTO_ALG_ASYNC
    'cipher' algorithms (single block ciphers) are always synchronous, so
    Some algorithms initialize their .cra_list prior to registration.
    .cra_list when adding the algorithm to the 'crypto_alg_list'.
    Exception: paes_s390.c uses cra_list to check whether the algorithm is
    calling of_platform_bus_probe() is not necessary. The algorithm for what
    ecc_point_mult is already using a regular algorithm (i.e. having an
    Add support for ChaCha20 skcipher algorithm.
    crypto: bcm - fix normal/non key hash algorithm failure
    hash algorithms and keep it for AES-CBC/CMAC which needs key.
    Currently used scalar multiplication algorithm (Matthieu Rivain, 2011)
    The scaling parameter algorithm was taken from the Amlogic vendor kernel
    tipc: improve broadcast retransmission algorithm
    Currently, the broadcast retransmission algorithm is using the
    retransmission algorithm, and eliminates any risk of logical errors
    allowed as a FIPS mode algorithm. Mark it as such.
    The acomp, akcipher, and kpp algorithm types already have .report
    As soon as the changeset creation algorithm recurses into a new node,
    patches in order to prepare for supporting multiple compression algorithms.
    But the resulting algorithm was unstable, and causes scrolling to be
    the shrinker's seeks setting tells the reclaim algorithm that for every
       - Add notifier for new crypto algorithms
      octeontx2-af: Support for changing RSS algorithm
    take a long time because the rotation algorithm ends up rotating through
      parisc: Optimze cache flush algorithms
    the hashing algorithm used for this FS. Passing these options make
    - Defines few RSS flow algorithms for HW to distribute packets.
      This is not the hash algorithsm (i.e toeplitz or crc32), here SW
    octeontx2-af: Support for changing RSS algorithm
    NIX Rx flowkey algorithm index in NPC RX RSS_ACTION.
    eg: a ethtool command changing RSS algorithm for a netdev
    Configure NIX RX flowkey algorithm configuration to support
    HW supports upto 32 different flowkey algorithms which SW
    algorithm now used in find_swap_entry().
    parisc: Optimze cache flush algorithms
    congestion control algorithm decides to use a new pacing rate.
    algorithms optimal in both cases introduce 'num_mismatched_vp_indexes'
    Update vga tuning algorithm to the one used in mt76x2 driver
    This patch adds RSS key, hash algorithm configuration support
    net: hns3: Add new RSS hash algorithm support for PF
    This patch adds ETH_RSS_HASH_XOR hash algorithm supports, which
    module (like how Yeah uses Vegas algorithmas). For example, BBR is
    make future maintenance and modification easier.  The algorithm
    algorithm.
    Besides, since the algorithm used to erase sectors on non-uniform SPI NOR
    At the layer mixer and interfaces, MISR algorithm can generate CRC
    according to the algorithm that compute the product of wqe count and
    and algorithms documentation so that we don't have squashed columns.
    in this function. Hash generating algorithm is taken from hash_add()
    fuse: change interrupt requests allocation algorithm
    This patch changes the algorithm of allocation of IDs for a request. Plain
    A-MSDU. Thus, use the GSO algorithm to build A-MSDU only if the
    actual algorithm and a callable function which contains the lock
    Add a new peripheral ECC error injection algorithm for Stratix10 and
    ghash is a keyed hash algorithm, thus setkey needs to be called.
    crypto: caam/qi2 - add support for ahash algorithms
    Add support for unkeyed and keyed (hmac) md5, sha algorithms.
    caam/qi2 driver will support ahash algorithms,
    crypto: caam/qi2 - add skcipher algorithms
    Add support to submit the following skcipher algorithms
    Support for the following aead and authenc algorithms is also added
    the calls to the child ecb(...) algorithm to PAGE_SIZE (usually 4096 B),
    of this algorithm, all leaving something to be desired. This new common
    The algorithm to populate the I2C address list would leave holes
    The extended partition algorithm may later choose to utilise a larger
    partition algorithm. Document that the actual capability of this
    The extended partition algorithm may later choose to utilise a larger
      08295b3b5bee ("Implement an algorithm choice for Wound-Wait mutexes")
    Fixes: 08295b3b5bee ("Implement an algorithm choice for Wound-Wait mutexes")
    The allocation algorithm is as follow:
    Add a way to print the currently active CRC algorithm in:
    Use the crypto notifier facility to trigger a switch to a better algorithm
    crypto: api - Introduce notifier for new crypto algorithms
    callback when a new algorithm becomes available. This can be used by
    algorithm to a hardware-accelerated version.
    The arm64 implementation of the CRC-T10DIF algorithm uses the 64x64 bit
    Speed up the GHASH algorithm based on 64-bit polynomial multiplication
    scale algorithm. In case of a channel width downgrade, this would
    result with the rate scale algorithm using a bandwidth that does not
    Fix this by updating the AP station bandwidth and rate scaling algorithm
     - better greppable strings for the bitbang algorithm
    For this reason, it doubled the algorithm's 'chunksize' property
    Fixes: b189817cf789 ("crypto: caam/qi - add ablkcipher and authenc algorithms")
    This patch doesn't change the OOM victim selection algorithm.
    algorithm, doesn't look at memory stas on cgroup level, etc), it's also
     * Make the algorithm look more like what's in the spec, also document
    Instead of that, we use special algorithm to detect shrinkers having no
    patch.  Because we have put the order algorithm into a separate
    mm, clear_huge_page: move order algorithm into a separate function
    be applied to copying huge page too with the same order algorithm.  To
    the order algorithm is moved out of clear_huge_page() into a separate
      due to either loading or searching for crypto algorithms, and cleans
      evm: Don't deadlock if a crypto algorithm is unavailable
       - Only register algorithms supported by the host in virtio.
       - Add Reed-Solomon error correction algorithm.
    Patch 2 generalizes the algorithm in virtnet_set_affinity beyond
     - Add Reed-Solomon error correction algorithm.
    Patch 4 adds a new selftest for the recently introduced algorithmic
    [   22.620488] lib80211_crypt: registered algorithm 'CCMP'
    On algorithms such as GHASH, which executes at ~1 cycle per byte on
    when running fast algorithms (i.e., ones that use special instructions
    This patch added the 6th compression algorithm support for pstore: zstd.
    algorithm won't be doing the right thing, as it will be
    algorithm.
    code, 'dig_algorithm', a member variable of the structure dig. That
    The type of the variable 'dig_algorithm' has been change to reflect
    enum dig_algorithm.
    Create the basic structure of the "new" data structures & algorithms
    compensation functions/algorithms are provided by Bosch Sensortec GmbH
    algorithm and format other than LZ4, thus a generic
    I2P converts fields into frames using an edge adaptive algorithm. The
    checksum algorithm. Change the code to correctly reflect that.
    Use a more robust enumeration algorithm which allows for non-seqential physical nodes.
    Merge branch 'mlxsw-Introduce-algorithmic-TCAM-support'
    mlxsw: Introduce algorithmic TCAM support
    The Spectrum-2 ASIC uses an algorithmic TCAM (A-TCAM) where multiple
    3. Uses well-proven algorithm instead of coding it one more time.
    3. Uses well-proven algorithm instead of coding it one more time.
    This leads to the following simple algorithm:
                Used CRC algorithm from lib.
    i2c: Add FSI-attached I2C master algorithm
    2) algorithm and key negotiation
    crypto: sharah - Unregister correct algorithms for SAHARA 3
    This patch fixes two typos related to unregistering algorithms supported by
    SAHARAH 3. In sahara_register_algs the wrong algorithms are unregistered
    ASoC: wm_adsp: Correct algorithm list allocation size
    overlooked when doing some refactoring to the algorithm list
    as required for reading the algorithm list. A kcalloc is no
    the L1d flushing algorithm: L1D on x86_64 is tagged by physical addresses.
    Fixes: a47dd5f06714 ("x86/KVM/VMX: Add L1D flush algorithm")
    algorithmic TCAM (A-TCAM) and a regular circuit TCAM (C-TCAM) for rules
    First at all, look at crypto_alloc_tfm() work algorithm:
    algorithm. If that fails and the kernel supports dynamically loadable
    construct an algorithm on the fly.
    algorithm use alg_name to store internal information in order to construct
    an algorithm on the fly, but crypto_larval_lookup() will try to use
    evm: Don't deadlock if a crypto algorithm is unavailable
    When EVM attempts to appraise a file signed with a crypto algorithm the
    Hard-coded luts are needed since complex algorithms are used for
    of timestamp on all architectures, and then changes the algorithm to use
       latter in particular, it uses the reciprocal algorithm to emulate it, from Jiong.
    architectures. The algorithm in rcu_torture_stall() can deal with
    algorithm breaks in 2038 when the intermediate signed 32-bit timestamps
    Fixes: 57e23de02f48 ("drm/sun4i: DW HDMI: Expand algorithm for possible crtcs")
     - Removes unnecessary algorithm to compute the next period
    Congestion control algorithms, which access the rate sample
    Fixes: 57e23de02f48 ("drm/sun4i: DW HDMI: Expand algorithm for possible crtcs")
    Fixes: 49836b11fe71 ("drm/sun4i: tcon: Generalize engine search algorithm")
    * A hybrid Codel/Blue AQM algorithm, "Cobalt", tied to an FQ_Codel
    an algorithmic TCAM (A-TCAM).
    Some skcipher algorithms set .cra_flags = CRYPTO_ALG_TYPE_SKCIPHER.  But
    So, remove the useless assignment from all the skcipher algorithms.
    Some aead algorithms set .cra_flags = CRYPTO_ALG_TYPE_AEAD.  But this is
    So, remove the useless assignment from all the aead algorithms.
    Some ahash algorithms set .cra_type = &crypto_ahash_type.  But this is
    So, remove the useless assignment from all the ahash algorithms.
    Many ahash algorithms set .cra_flags = CRYPTO_ALG_TYPE_AHASH.  But this
    So, remove the useless assignment from all the ahash algorithms.
    Many shash algorithms set .cra_flags = CRYPTO_ALG_TYPE_SHASH.  But this
    So, remove the useless assignment from all the shash algorithms.
    crypto: x86/sha-mb - decrease priority of multibuffer algorithms
    So, let's make the multibuffer algorithms low priority.  Users who want
    the priority used for many of the other generic algorithms.
    the priority used for many of the other generic algorithms.
    other generic algorithms.
    job_sha256::result_digest.  Consequently, the sha256_mb algorithm
    This patch adds support for two new algorithms in the Inside Secure
    This patch adds support for two algorithms in the Inside Secure SafeXcel
    This patch adds support for the hmac(md5) algorithm in the Inside Secure
    This patch adds the MD5 algorithm support to the Inside Secure SafeXcel
    crypto: inside-secure - filter out the algorithms by engine
    EIP engines do not support the same set of algorithms. So far the
    set of algorithms, but that won't be true for all engines. This patch
    adds an 'engines' field in the algorithm definitions so that they only
    The Spectrum-2 ASIC uses an algorithmic TCAM (A-TCAM) instead of a
    algorithm (the basic one, reciprocal_div) to emulate it.
    algorithm (the basic one, reciprocal_div) to emulate it.
    lib: reciprocal_div: implement the improved algorithm on the paper mentioned
    algorithm described in Figure 4.2 of the paper except when
    Our Wound-Wait mutexes actually don't use the Wound-Wait algorithm but
    the Wait-Die algorithm. One could perhaps rename those mutexes tree-wide to
    here is to implement also the "Wound-Wait" algorithm as a per-WW-class
    Now Wound-Wait is a preemptive algorithm, and the preemption is implemented
    Use it instead of the loop based L1 flush algorithm.
    x86/KVM/VMX: Add L1D flush algorithm
    based flush algorithm is required.
    Currently the data transmission arbitration algorithm - DataTranARB
    with the numbers provided by the CIE 1931 algorithm, the number of the
    The calculation of the table using the CIE 1931 algorithm is enabled by
    docs, this one is important to check bus recovery algorithms with it.
    drm: Change deadlock-avoidance algorithm for the modeset locks.
    transactions so change algorithm from Wait-Die to Wound-Wait.
    locking: Implement an algorithm choice for Wound-Wait mutexes
    The current Wound-Wait mutex algorithm is actually not Wound-Wait but
    is, contrary to Wait-Die a preemptive algorithm and is known to generate
    algorithm.
    for the selection of the ECC algorithm and strength in case the boot
    mtd: rawnand: add Reed-Solomon error correction algorithm
    Add Reed-Solomon (RS) to the enumeration of ECC algorithms.
    In the discussion over which hash algorithm will replace SHA1 in git,
    Add explicit RETs to the tail calls of AEGIS and MORUS crypto algorithms
    the algorithm is supported by the backend virtio-crypto
    algorithm.
    crypto: virtio - Read crypto services and algorithm masks
    Read the crypto services and algorithm masks which provides
    information about the services and algorithms supported by
    state from per-tfm (per-key) state like the other hash algorithms do,
    Fixes: f1939f7c5645 ("crypto: vmac - New hash algorithm for intel_txt support")
    Fixes: f1939f7c5645 ("crypto: vmac - New hash algorithm for intel_txt support")
    filters that output to LAG ports implementing other hash algorithms. Team,
    IB: Improve uverbs_cleanup_ucontext algorithm
    Improve uverbs_cleanup_ucontext algorithm to work properly when the
    couldn't find new users of this algorithm since, so there should be no
    drm/sun4i: DW HDMI: Expand algorithm for possible crtcs
    drm/sun4i: tcon: Generalize engine search algorithm
    TOP has multiple input ports, but current engine search algorithm
    Correct current graph traversing algorithm in such way that it doesn't
    algorithms have power-of-2 digest sizes.  In some cases this resulted in
    This patch adds the authenc(hmac(sha384),cbc(aes)) algorithm support to
    This patch adds the hmac(sha384) algorithm support to the Inside Secure
    This patch adds the sha384 algorithm support to the Inside Secure
    This patch adds the authenc(hmac(sha512),cbc(aes)) algorithm support to
    This patch adds the hmac(sha512) algorithm support to the Inside Secure
    This patch adds the sha512 algorithm support to the Inside Secure
    blocks given to the engine. This works well for all algorithms so far,
    algorithms such as SHA512 wouldn't work.
    SDL2 has a naive algorithm to apply the correct settings to a controller.
    The current code that reads the algorithm list from the DSP is
    may be stored for this neighbor and thus the B.A.T.M.A.N V algorithm may
    those pages on zram are mostly cold pages due to VM's LRU algorithm.
    those pages on zram are mostly cold pages due to VM's LRU algorithm.
    those pages on zram are mostly cold pages due to VM's LRU algorithm.
    When stripe alignments are invalid, data alignment algorithms in the
       - Add zstd compression algorithm.
      algorithms.
      fscrypt: log the crypto algorithm implementations
     - qspinlock improvements: the locking algorithm now guarantees forward
     (4) In kAFS, if the rotation algorithm sees ECONNRESET rather than ETIME,
    This covers all algorithms that used 'struct cipher_testvec', e.g. any
    Note that git's default diff algorithm gets confused by the testmgr.h
    crypto: testmgr - fix testing OPTIONAL_KEY hash algorithms
    Since testmgr uses a single tfm for all tests of each hash algorithm,
    those algorithms should have both keyed and unkeyed test vectors, to
    isn't an algorithm that makes sense anyway because HMAC is meant to be
    This patch adds the authenc(hmac(sha1),cbc(aes)) AEAD algorithm
    This patch adds the authenc(hmac(sha224),cbc(aes)) AEAD algorithm
    This patch adds support for the first AEAD algorithm in the Inside
    first AEAD algorithm added to this driver, common AEAD functions are
    algorithms).
    This patches reworks the way the algorithm type is set in the context,
    by using the fact that the decryption algorithms are just a combination
    of the algorithm encryption type and CONTEXT_CONTROL_TYPE_NULL_IN.
    enough to be shared between skcipher and aead algorithms.
    RDMA/hns: Modify uar allocation algorithm to avoid bitmap exhaust
    This patch modified uar allocation algorithm in hns_roce_uar_alloc
     - Enable BATMAN V algorithm by default, by Marek Lindner
    fscrypt: log the crypto algorithm implementations
    Log the crypto algorithm driver name for each fscrypt encryption mode on
    Note: algorithms can be dynamically added to the crypto API, which can
    Certain algorithms constructed from ChaCha or the ChaCha permutation,
    over 70 cryptanalysis papers.  Of course, these ChaCha-based algorithms
    names of the algorithms anyway.  In the past these values were also
    MORUS AEAD algorithms.
    algorithms (MORUS-640 and MORUS-1280). The original authors of MORUS
    This patch adds test vectors for the AEGIS family of AEAD algorithms
    algorithms (AEGIS-128, AEGIS-128L, and AEGIS-256). The original
    the leap year algorithm will fail in 2100.
    configurations that NVGPU's algorithm didn't work for.
    drm/nouveau/gr/gf100-: virtualise dist_skip_table + improve algorithm
    The algorithm for GM200 and newer matches RM for all the boards I have, but
    drm/nouveau/gr/gf100-: virtualise alpha_beta_tables + improve algorithms
    same mapping as NVIDIA for GF100-GF119, so the algorithm partially depends
    I couldn't find traces for every possibility, so the algorithm will switch
    The algorithm used in the GK104 implementation was ported from NVGPU.
    recovery algorithm. It is used only if the connection does not
    algorithms due to the margin of 3*MSS).
    implement retransmission path selection algorithms for CMT-SCTP.
    algorithm is not optimal and we often emit more instructions
    VNOVOL.  Currently, the rotation algorithm will stop with EREMOTEIO.
    all the servers have been tried and the record rechecked, the algorithm
    The server rotation algorithm just gives up if it fails to probe a
          the algorithm in the code
    because the algorithm doesn't detect received network errors.
    P-state selection algorithm (powersave or performance) is selected by
    or apply some algorithm on top of those values) and so a new callback
    There is a clerical error when turn off Nagle's algorithm in
    Nagle's algorithm failure.
    Our headers sort algorithm has had pretty chaotic results. Let's fix that.
      crypto: api - fix finding algorithm currently being tested
      NVLink (ie. GPUs). The main one tweaks the TLB flush algorithm to
    * Add Maglev hashing algorithm as a IPVS scheduler
      Inju Song says "Implements the Google's Maglev hashing algorithm as a
      which is used in sh/dh/lblc/lblcr algorithms. Instead the
    "sys" for the names, they do not match the default compare algorithm. As
    this was a problem for power pc, the algorithm can be overwritten by the
    architecture. The solution is to have x86 have its own algorithm to do the
    common compare function with its regular expression matching algorithm.
      random: use a different mixing algorithm for add_device_randomness()
    Fixes: 8c419778ab57e ("crypto: caam - add support for RSA algorithm")
    algorithm parameters are identical, in this case to the software
    algorithm parameters. In our case the compressed result is
    crypto: api - fix finding algorithm currently being tested
    algorithm is being mistaken for an algorithm which failed its tests.
    Fix it by only returning ELIBBAD for "non-larval" algorithms.  Also
    don't leak a reference to the algorithm.
    using the predictable name algorithm in systemd on a HiSilicon D05,
    fc_type is set in current users based on the algorithm in rt6_fill_node:
    random: use a different mixing algorithm for add_device_randomness()
    trivial amount of context (especially in the CRC folding algorithms),
       since it's called as part of the pagefault readahead algorithm, that
    DDB allocation optimization algorithm requires/assumes ddb allocation for
    ipvs: fix multiplicative hashing in sh/dh/lblc/lblcr algorithms
    The sh/dh/lblc/lblcr algorithms are using Knuth's multiplicative
    correctly implements this algorithm. It doesn't use the same constant,
    Implements the Google's Maglev hashing algorithm as a IPVS scheduler.
      ima: Fallback to the builtin hash algorithm
     - Fix the DM integrity target to fail early if a keyed algorithm (e.g.
    In such a case the vector spreading algorithm assigns interrupts to CPUs
    swap readahead algorithms.  Just unify cluster-based and vma-based
    current code structure which diverges two swap readahead algorithm in
    readahead algorithms but just should call swapin_readahead.
      staging: rtl8723bs: Fix IEEE80211 authentication algorithm constants.
       - convert x86 crypto algorithms to skcihper
    hashes without setting key") dm-integrity cannot use keyed algorithms
    clauses for selection of algorithm.
    allocation algorithm. Document the parameters.
    avoided, the parity recover calculation(xor or raid6 algorithms) needs to
    an unbounded number of failed instances for the same algorithm
    we would if it were a normal algorithm.  However, the lookup code
    will be returned when all registered algorithm of a given name
    This patches uses the state size of the algorithms instead of their
    anything as the state and digest size are the same for many algorithms,
    and state size. This commit prepares the addition of such algorithms.
    The token used for encryption and decryption of skcipher algorithms sets
    its stat field to "last packet". As it's a cipher only algorithm, there
    staging: rtl8723bs: Fix IEEE80211 authentication algorithm constants.
    AUTH_ALG_* to represent authenication algorithm options.  However,
    of the crc32c algorithm, i.e crc32c-generic (for unoptimised, generic
    algorithm, whose checksum is 4 bytes == sizeof(u32). Despite not
    having other algorithms, btrfs' design supports using a different
    algorithm whith different space requirements. To future-proof the code
    query the size of the currently used algorithm from the in-memory copy
    ima: Fallback to the builtin hash algorithm
    IMA requires having it's hash algorithm be compiled-in due to it's
    early use.  The default IMA algorithm is protected by Kconfig to be
    The ima_hash kernel parameter allows to choose the hash algorithm. When
    the specified algorithm is not available or available as a module, IMA
    the default builtin Kconfig hash algorithm.
    This algorithm ensures that in the vast majority of cases a node will
    tipc: allow closest-first lookup algorithm when legacy address is configured
      first' algorithm to first look for a node local destination, and only
      robin' lookup algorithm.
      lookup algorithm has no way of recognizing this case. So, as long as
      there are node local destinations, the algorithm will always select
    Net DIM is a generic algorithm, purposed for dynamically
    speed increase over the best existing algorithm for powerpc (altivec).
    reverse engineering the decoding algorithm described in the
    The algorithm used in baboon_irq() appears to be subject to a race
    NEON algorithm running with preemption disabled.
    So unroll the loop by 4. We still cannot perform the AES algorithm in
    So unroll the loop by 4. We still cannot perform the AES algorithm in
    crypto: sm4 - introduce SM4 symmetric cipher algorithm
    Introduce the SM4 cipher algorithms (OSCCA GB/T 32907-2016).
    as an authorized cryptographic algorithms for the use within China.
    TME and MKTME. It includes which encryption policy/algorithm is selected
    to a race condition in the algorithm. This race condition is inherent to
    the algorithm and not a bug. This was fine because, until now, we were
    compression algorithm API to implement pstore compression backends. But
    While the tuning algorithm introduced in v4.14 enables high speed modes
    i2c_algorithm object could be NULL in such situation.
    scan algorithm.
    by the dtc compiler, a mask has been added to the cache lookup algorithm.
    multiple compression algorithms to be built into pstore. Still only one
    This commit changes the detection algorithm to require 5 identical OVCD
    Currently, pstore has supported three compression algorithms: zlib,
    lzo and lz4. This patch added two more compression algorithms: lz4hc
    provided by the hypervisor admin, to choose the qspinlock algorithm
    SHA-512, SHA3 and SM3 secure hash algorithms using ARMv8.2 optional
    hash algorithms if they believe L3 only and the IPv6 flow label are not
    different algorithms if desired.
    - added a comment to cover letter about choice in algorithms based on
    using the same hash algorithm for path selection.
    template wrapping an ECB mode algorithm, remove lrw_crypt().  Also
    template wrapping an ECB mode algorithm, remove xts_crypt().
    crypto: x86/camellia - remove XTS algorithm
    The XTS template now wraps an ECB mode algorithm rather than the block
    Remove the xts-camellia-asm algorithm which did this.  Users who request
    crypto: x86/camellia - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-camellia-asm algorithm which did this.  Users who request
    crypto: x86/camellia-aesni-avx2 - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-camellia-aesni-avx2 algorithm which did this.  Users who
    crypto: x86/camellia-aesni-avx - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-camellia-aesni algorithm which did this.  Users who
    crypto: x86/cast6-avx - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-cast6-avx algorithm which did this.  Users who request
    shorter one, then the algorithm accidentally encrypted/decrypted only 8
    crypto: x86/twofish-avx - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-twofish-avx algorithm which did this.  Users who request
    crypto: x86/twofish-3way - remove XTS algorithm
    The XTS template now wraps an ECB mode algorithm rather than the block
    Remove the xts-twofish-3way algorithm which did this.  Users who request
    crypto: x86/twofish-3way - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-twofish-3way algorithm which did this.  Users who request
    crypto: x86/serpent-avx - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-serpent-avx algorithm which did this.  Users who request
    crypto: x86/serpent-avx2 - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-serpent-avx2 algorithm which did this.  Users who request
    crypto: x86/serpent-sse2 - remove XTS algorithm
    The XTS template now wraps an ECB mode algorithm rather than the block
    Remove the xts-serpent-sse2 algorithm which did this.  Users who request
    crypto: x86/serpent-sse2 - remove LRW algorithm
    The LRW template now wraps an ECB mode algorithm rather than the block
    Remove the lrw-serpent-sse2 algorithm which did this.  Users who request
    x86 algorithms from the blkcipher interface over to the skcipher
    crypto: simd - allow registering multiple algorithms at once
    algorithms, then allocates and registers the simd wrapper algorithms for
    algorithms are prefixed with two underscores.
    - disable each compression algorithm in ILK_DPFC_CONTROL
    algorithm is simple, we identify basic-block head in a first traversal,
    The detection algorithm is basically the same as the one in verifier except
    net/tcp/illinois: replace broken algorithm reference link
    The link to the pdf containing the algorithm description is now a
    It is currently used by the B.A.T.M.A.N. IV algorithm to identifify the
      X.509: fix BUG_ON() when hash algorithm is unsupported
    a pair of packet sockets, testing the various fanout algorithms.
    The algorithm is quite simple, but requires two iterations over the list of
    its signature's hash algorithm is not available in the crypto API.  In
    X.509: fix BUG_ON() when hash algorithm is unsupported
    hash algorithm is not available in the crypto API.  In this case,
    Update the algorithm in storvsc_do_io to look for a channel
    This module registers crc32 and crc32c algorithms that use the
     algorithms taking optional key") in v4.16-rc1]
    i2c_algorithm object could be NULL in such situation.
    The currently used regex algorithm is defined as the weak default and
    layer 1. The dir /a from layer 2 will never be indexed, so the algorithm
    (*) the algorithm in ovl_lookup_real_ancestor() can be improved to lookup
    IB/srp: Fix completion vector assignment algorithm
    Add AEAD cipher algorithms for aes gcm and ccm.
    The following algorithms are added:
    ktime_get_real() instead, but since the algorithm here depends on the
      thermal: imx: improve comments describing algorithm for temp calculation
    be performed on 32bit platforms. Using same algorithm as int_sqrt()
         algorithms.
       - Avoid hmac nesting by requiring underlying algorithm to be unkeyed.
      gfs2: Improve non-recursive delete algorithm
    algorithm. This patch introduces NL80211_CMD_STA_OPMODE_CHANGED
    perform the cyclic Ping-Pong algorithm around all the available
    Implement the Chinese SM3 secure hash algorithm using the new
    So instead, let's rephrase the algorithm using fixed array indexes only.
    Fixes: 53964b9ee63b7075 ("crypto: sha3 - Add SHA-3 hash algorithm")
    do_gettimeofday() to read the current time. While the algorithm used
    time_to_tm() algorithm with a call to the safe time64_to_tm().
    - when raid6 rebuild algorithm is used, i.e. raid6_datap_recov() and
    - when raid5 rebuild algorithm is used, i.e. xor, raid bio can be cached
    algorithm reconstruction would be run, we cannot merge rbios if
    that we have 3 compression algorithms.
    gfs2: Improve non-recursive delete algorithm
    In rare cases, the current non-recursive delete algorithm doesn't
    The metadata read-ahead algorithm broke when switching from recursive to
    non-recursive delete: the current algorithm reads ahead blocks at height
    The interrupt dispatch algorithm used in the OSS driver seems to be
    algorithm without the theoretical race condition.
    to find any shortcuts in the AES algorithm.
    Currently, almost none of the keyed hash algorithms check whether a key
    has been set before proceeding.  Some algorithms are okay with this and
    in the kernel where userspace can specify an arbitrary hash algorithm by
    crypto: hash - annotate algorithms taking optional key
    a given hash algorithm is keyed or not.  AF_ALG currently does this by
    actually slightly broken because the CRC-32 algorithms implement
    indicates that the algorithm has a ->setkey() method, but it is not
    required to be called.  Then set it on all the CRC-32 algorithms.
    from their underlying algorithm.
    When the mcryptd template is used to wrap an unkeyed hash algorithm,
    is necessary for mcryptd to keep working with unkeyed hash algorithms
    When the cryptd template is used to wrap an unkeyed hash algorithm,
    is necessary for cryptd to keep working with unkeyed hash algorithms
    to determine whether the underlying algorithm requires a key or not.
    algorithms, since the ahash API can be used with either.
    algorithm the results are comparable. But intel_pstate brings in
    Since these tests are done only using non PID algorithm introduced in
    commit: b4ded8327fe ("ixgbe: Update adaptive ITR algorithm")
    tipc: simplify small window members' sorting algorithm
    We simplify the sorting algorithm in tipc_update_member(). We also make
    The ASID allocation algorithm has been formally verified using the TLA+
    There is a message posted to the crypto notifier chain when an algorithm
    listeners for the algorithm request and registration messages.
    algorithm, the NULL pointer dereference is actually caused by a
    4. Fix the assgin algorithms for the field of sr_max
    It is used for debugging SCTP congestion control algorithms,
    thermal: imx: improve comments describing algorithm for temp calculation
    The description of the implemented algorithm is hardly understandable
            n2cp f028687c: /virtual-devices@100/n2cp@7: Unable to register algorithms.
    If the rfc7539 template was instantiated with a hash algorithm with
    underlying hash algorithm has the digest size expected for Poly1305.
      supports the multiple cryptographic algorithm used in
      crypto: hmac - require that the underlying hash algorithm is unkeyed
    All the ChaCha20 algorithms as well as the ARM bit-sliced AES-XTS
    algorithms call skcipher_walk_virt(), then access the IV (walk.iv)
    and the algorithms crash trying to use the uninitialized IV pointer.
    which is only called when there are bytes to process.  Thus, algorithms
    walk.nbytes == 0.  Still, many algorithms/architectures are fine with
    be used to build lockless scheduling algorithms and improving
    in microseconds. The algorithm slightly changes here, to avoid 64-bit
    New devices will have rate scaling algorithm running in the firmware.
    Coefficients and algorithm which coefficients to select are taken
    applications inside the NIC processor - be it a simple algorithm without
      done via the SipHash algorithm. The next patch adds printk specifier
    This module registers block cipher algorithms that make use of the
    The following algorithms are supported:
    Unfortunately I did not understand the exact intention of the algorithm,
    crypto: hmac - require that the underlying hash algorithm is unkeyed
    algorithm is unkeyed, trying to use "hmac(hmac(sha3-512-generic))"
    and it just so happens that other hash algorithms are fine with that,
    hash algorithms also affected; I couldn't test everything.
    which tests whether a shash algorithm is keyed.  Then update the HMAC
    template to require that its underlying hash algorithm is unkeyed.
    in microseconds. The algorithm slightly changes here, to avoid 64-bit
    Now that the irq path uses the rcu_nmi_{enter,exit}() algorithm,
    algorithm, clamp ->dynticks_nmi_nesting value to allow for interrupts
    currently using the SHA256 digest algorithm, so add that to
    to add the right algorithms.
    Fixes: 30493cc9dddb ("lib/int_sqrt.c: optimize square root algorithm")
      ftrace: Add freeing algorithm to free ftrace_mod_maps
    zram: remove zlib from the list of recommended algorithms
    list of recommended algorithms and recommend zstd instead.
    zram: add zstd to the supported algorithms list
    Add ZSTD to the list of supported compression algorithms.
    after the fault swap entry.  The readahead algorithm calculates some of
      xfs: add comments documenting the rebalance algorithm
    be discovered by various TCP Congestion Controls algorithms.
      ima: fix hash algorithm initialization
    IB/rxe: don't crash, if allocation of crc algorithm failed
    Following crash happens, if crc algorithm couldn't be allocated:
    [ 1097.901220] rdma_rxe: failed to allocate crc algorithmi err:-2
    The owner be used according to the below algorithm:
    xfs: add comments documenting the rebalance algorithm
    uneven record number split algorith,
    ima: fix hash algorithm initialization
    when the hash algorithm is invalid.  This prevents the default hash
    algorithm defined as CONFIG_IMA_DEFAULT_HASH from being used.
    This patch sets hash_setup_done flag only for valid hash algorithms.
            algorithms"
    One quirk of the algorithm is that while we normally split a node half and
    Fixes: db2aa7fd15e8 ("initramfs: allow again choice of the embedded initramfs compression algorithm")
    Add support for MD5, SHA1, SHA256 hash algorithms for Exynos HW.
    - Select sw algorithms MD5, SHA1 and SHA256 in EXYNOS_HASH
    crypto: caam/qi - abort algorithm setup on DPAA2 parts
    Migrate to all cipher algorithms to the skcipher_alg interface. While at
    In the decryption case, the subsequent setup of the hashing algorithm
    where it activates the "Overlapping Neighbor Monitoring" algorithm.
    the algorithm is not activated. This will eliminate any risk that an
    understand "zlib:9" as compression level rather than an algorithm
    compression algorithm specifier was relaxed in commit
    throttle set to true *and* the trend to 'dropping'. From there the algorithm
    This adds support for offloading the CBS algorithm to the controller,
    This queueing discipline implements the shaper algorithm defined by
    ensures the accuracy of algorithms relying on it.
    algorithm used by the kernel for IPv4 multi-path routing.
    algorithm is "nv".
    A congestion control algorithm can make a call to the BPF socket_ops
    avoidance algorithms (such as Vegas, NV and BBR). Although it is easy
    avoidance algorithms tend to update their base RTTs to improve fairness.
    the ability of these RTT based congestion control algorithms to prevent
    congestion avoidance algorithm will allow more queueing. When there are
    avoidance algorithms.
    instruction caches.  Several potential algorithms are much less painful
        and make the algorithms more clear
         selected according to a round-robin algorithm, but also considering
      oriented communication. A special algorithm guarantees that this is
    The algorithm works as follows:
    For now, the algorithm is based on the assumption that there is only one
    algorithm, the naming for the GC thresholds was altered, but the
    this algorithm works, it requires a number of corner cases to be checked
    and is error prone in case that the recycling algorithm is modified.
    media: dtv-frontend.rst fix a typo: algoritms -> algorithms
    WARNING: 'algoritms' may be misspelled - perhaps 'algorithms'?
    SHA2-512  - Instruction support for SHA512 Hash algorithm (e.g SHA512H,
    SM3       - Instruction support for Chinese cryptography algorithm SM3
    SM4       - Instruction support for Chinese cryptography algorithm SM4
    current algorithm ignores the contribution of some of the channels resulting in
    KNL_MAX_CHANNELS. The algorithm is already smart enough to consider participants
    Alex updates the adaptive ITR algorithm to better support the needs of the
    network.  This attempt to make it so that our ITR algorithm will try to
    Patches 8-12 contain the algorithm for aligning packets.
    ixgbe: Update adaptive ITR algorithm
    The following change is meant to update the adaptive ITR algorithm to
    I have done is make it so that our ITR algorithm will try to prevent either
    If the algorithm we're parallelizing is asynchronous we might change
    recovery algorithm, in particular for high-speed networks. Currently,
    ftrace: Add freeing algorithm to free ftrace_mod_maps
    Enable kernel mode NEON and the various NEON based crypto algorithms,
    the way the hashing algorithm works but in the case of a future patch
    algorithms are implemented in other files located in hns roce driver.
    - Optimized segment distribution algorithm for regamma mapping
    first enforce uniqueness.  This change modifies the insertion algorithm
      i2c: busses: make i2c_algorithm const
    default block size (128 KB) and and various compression algorithms/levels.
    bcache uses a Proportion-Differentiation Controller algorithm to control
    writeback rate to cached devices. In the PD controller algorithm, dirty
    Enable the VMA based swap readahead algorithm, or use the original
    global swap readahead algorithm.
    readahead algorithm.
    algorithm is reused, because it is an effect algorithm to detect the
    The original swap readahead algorithm is confused by the background
    readahead algorithm works much better.
    influence the swap readahead algorithm too.
    detection and scaling algorithm is reused, because it is an effect
    algorithm to detect the space locality.
    added to show the efficiency of the readahead algorithm and some other
    The original swap readahead algorithm is confused by the background
    readahead algorithm works much better.
    that the swap readahead algorithm and parameters could be tuned
    algorithm to control writeback rate. A dirty target number is used in
       - Drop the P-state selection algorithm based on a PID controller from
     - raid6 improvements for arm64: faster algorithm for the delta syndrome
    The main difference between the existing algorithm and the new one is
    that the existing algorithm rate-limits the flow whereas the new
    algorithm does not. Instead it *classifies* the flow based on whether
    If the packet rate is 15/s, the existing algorithm would ACCEPT 10
    But with the new algorithm, as long as the rate of 15/s is sustained,
    This is how the new algorithm works:
    been previously physically logged. The bmbt owner change algorithm
    In preparation for such fixes to the bmbt owner change algorithm,
    the new module would be using its own processing algorithms to process raw
    encryption algorithms in the hardware).
    i2c: busses: make i2c_algorithm const
    The current algorithm uses integer registers to calculate the
    SSP0_RX to the algorithm running on host.
    format and recovery algorithm are the same as for single PPL approach.
    The dynamic ITR algorithm depends on a calculation of usecs which
    media: usb: make i2c_algorithm const
    commit 8161239a8bcc ("rtmutex: Simplify PI algorithm and make highest prio task get lock")
    ("rtmutex: Simplify PI algorithm and make highest prio task get lock")
    This patch applies to exceptions the same algorithm that is used for
    The liveness tracking algorithm is quite subtle; add comments to explain it.
    to detect erased codeword in case of BCH ECC algorithm. The
    The high-level log recovery algorithm consists of two loops that
    algorithm must split the reads of such records into two partial
    block. So, effectively this means applying a "locality based algorithm"
    again as part of a 'cluster'. Since the algorithm prefers allocating a
    media: v4l: vsp1: Allow entities to participate in the partition algorithm
    inputs required to each entity for the partition algorithm. Thus it
    algorithm support. The registers and bits defined here are available on
    As we develop the partition algorithm, we need to store more information
    The partition algorithm functions will be changed, and
    that are periodically merged was an algorithmic problem within
    extremely fast non-cryptographic hash algorithm for checksumming.
       WiFi, NFC, USB; codepages and crypto algorithms).
      ARM: exynos_defconfig: Enable NLS_UTF8 and some crypto algorithms
    Check for i2c_algorithm and i2c_adapter_quirks structures that are only
    correspondingly. These fields are declared const, so i2c_algorithm and
    algorithm when the driver tries to fetch the request, CFQ expires
    Below patch gives a chance to cfq algorithm (cfq_arm_slice_timer)
      zram: rework copy of compressor name in comp_algorithm_store()
    zram: rework copy of compressor name in comp_algorithm_store()
    comp_algorithm_store() passes the size of the source buffer to strlcpy()
    New algorithm here takes advantage of the M7/M8 block init store ASIs, with much
    same algorithems.
    New algorithm that takes advantage of the M7/M8 block init store
    capping algorithm.
    Provide a NEON accelerated implementation of the recovery algorithm,
    gated IRQ rather than polling for phase error, like the algorithm in the
    the mapping, algorithms(like SP, DWRR etc) and shaper(CIR, PIR etc)
      crypto: brcm - Fix SHA3-512 algorithm failure
    algorithms: MD5, SHA1, SHA224, SHA256.
    to the supported algorithms. DMA or IRQ mode are used depending
    All systems use the same P-state selection "powersave" algorithm
    "servers" have been using the load-based P-state selection algorithm
    the P-state selection algorithm based on CPU load is generally on par
    with the PID-based algorithm performance-wise, and for some workloads
    Moreover, the PID-based P-state selection algorithm in intel_pstate
    selection algorithm based on CPU load in the active mode on all
    Earlier GPUs have been reverted to a custom I2C-over-AUX algorithm.
      bfq: fix typos in comments about B-WF2Q+ algorithm
    media: ngene: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: mantis: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: dm1105: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: ddbridge: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: cx24123: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: zd1301_demod: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: dib8000: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: s5h1420: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: dib7000p: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: marvell-ccic: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: saa7146: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: dib9000: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: usbvision: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    media: dvb-ttusb-budget: constify i2c_algorithm structure
    Check for i2c_algorithm structures that are only stored in
    declared const, so i2c_algorithm structures that have this
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    This also paves the way for a more interesting loop avoidance algorithm,
    state to change the formatting algorithms.
    ARM: exynos_defconfig: Enable NLS_UTF8 and some crypto algorithms
     - popular crypto algorithms and transformations as modules.
    Fixes: b189817cf789 ("crypto: caam/qi - add ablkcipher and authenc algorithms")
    Fixes: b189817cf789 ("crypto: caam/qi - add ablkcipher and authenc algorithms")
    Fixes: b189817cf789 ("crypto: caam/qi - add ablkcipher and authenc algorithms")
    Fixes: b189817cf789 ("crypto: caam/qi - add ablkcipher and authenc algorithms")
    Fixes: b189817cf7894 ("crypto: caam/qi - add ablkcipher and authenc algorithms")
    implementations that should be used by other virtio crypto algorithms
    (e.g. asymmetric crypto algorithms) introduce symmetric crypto algorithms
    other virtio crypto algorithms.
    crypto: brcm - Fix SHA3-512 algorithm failure
    failure of SHA3-512 algorithm. This patch fixes the same.
    (a) Change struct hfa384x_authenticate_station_data status, algorithm members type to __le16.
    (b) Change struct hfa384x_auth_request algorithm member type to __le16.
     - Correct cpu cross-call algorithm to correctly detect stalled or stuck
    1-Wire bus have very fast algorith for exchange with single slave
    Fixed by changing the BINDER_WORK_NODE algorithm in
    The scaling algorithm used for KNL is performance-based, but it still
    bfq: fix typos in comments about B-WF2Q+ algorithm
    This patch therefore changes the fallback algorithm so that in the
    tables will only double instead of quadrupling as well.  This algorithm
    swap cluster for a THP.  A fair simple algorithm is used for swap
    There is a bug in this code path where the algorithm considers all active
    load_balance() runs as that algorithm intends.
    x86/mm: Track the TLB's tlb_gen and update the flushing algorithm
         selection algorithm is in use by making it avoid registering
    lightnvm: pblk: redesign GC algorithm
    to the default mapping algorithm.
    This patch generalizes the erase path so that other mapping algorithms
    fscrypt provides facilities to use different encryption algorithms which
    attacks, IVs are generated using the ESSIV algorithm. While AES-CBC is
    Currently the irq vector spread algorithm is restricted to online CPUs,
    IMA uses the hash algorithm too early to be able to use a module.
    Require the selected hash algorithm to be built-in.
      Revert "drm/i915/skl: New ddb allocation algorithm"
    crypto: cavium - Add more algorithms
    Add more algorithm support for the driver.
    crypto: cavium - Remove the individual encrypt/decrypt function for each algorithm
    Remove the individual encrypt/decrypt function for easch algorithm.
    This is in prepration of adding more crypto algorithms supported by
    for the AEAD algorithms.
    algorithms it's longer still.  Extend the max keysize for the
    Fixes: 357fb60502ede ("crypto: talitos - add sha224, sha384 and sha512 to existing AEAD algorithms")
    libnvdimm, label: add v1.2 interleave-set-cookie algorithm
    The interleave-set-cookie algorithm is extended to incorporate all the
    corrected by FEC correction algorithm or that FEC algorithm was
    Revert "drm/i915/skl: New ddb allocation algorithm"
    New ddb allocation algorithm is a show stopper on my SKL system.
    Fixes: bb9d85f6e9de ("drm/i915/skl: New ddb allocation algorithm")
    to the same peer, thereby shortcutting the slow-start algorithm.
        update wrpll computation algorithm (Paulo)
    Move Switch code to new dmswitch.c file. Also improves algorithm to
       - Don't put data for the crypto algorithms to use on the stack.
    Each iteration of the algorithm, DIM calculates the difference in
    indication to the algorithm and might result in a wrong decision.
    crypto: cavium - Register the CNN55XX supported crypto algorithms.
    Register the Symmetric crypto algorithms supported by
    The following Symmetric crypto algorithms are supported,
    algorithm implementations check if the key was set and then return
    akcipher algorithm implementations will remove the check if key is not NULL
    setting the key for the transformation. kpp algorithm implementations
    kpp algorithm implementations will remove the check if key is not NULL
    hmac(sah1) algorithms.
    the algorithm itself, causing conflicts when used with multiple cores.
    it by rejecting hash algorithms with a digest size of 0.
    This patch adds the documentation about the GRUB reclaiming algorithm,
    reclaiming: using the traditional GRUB algorithm, if tasks are
    the GRUB algorithm).
    reclaiming algorithm, the runtime is not decreased as "dq = -dt",
    This patch implements a more theoretically sound algorithm for
    "Inactive" task state of the GRUB algorithm) to decrease the
    I'm planning a rework of the TLB flush algorithm that will require
    initram compression algorithm") introduced the possibility to select the
    initramfs compression algorithm from Kconfig and while this is a nice
    initram compression algorithm") is problematic because
    Fixes: db2aa7fd15e8 ("initramfs: allow again choice of the embedded initram compression algorithm")
    The code uses enable_kernel_altivec() around the core of the algorithm, however
    drm/i915/skl: New ddb allocation algorithm
    This patch implements new DDB allocation algorithm as per HW team
    ASoC: wm_adsp: Fix typo in algorithm list warning message
    algorithm (which nobody is currently using in kernel, btw) accounts
    Currently, we need to parse the packet headers to understand what algorithm
    algorithm needed to resolve CHECKSUM_PARTIAL.
    skb->csum_not_inet carries the indication on which algorithm is needed to
    generic gcm(aes) crypto algorithm.
    This is required to implement new DDB allocation algorithm.
    ddb algorithm related changes in later patch in series.
    algorithm to do only algo related changes.
    user-space API to access crypto algorithms and devices (not only RNG).
    user-space API to access crypto algorithms and devices (not only RNG).
    controller provides ECC algorithms that are not strong enough for the
    ECC algorithm.
    mtd: nand: davinci: set ECC algorithm explicitly for HW based ECC
    If ECC strength is 4bits/512bytes the algorithm of the ECC engine is
    timestamps used by GC algorithm including the segment mtime timestamps.
    control algorithm.
       - I also reworked the entire truncate/delete algorithm, scrapping the
         old recursive algorithm in favor of a new non-recursive algorithm.
    The current algorithm for generating sub-context IDs is FILO.  If the
    Update the sub-context ID assign algorithm to use a bitmask of in_use
    contexts.  The new algorithm will allow the contexts to be closed in any
       access to off-CPU algorithm providers, which should reduce CPU
       - Extend algorithm name limit to 128 bytes
         and make it use the load-based P-state selection algorithm on a
       using a scalable token based algorithm that throttles IO based on
    IB/rxe: fix typo: "algorithmi" -> "algorithm"
    that when cc algorithm is changed, ca_priv data is cleared out as well.
    algorithm on this socket.
    CPU based algorithm providers and rules out the use of off CPU
    algorithm providers which are normally asynchronous by nature,
    Add scomp backend for zlib-deflate compression algorithm.
    6) Change ESP to use a synchronous crypto algorithm on
    Note that the readers use the same algorithm as before.  Note that there
    (proportional-share) scheduling algorithm, enriched with several
    1. Main algorithm: handles the interaction with the kernel, and
    2. Scheduling engine (Hierarchical B-WF2Q+ scheduling algorithm):
    The feedback-loop algorithm used by BFQ to compute queue (process)
          updates queue budgets with a simple feedback-loop algorithm that
          the in-service queue expires, this algorithm computes the next
    Implement truncate/delete as a non-recursive algorithm. The older
    algorithm was implemented with recursion to strip off each layer
    this commit helps reduce risk by allowing the old v4.11 SRCU algorithm
    algorithms, in order to help get these the testing that they need.
    to revert back to the old classic SRCU algorithm.
    Initialize the pointer to array[0] and change the algorithm from
    esp: Use a synchronous crypto algorithm on offloading.
    We need a fallback algorithm for crypto offloading to a NIC.
    interrupt information table. This algorithm is wasteful and does not scale
    crypto: api - Extend algorithm name limit to 128 bytes
    length limit on the algorithm name, e.g., with
    crypto: af_alg - Allow arbitrarily long algorithm names
    of the algorithm name through bind(2).  The address length can
    algorithm that make use of the STMicroelectronics STM32 crypto hardware.
    Theses algorithms are compatible with the little-endian generic ones.
    Both algorithms use ~0 as default seed (key).
    to the crc32c-generic algorithm.
    Fixes: 8c419778ab57e ("crypto: caam - add support for RSA algorithm")
    The algorithm may fail to assign some vectors to any CPUs if a node's
    The algorithm for sending data to the TPM is mostly identical to the
    algorithm for receiving data from the TPM, so a single function is
    load modules for things like crypto algorithms that are implemented
    LPM algorithm which differ in hardware implementation from the
    cose of data segments in greedy algorithm.
    or not the PID-based P-state selection algorithm is in use.
    PID-based algorithm does not need to take IO-wait boosting into
    P-state selection algorithm and the PID-based "powersave" P-state
    selection algorithm and modify the driver initialization to
    The P-state selection algorithm used by intel_pstate for Atom
    upgrade/downgrade decision. And the new algorithm can detect completely
    Please note this will be replaced with a more sophisticated algorithm
    modes (combination of encryption algorithm and authenticator) because
    this is how the kernel crypto API accesses such algorithms.
    To simplify the interface, we accept an algorithm directly in crypto API
    Authenticated encryption algorithms can be of two types, either native
    specification of encryption algorithm and authenticator.
    HMAC algorithm and retrieve digest size from it.
    crypto: caam/qi - add ablkcipher and authenc algorithms
    Add support to submit ablkcipher and authenc algorithms
    Accordingly, for now all caam/qi algorithms (caamalg_qi module) are
    crypto: powerpc - Factor out the core CRC vpmsum algorithm
    The core nuts and bolts of the crc32c vpmsum algorithm will
    also work for a number of other CRC algorithms with different
    and then #includes the core algorithm file.
    In the generic XTS and LRW algorithms, for input data > 128 bytes, a
    be used as a fallback --- resulting in more calls to the ECB algorithm,
    "powersave" P-state selection algorithm based on CPU load in the
    algorithm for the active mode "powersave" policy with them.
         algorithm advances the PCBC state.
    It just happens that cat /proc/pid/maps support uses a O(N^2) algorithm to
    algorithm.
    b) RX and TX scheduling algorithms programming
    b) TX queues weight programming (essential in weightes algorithms)
    net: stmmac: configure mtl rx and tx algorithms
    This patch adds the RX and TX scheduling algorithms programming.
    - Document the reading algorithm.
    When requesting a fallback algorithm, we should propagate the
    NEED_FALLBACK bit when search for the underlying algorithm.
    When requesting a fallback algorithm, we should propagate the
    NEED_FALLBACK bit when search for the underlying algorithm.
      drm/nouveau/kms/nv50: use drm core i2c-over-aux algorithm
    This commit reworks the RAM detection algorithm, using RAM-per-LTC to
    using RAM-per-FBPA.  I'm not certain the algorithm is perfect, but it
    drm/nouveau/kms/nv50: use drm core i2c-over-aux algorithm
    If the current P-state selection algorithm is set to "performance"
    switching the P-state selection algorithm to "performance" causes
    active mode if the "performance" P-state selection algorithm is
    the "performance" P-state selection algorithm and one for the
    "powersave"  P-state selection algorithm, but the P-state selection
    algorithms are set per policy, so the global limits cannot reflect
    for a CPU with the "powersave"  P-state selection algorithm
    The gateway selection class variable is shared between different algorithm
    versions. But the interpretation of the content is algorithm specific. The
    initialization is therefore also algorithm specific.
    'ranges' property parsing algorithm with a hack to treat a missing
    For testing changes to the iset cookie algorithm we need a value that is
    When we're used as a fallback algorithm, we should propagate
      i2c: busses: constify i2c_algorithm structures
    LZ4 v1.7.3 allowing to use the fast compression algorithm aka LZ4 fast
    algorithm.
    I tested several algorithms (see code in previous patch mails)
    in the checksums tree, and currently the algorithm to delete them starts
    For foreground gc, greedy algorithm should be adapted, which makes
    first, these victims are selected by cost-benefit algorithm, we can't guarantee
       - Add time-invariant AES algorithm
       - Add standalone CBCMAC algorithm
      crypto: caam - don't dma_map key for hash algorithms
          recovery instead of just assisting after other algorithms have
       - SRCU updates: Simplify algorithm, add formal verification
      ACPICA: Hardware: Sort access bit width algorithm
    The solution is a lockless-like algorithm in I/O barrier code, and only
       simpler barrier algorithm and implementation.
    enough that the xfs_bmap_split_indlen() algorithm completely drains the
    The CCM driver was recently updated to defer the MAC part of the algorithm
    Fix this by performing mapping / unmapping only in crypto algorithm's
    crypto: caam - don't dma_map key for hash algorithms
    Shared descriptors for hash algorithms are small enough
    fast path did not work as expected.  Patch 0013 describes new algorithm
    For crypto_xor(), an algorithm is implemented that simply runs through
    whirlpool hash algorithm:
    algorithm, which is slow and not time invariant. So add a CBCMAC
    Also, given how these algorithms mostly only differ in the way the key
    algorithms as well based on the same core update code.
    driver into a separate algorithm, define some test cases for the
    For network facing algorithms such as CTR, CCM or GCM, this presents a
    SIMD algorithms that don't rely on table lookups.
    that don't care about alignment for software algorithms such as this
    positives because of the unfairness of the locking algorithm itself.
    i2c: busses: constify i2c_algorithm structures
    Declare i2c_algorithm structures as const as they are only stored in the
    i2c_algorithm structures having this property can be made const too.
    Instead of open coding the CMAC algorithm in the mac80211 driver using
      algorithms are especially vulnerable, given that their plaintext is not
      on SIMD algorithms), but may incur a setup cost that is prohibitive when
       and to use synchronous algorithms
    As an initial implementation, L-sort algorithm is used. It is quite
    trivial. More advanced algorithm called P-sort will be introduced as a
    Fixes: 5ca4c20cfd37 ("keys, trusted: select hash algorithm for TPM2 chips")
    The algorithm for counting freeable objects in the lu_cache shrinker
    the misalignment in the core algorithm than relying on the crypto API to
    the misalignment in the core algorithm than relying on the crypto API to
    the misalignment in the core algorithm than relying on the crypto API to
    the misalignment in the core algorithm than relying on the crypto API to
    the misalignment in the core algorithm than relying on the crypto API to
    This patch adds support to the hmac(shaX) algorithms.
    the algorithm bitfield of the SHA_MR register could simply be set with:
      unloads and then reloads an algorithm"
     - SRCU updates: Simplify algorithm, add formal verification
    Use dev_dbg() to tell about the progress of the graph traversal algorithm.
    This is intended to make debugging of the algorithm easier.
      algorithms for the conversion from "ADC value" to temperature.
    This patch set adds a longest prefix match algorithm that can be used
    This trie implements a longest prefix match algorithm that can be used
    the algorithm registration. This fixes qat-dh registration when
    - Added new pll algorithm
    algorithms, but there are some weird cases where it can trigger when
     ("KVM: nVMX: Add nested msr load/restore algorithm").]
      by FEC correction algorithm or that FEC was not active on this interface.
    [173.296931] usb usb6: We don't know the algorithms for LPM for this host, disabling LPM.
    of that register to value that correspond rate control algorithm number
    other algorithms (e.g., FACK). By inspecting packet timestamps,
    After this change, Linux's loss recovery algorithms consist of
       started by other algorithms.
    This patch does not change the RACK algorithm itself. It only adds
    crypto: virtio - adjust priority of algorithm
    virtio-crypto's algorithm, make it's higher than software
    algorithm. This code is heavily based on Andy Polyakov's OpenSSL version
    optimized algorithm selection with the normal one that all other drivers
    something like Nagle's algorithm (absence of TCP_NODELAY) is optional and
    Fixes: 35e669e1a254 ("initramfs: select builtin initram compression algorithm on KConfig instead of Makefile")
         this is varied by the slow-start algorithm.
    This mechanism is prone to starvation, because the wakeup algorithm is
    ACPICA: Hardware: Sort access bit width algorithm
    In some cases, SIMD algorithms can only perform optimally when
    especially true for bit slicing algorithms, which typically take
    parallel. However, other SIMD algorithms may benefit as well from
    So add a walksize attribute to the skcipher algorithm definition, and
    - SHA1 and SHA2 family(HMAC) hash algorithms.
     "A fix for the irq affinity spread algorithm so it handles non linear
    symmetric algorithms and will control some advanced features
    Problem is that the algorithm of retrieving the nodemask iterates
    If this is the case, the algorithm lead to a wrong node count number
    initramfs: allow again choice of the embedded initram compression algorithm
    choose the supported RD compression algorithms by the kernel and a user
    simplify the way in which the algorithm is chosen and keep backwards
    initramfs: select builtin initram compression algorithm on KConfig instead of Makefile
    Move the current builtin initram compression algorithm selection from
    deciding algorithm precedence easier and would allow for overrides if
    new algorithms want to be tested.
    The adapter/domain selection algorithm now considers the completed
         algorithm based on CPU load on platforms with the system profile in
    The last_psn algorithm fails in the zero-byte case: it calculates
      PCI: Speed up algorithm in pci_bridge_d3_update()
    features in the MAC.  The algorithm is:
       - Prevent mcryptd from being used with incompatible algorithms which
      crypto: mcryptd - Check mcryptd algorithm compatibility
    algorithm without a loop which should even be quicker to execute apart
    It is possible to provide hints to the HWP algorithms in the processor
    basis of calculation algorithm is borrowed from
    This is a combination of the the Intel algorithm implemented using SSE
    The PMULL/NEON algorithm is faster, but operates on blocks of at least
    This is a combination of the the Intel algorithm implemented using SSE
    The PMULL/NEON algorithm is faster, but operates on blocks of at least
    This is a transliteration of the Intel algorithm implemented
    This is a transliteration of the Intel algorithm implemented
    crypto: mcryptd - Check mcryptd algorithm compatibility
    But such algorithms must be used internally and not be exposed.
    We added a check to enforce that only internal algorithms are allowed
    with mcryptd at the time mcryptd is spawning an algorithm.
    round robin algorithm.
    The toptree algorithm uses the physical core ids to create a mapping
    staging: lustre: clio: revise read ahead algorithm
    efficient evict algorithms for softpin.
      8161239a8bcc ("rtmutex: Simplify PI algorithm and make highest prio task get lock")
    Fixes: db57656b0072 ("crypto: caam - group algorithm related params")
    svcrdma's current SQ accounting algorithm takes sc_lock and disables
    The algorithm used is very simple: We use iomap_apply to iterate over
    For authenc / stitched AEAD algorithms, check independently
    For the other algorithms, compute only once per tfm the remaining
    crypto: caam - remove superfluous alg_op algorithm param
    crypto: caam - group algorithm related params
    struct alginfo is introduced to group the algorithm related
    crypto: testmgr - Do not test internal algorithms
    Currently we manually filter out internal algorithms using a list
    in testmgr.  This is dangerous as internal algorithms cannot be
    interface with skcipher, and also presents the top-level algorithm
    internal algorithms.
    can also be used for AEAD algorithms.
    * The core SHA algorithm is fundamentally sequential, but there is a
      only implements this part of the algorithm using NEON instructions,
    doesn't support the new algorithm. The default flow control window,
    will be generated based on station kickout algorithm. As of now mac80211
     1) Clear congestion control state when changing algorithms on an
      tcp: zero ca_priv area when switching cc algorithms
    highspeed, illinois, scalable, veno and yeah congestion control algorithms
    these algorithms do not halve the slowstart threshold. This causes similar
    It seems more appropriate to let congctl algorithms pair .ssthresh
    up for all congestion algorithms that used to rely on the fallback.
    tcp: add cwnd_undo functions to various tcp cc algorithms
    congestion control algorithms that do not halve cwnd in their .ssthresh
    A followup patch will remove the fallback and all algorithms will
    tcp: zero ca_priv area when switching cc algorithms
    connection to different algorithm (TCP_CONGESTION setsockopt).
    triggers a bug when used with an shash algorithm whereby it will
    These are the PPC optimised versions of various crypto algorithms, so we
    PCI: Speed up algorithm in pci_bridge_d3_update()
    The most naive algorithm would be to iterate over the bridge's children and
    The algorithm can be optimized further by taking into account if D3 is
    gratuitously call pci_walk_bus().  Speed up the algorithm by adding these
    The algorithm to update the flag indicating whether a bridge may go to D3
    vectors of the spread area are not included into the spread algorithm and
    cpufreq: intel_pstate: Use CPU load based algorithm for PM_MOBILE
    cpu bound workloads. The current algorithm tend to over provision in this
    don't know how often keys will be changed, new algorithms are unlikely
    The algorithm for when to throttle takes its inspiration in the
    CoDel networking scheduling algorithm. Like CoDel, blk-wb monitors
     - Add comments for HMAC computation algorithm
                the control plane part. Two hashing algorithms are supported
                additional algorithms can be easily supported by simply adding an
    to associate a given HMAC key identifier with an hashing algorithm
    of an SR-enabled packet. Two HMAC algorithms are supported: hmac(sha1) and
    algorithm can take this quirks into account.
    The algorithm used by blk_mq_quiesce_queue() is as follows:
    This change avoids a very complex and inefficient algorithm which
    similar to cubic and other algorithms.
    Fixes: e3118e8359bb7c ("net: tcp: add DCTCP congestion control algorithm")
    This defines authentication algorithms for FILS (IEEE 802.11ai).
    generic AUTH_DATA can now be used with other authentication algorithms
    Add tests to the test manager for algorithms exposed through acomp.
    Add scomp backend for deflate compression algorithm.
    Add scomp backend for 842 compression algorithm.
    Add scomp backend for lz4hc compression algorithm.
    Add scomp backend for lz4 compression algorithm.
    Add scomp backend for lzo compression algorithm.
    expose the already present compression algorithms in LKCF via acomp.
    - create a table for hash algorithm to be used;
    useful format for image segmentation algorithms.
    Fixes: b913a6404ce2 ("arm64/crypto: improve performance of GHASH algorithm")
    which causes the algorithm to fail when built for big endian. In
    This patch adds the xts(aes) algorithm, which is supported from
    algorithm.
      4.8, a rework of the intel_pstate algorithm used on Atom processors
       - Rework the intel_pstate's P-state selection algorithm used on Atom
      cpufreq: intel_pstate: Proportional algorithm for Atom
      cpufreq: intel_pstate: Proportional algorithm for Atom
    between the available frequencies and broke the algorithm by
    cpufreq: intel_pstate: Proportional algorithm for Atom
    The PID algorithm used by the intel_pstate driver tends to drive
    "proportional" algorithm on Atom.
    The new algorithm will set the new P-state to be 1.25 times the
    particularly around the lockless receive algorithm.
      crypto: omap-sham - align algorithms on word offset
    algorithm has been configured. (The ndo_select_queue() entry point makes
    sure the hash is not set if no algorithm is configured, but this entry
       - new AVX512 instruction based raid6 gen/recovery algorithm
       module load time, to get rid of the O(n^2) algorithm that results in
    Due to the way the CoW algorithm in XFS works, there's an interval
    backoff algorithm: the GLS response should be received in the
      cpufreq: intel_pstate: Use IOWAIT flag in Atom algorithm
      cpufreq: intel_pstate: Use IOWAIT flag in Atom algorithm
    Currently, a single hash algorithm is used to hash the auth_cred for
    different compression algorithms. This patch converts the wrapper to use
    this new API, but does not add support for using new algorithms.
    Most architectures allow the compression algorithm used to produced the
    for supporting algorithms other than gzip in the powerpc boot wrapper
    And the spec recommends the below algorithm to read data 3 consecutive
    tracepoint is added to log the state of the congestion management algorithm
    by using a better matching algorithms.
    by the retransmission algorithm - which may see a completely random
    If the retransmission algorithm sees such a timestamp, it may retransmit
    the packet and, in future, tell the congestion management algorithm that
    rxrpc: Preparation for slow-start algorithm [ver #2]
    for ahash algorithms, and must be changed towards more scatterlist
    crypto: omap-sham - align algorithms on word offset
    3) Fix an old memory leak on aead algorithm usage.
    tcp: BBR congestion control algorithm
    This patch series implements a new TCP congestion control algorithm:
    This commit implements a new TCP congestion control algorithm: BBR
    congestion control algorithm that reacts to actual congestion, not
    Our long-term goal is to improve the congestion control algorithms
    algorithm) during CA_Recovery to control the cwnd and sending rate
    For some congestion control algorithms, like the upcoming BBR module,
    algorithm as one of the ingredients in their own decision about TSO sizing:
    policer bandwidth estimation algorithm.
    The BBR policer detection algorithm cannot simply track retransmits,
    [media] constify i2c_algorithm structures
    These i2c_algorithm structures are only stored in the alg field of an
    static struct i2c_algorithm i@p = { ... };
     struct i2c_algorithm i = { ... };
    The partition algorithm needs to determine the capabilities of each
    processed by the algorithm.
    xfrm: Fix memory leak of aead algorithm name
    commit 1a6509d99122 ("[IPSEC]: Add support for combined mode algorithms")
    introduced aead. The function attach_aead kmemdup()s the algorithm
    This patch adds a kfree() call for the aead algorithm name.
    Fixes: 1a6509d99122 ("[IPSEC]: Add support for combined mode algorithms")
     * debugfs improvement for the integrated codel algorithm
    rxrpc: Fix retransmission algorithm
    Make the retransmission algorithm use for-loops instead of do-loops and
    drivers: clk: st: Add fs660c32 synthesizer algorithm
    Use an algorithm instead of a table to compute clocks for fs660c32
    algorithm, offloaded to firmware for triggering station kickout. In case
    cpufreq: intel_pstate: Use IOWAIT flag in Atom algorithm
    Modify the P-state selection algorithm for Atom processors to use
    The crypto engine must be initialized before registering algorithms,
    The crypto engine must be initialized before registering algorithms,
    but the software fallback algorithm generates its own, causing wrong
    hash value can't be imported to the software fallback algorithm. Otherwise
    is invoked at module load time, to get rid of the O(n^2) algorithm
    Ensure that we conform to the algorithm described in RFC5661, section
    namespace EC), we need to change our EC device alloc/free algorithm, ensure
    to misidentify it as an algorithm that requires testing at boottime.
    switch to hardware algorithm, as the tuners used on such
      accelerated AED algorithms as well as an older regression in the
    When we call symbol__fixup_duplicate() we use algorithms to pick the
    The algorithms used to prune aliases in symbols__fixup_duplicate() uses
    For algorithms that implement IV generators before the crypto ops,
    The algorithm that extracts the version number of the utility being
    algorithm in question to a function, which makes the script easier to
    algorithm, but we can greatly simplify this by
    the same symbol, using a O(n^2) algorithm. However, it does not take
    The aes and the des module register multiple crypto algorithms
    an array with pointers to the successfully registered algorithms
    raid6: using algorithm vx128x8 gen() 19705 MB/s
    vs the software algorithms:
    raid6: using algorithm int64x4 gen() 5392 MB/s
    them into the algorithm struct and get rid of the define.
    the following algorithm:
        * routing algorithm list
    The workqueue "fg_wq" is used for running the FG algorithm periodically.
    The workqueue "chargalg_wq" is used for running the charging algorithm.
    RC algorithm if it exists, for path metric calculations.
    HW RC algorithm if it exists or via parameters collected
    to any algorithm that has a setkey method.  However, the non-HMAC
    algorithms are not keyed, so setting a key is unnecessary.
    algorithms.
    algorithms.
    Now that the GW-mode code is algorithm specific, batman-adv expects the
    routing algorithm to implement some APIs to make it work.
    However, such APIs are not mandatory, therefore we might have algorithms
    batman-adv: make the GW selection class algorithm specific
    The B.A.T.M.A.N. V algorithm uses a different metric compared to its
    fed to this logic has a semantics that depends on the algorithm being
    routing algorithm specific. Each algorithm can now parse (and print)
    If no API is provided by any algorithm, the default is to use the
    have to also be marked to give an implementor of an algorithm the correct
    leading to errors when echainiv(authenc(...)) algorithms are used:
    Fixes: 53964b9ee63b7075 ("crypto: sha3 - Add SHA-3 hash algorithm")
    Fixes: f848dbd3bc1a ("s390/crc32-vx: add crypto API module for optimized CRC-32 algorithms")
    complexity of the algorithm stays within the same order.
    [ dchinner: Note that this algorithm and code was derived from the
    channel tuning algorithm instead of every iteration due to incorrect
    QSFP status in the channel tuning algorithm.
    plug-in and power up. This causes the SerDes and QSFP tuning algorithm
    IB/hfi1: Refine user process affinity algorithm
    algorithm doesn't take into account multiple HFI units. Also, real
    recommendation algorithm is used:
    However due to logic/algorithm bugs (such as the one fixed by the patch
    allowing us to easialy and deterministically catch such algorithmic/logic
      normalization algorithm
    compaction algorithm, SLUB fallback to 0-order page, reserved memory,
    it cannot be migrated with current compaction algorithm which supports
    zram: add more compression algorithms
    Add "deflate", "lz4hc", "842" algorithms to the list of known
    compression backends.  The real availability of those algorithms,
    [sergey.senozhatsky@gmail.com: zram-add-more-compression-algorithms-v3]
    There is no way to get a string with all the crypto comp algorithms
    algorithm that is recognized by the crypto comp engine.  Relying on
    store all the compression algorithms names in zcomp's `backends' array,
    list of compression algorithms that can be used.
      zram's `comp_algorithm' lists it:
     cat /sys/block/zram0/comp_algorithm
    function which attempts to insmod the requested compression algorithm to
    fact that crypto API compression algorithms require a compression stream
    ops, while in reality only several of compression algorithms really need
    are free to use compression algorithms that require compression stream for
    `static' data and the following crypto comp algorithms:
     - test running time (which can tell us what algorithms performs faster)
    threshold to activate the new link monitoring algorithm.
      crypto: testmgr - Print akcipher algorithm name
    crypto: testmgr - Print akcipher algorithm name
    When an akcipher test fails, we don't know which algorithm failed
    when the user asks for a async algorithm.  This shouldn't be a
    This patch adds a chunk size parameter to aead algorithms, just
    like the chunk size for skcipher algorithms.
    This patch allows skcipher algorithms and instances to be created
    algorithms and instances.
    Most of the data is shared with CLOCK_MONOTONIC, and the algorithm is
    gettimeofday along the way) while keeping exactly the same algorithms.
    "saves quite some unnecessary scanning work". The algorithm used prior
    If this algorithm is found to significantly impact boot time or cause
    Fix the algorithm to start the search at 1 page.
    Some users observed that "least connection" distribution algorithm doesn't
    This is because the algorithm counts active connection as worth 256
    to engage in bucket stuffing, given knowledge of the hash algorithm.
    Support it. Future patches will added the required algorithms.
    crypto: caam - add support for RSA algorithm
    the primary hardif; routing algorithm; batman-adv version).
    algorithm the same as the one current used by blk-mq, but improvements
    to potentially handle other akcipher algorithms.
    now look up the algorithm after we allocate the instance object.
    with other algorithm implementations.
    Add a new mode to calculate the speed of the sha512_mb algorithm
    belonging to SHA512 crypto jobs to the SHA512 multibuffer algorithm.
    using the SHA512 multi-buffer algorithm.
    multi-buffer algorithm. It also contains the flush routine that's called
    The SHA512 multi-buffer crypto algorithm is defined and initialized in this
    Until now, there was only support for the SHA1 multibuffer algorithm.
    the SHA256 multi-buffer algorithm , it is logical to name the existing
    crypto: tcrypt - Add speed tests for SHA multibuffer algorithms
    The existing test suite to calculate the speed of the SHA algorithms
    multibuffer algorithms, we work on 8 lanes of data in parallel. Hence,
    algorithms.
    belonging to SHA256 crypto jobs to the SHA256 multibuffer algorithm. It
    SHA256 multi-buffer algorithm.
    multi-buffer algorithm. It also contains the flush routine to that's
    The SHA256 multi-buffer crypto algorithm is defined and initialized in
    CKS on/off voltage offset calculation algorithm takes in a few coefficients.
    Herbert wants the sha1-mb algorithm to have an async implementation:
    Currently, sha1-mb uses an async interface for the outer algorithm
    and a sync interface for the inner algorithm. This patch introduces
    a async interface for even the inner algorithm.
    caching algorithm so that it does not clear the cache on out-of-order
    Current algorithm does not met this requirement, so that the
    This patch fixes the algorithm and simplifies the code, reducing
    it to struct timespec first. The algorithm is ok, but we want to
    Added support for SHA-3 algorithm test's
    crypto: sha3 - Add SHA-3 hash algorithm
    This patch adds the implementation of SHA3 algorithm
    won't render a booting platform, since the AUTO_ZRELADDR algorithm still
    The credit return threshold adjustment on mtu change algorithm does not
    This patch changes the algorithm to minimize the sample point error, too. Now a
    The algorithm for checksum neutral mapping is incorrect. This problem
    Corrected algorithm:
    and new matching algorithmn to decide which link layer address will be
    This commit introduces a framework and an algorithm that drastically
    failure detection times across the whole cluster. Using this algorithm,
      known neighbors, based on their TIPC node identity. This algorithm
      new algorithm through configuration. We do this by keeping a threshold
      the new algorithm is effectively disabled. A patch set for altering the
    s390/crc32-vx: add crypto API module for optimized CRC-32 algorithms
       algorithms) we have to provide additional interfaces to query or
    it is an Atom platform, which requires more power optimized algorithm.
    So the P state selection will use similar algorithm as other Atom
    The FW expect the driver to set the encryption algorithm type when
    Currently when installing CMAC IGTK key we don't set the algorithm type
    algorithms which requires a little more
    crypto: omap-aes - Fix registration of algorithms
    algorithms if already registered (i.e. in case we have two AES cores
      algorithm        | block size [b] | average speed [MB/s] |
    algorithm.
    The firmware and the host may implement an algorithm to aggregate
    Designing H8-specific hash algorithms to work around that is a separate
    Shift-add chain found by Yevgen Voronenko's Hcub algorithm at
    One of the algorithms which comes closest is Yann Collet's xxHash, but
    algorithm.  It makes two calls to hash_32() instead.
         recommendations for describing NAND ECC algorithms"
    The algorithm that updates i_fragtree relies on that the frag tree
       - Introduction of the "ECC algorithm" concept, to avoid overloading
      mtd: brcmnand: respect ECC algorithm set by NAND subsystem
      mtd: nand: read ECC algorithm from the new field
      mtd: nand: fsmc: validate ECC setup by checking algorithm directly
      mtd: nand: set ECC algorithm to Hamming on fallback
      staging: mt29f_spinand: set ECC algorithm explicitly
      CRIS v32: nand: set ECC algorithm explicitly
      mtd: nand: atmel: set ECC algorithm explicitly
      mtd: nand: davinci: set ECC algorithm explicitly
      mtd: nand: bf5xx: set ECC algorithm explicitly
      lib/GCD.c: use binary GCD algorithm instead of Euclidean
    lib/GCD.c: use binary GCD algorithm instead of Euclidean
    The binary GCD algorithm is based on the following facts:
    algorithm runs about 25% faster (80% the execution time) than the
    division-based Euclidian algorithm.
    aging algorithm.  IOW, we cannot reduce minor faults on those
    connection arbitration algorithm has converged: the incoming
    algorithm has converged, the incoming SYN should not needlessly
    new B.A.T.M.A.N. V algorithm. These are the fixes we came up with
       - Reenable talitos hash algorithms.
      crypto: talitos - fix ahash algorithms registration
    We should judge the table.id[mid].code insearch algorithm on matter the
    tuning algorithm, preventing us from bringing the link up.
    the algorithm we use today (i.e., we have enough DDB blocks on BXT to
      2) in_pkts counter (used by drop_entry algorithm) is not incremented
      mtd: brcmnand: respect ECC algorithm set by NAND subsystem
      mtd: nand: read ECC algorithm from the new field
      mtd: nand: fsmc: validate ECC setup by checking algorithm directly
      mtd: nand: set ECC algorithm to Hamming on fallback
      staging: mt29f_spinand: set ECC algorithm explicitly
      CRIS v32: nand: set ECC algorithm explicitly
      mtd: nand: atmel: set ECC algorithm explicitly
      mtd: nand: davinci: set ECC algorithm explicitly
      mtd: nand: bf5xx: set ECC algorithm explicitly
    mtd: brcmnand: respect ECC algorithm set by NAND subsystem
    1-bit ECC algorithm is specified without a corresponding algorithm
    So far it was only possible to specify ECC algorithm using "soft" and
    about ECC algorithm we may also add support for this new DT property.
    algorithm not a mode. We successfully managed to introduce new "algo"
    treating "soft_bch" value as the one setting Hamming algorithm, it's
    mtd: nand: read ECC algorithm from the new field
    mtd: nand: fsmc: validate ECC setup by checking algorithm directly
    NAND core sets ECC algorithm in algo field now and it should be
    mtd: nand: set ECC algorithm to Hamming on fallback
    staging: mt29f_spinand: set ECC algorithm explicitly
    CRIS v32: nand: set ECC algorithm explicitly
    mtd: nand: atmel: set ECC algorithm explicitly
    mtd: nand: davinci: set ECC algorithm explicitly
    mtd: nand: bf5xx: set ECC algorithm explicitly
    mtd: nand: fsl_elbc: set ECC algorithm explicitly
    mtd: nand: fsl_ifc: set ECC algorithm explicitly
    mtd: nand: fsl_upm: set ECC algorithm explicitly
    mtd: nand: cmx270: set ECC algorithm explicitly
    mtd: nand: mpc5121_nfc: set ECC algorithm explicitly
    mtd: nand: au1550nd: set ECC algorithm explicitly
    mtd: nand: sh_flctl: set ECC algorithm explicitly
    mtd: nand: s3c2410: set ECC algorithm explicitly
    mtd: nand: omap2: set ECC algorithm explicitly
    Currently, this algorithm is message based. A counter in the receiving
    This commit introduces an algorithm where we instead use 1024-byte
    which explicitly allows each algorithm to perform any needed operation
    The pre-LNI SerDes and channel tuning algorithm already checks for
    active and optical channel tuning algorithm.
    of which are related to the cache eviction algorithm. One way
    possible for the eviction algorithm to evict the current node,
    algorithm from finding it.
    search algorithm not properly finding the all RB nodes
    crypto: talitos - fix ahash algorithms registration
    reason for it is that the routing algorithm BATMAN_V was selected and
      Input: pmic8xxx-pwrkey - fix algorithm for converting trigger delay
    AEAD algorithms crash in talitos_cra_init as follows:
    mtd: nand: socrates: set ECC algorithm explicitly
    mtd: nand: plat: set ECC algorithm explicitly
    mtd: nand: pasemi: set ECC algorithm explicitly
    mtd: nand: orion: set ECC algorithm explicitly
    mtd: nand: nuc900: set ECC algorithm explicitly
    mtd: nand: mxc: set ECC algorithm explicitly
    mtd: nand: gpio: set ECC algorithm explicitly
    mtd: nand: ams-delta: set ECC algorithm explicitly
    mtd: nand: nandsim: set ECC algorithm explicitly
    mtd: nand: set ECC algorithm in nand_dt_init
    mtd: nand: add new enum for storing ECC algorithm
    This enum should store ECC mode only and putting algorithm details there
    possibilities like setting ECC algorithm for hardware ECC mode.
    algorithms originated by Dr. Cliff Click:
    hwmon: (fam15h_power) Add documentation for TDP and accumulated power algorithm
    and accumulated power algorithm.
    hwmon: (fam15h_power) Introduce a cpu accumulated power reporting algorithm
    This patch introduces an algorithm that computes the average power by
    The new MACsec driver uses the AES crypto algorithm, but can be configured
    Input: pmic8xxx-pwrkey - fix algorithm for converting trigger delay
    The trigger delay algorithm that converts from microseconds to
    algorithm and the range check to match the documentation and the
    tipc: improvements to the link setup algorithm
    algorithm. The first commit fixes a rare bug we have discovered during
    We now introduce a simple backoff algorithm for these cases. The
    to acquire a mutex to un-register crypto algorithms.
         algorithm/signature algorithm types.
    3) The algorithm does not make use of block layer tags which it will have
    P-state selection algorithm for Core processors.  Namely, all
    decisions made by that algorithm are based on the average frequency
            * Transmission selection algorithm (TSA) for each TC and the
    different transmission selection algorithms (TSA) employed between them.
    configure the traffic selection algorithm (TSA) used by each traffic
    and that the public key algorithm for the key and signature are both the
    algorithms failed because of passing AES-block unaligned source and
    effect in the governor algorithm.
    to make the algorithm start properly every time the hook is set.
    This patch proposes an algorithm to address this issue. It has
    as the algorithm type, instead of an unsigned char.
      IB/hfi1: Add SDMA cache eviction algorithm
    because other enumeration methods can use their own algorithm.
    enum defining congestion control algorithms
    IB/hfi1: Add SDMA cache eviction algorithm
    This commit adds a cache eviction algorithm for the SDMA
    Therefore, a better limiting algorithm is needed. This
    value to compute a cache size. The algorithm examines the
    As a precaution, fall back to the original reservation algorithm if the
    distribution algorithm into a new helper function.
    - changed MSR_TURBO_RATIO_LIMIT parsing algorithm so the print out had the
    Future hardware may introduce new algorithms wherein the
    and registers algorithms accordingly. A structure is added
    The performance of this algorithm was not only poor but
    look-up process into an O(1) algorithm.
    algorithm, the RB nodes can be saved into the flat array,
    other user processes.  This algorithm is limited as it did not take into
    allocate a qpn is still being provided by qib as the algorithm to allocate
    a qpn in qib is different from that of the algorithm in rdmavt.
    those requested in the query.  Also, make the algorithm used for both
    The cpu_load algorithm doesn't need to invoke intel_pstate_calc_busy(),
    The receive algorithm is something like:
    pre-allocation algorithms that were implemented, but discarded
    pcpu_ida nolock is a modified percpu_ida algorithm without
    altered the time conversion algorithms documented in the perf_event.h
    ubifs uses the write buffer size in recovery algorithm. When inspecting
    Make the identifier public key and digest algorithm fields text instead of
    The patch takes care about the algorithm adopted to mitigate the
    feedback data from codec to DSP algorithms
    while the latter implements the algorithm that spreads the
    The autosense algorithm doesn't anticipate this. Hence multiple commands
    Modify AWG algorithm in order to handle more than 1023 lines
    protection algorithm
    Drivers/devices without their own rate control algorithm can get the
    injected frames or from the rate control algorithm. But the parsing of the
    different values. Changed host queue algorithm to treat global credits
    those requested in the query.  Also, make the algorithm used for both
    crypto: testmgr - mark more algorithms as FIPS compliant
    Some more authenc() wrapped algorithms are FIPS compliant, tag
    crypto_unregister_alg() removing algorithms from the list while we're
    crypto_unregister_alg() from modifying the algorithm list during the
    algorithms like B.A.T.M.A.N. V will make incorrect decision based on these
      - simplify the decoding algorithm
    iwlwifi: mvm: rs: fix TPC action decision algorithm
    above the threshold defined in the algorithm. Add this condition.
    iio: dht11: Simplify decoding algorithm
    The new algorithm uses a 'one size fits em all' threshold, which should
    compared to the old adaptive threshold algorithm. I don't remember why
    I chose the old algorithm when I initially wrote the driver.
    hooks for asynchronous hash algorithms. It also sets the relevant, non
    algorithms. Indeed a zero value of .statesize prevents the algorithm from
    ipsec: Use skcipher and ahash when probing algorithms
    algorithms from being discovered.
    The has_key logic is wrong for shash algorithms as they always
    The ESP algorithms using CBC mode require echainiv. Hence INET*_ESP have
    it poke into the guts of the algorithm to get max_keysize, let's
    case we ever get an algorithm that has no maximum key size).
    added a check to prevent ahash algorithms from successfully registering
    for ahash algorithms.
    The s5p-sss crypto HW acceleration driver supports only AES algorithms
    Enable the kernel NEON mode and asm/NEON accelerated crypto algorithms
    booting nor related directly to Exynos Soc. All accelerated algorithms
    This is because the current algorithm doesn't correctly account for
    calculation in the remainders based on napier's algorithm.
    much assumes that some incarnation of the "crc32c" hash algorithm has
      keys, trusted: select hash algorithm for TPM2 chips
    zeroed out ->private to compression algorithm as a scratch buffer only
         algorithm used by it to depend on the CPU ID of the processor it is
         running on, make it use a special P-state selection algorithm (with
       - Add RSA padding algorithm
      cpufreq: intel_pstate: Configurable algorithm to get target pstate
    algorithm, detailed documentation isn't seen very important.
    Due to the graph traversal algorithm currently in usage, we
    algorithm to do graph backlink traversal, with is something
    Fixes: 3c68198e7 ("sctp: Make hmac algorithm selection for cookie generation dynamic")
    put it to use in the arbitration algorithm. It will also find use in
    ncr5380: Standardize work queueing algorithm
    Another deficiency of the existing algorithm is as follows. When the
    Linux v2.1.105 changed the algorithm for polling for the BSY signal
    This algorithm is a deviation from the simpler one in atari_NCR5380.c.
    the draft revision 10L that I have to refer to). The selection algorithm
    is also enqueued in the pushable rbtree, as pull algorithm uses this
            - Changed overflow start algorithm according to comments from Richard
    Currently the algorithm is using (idle_tick_2 - idle_tick_1) to
    traditional algorithm, run a CRC-only pass over the records up to the
    all placement algorithms.  This resulted in a substantial savings
    - Probe functions: used to register all crypto algorithms.
    crypto: atmel-aes - fix unregistration order of crypto algorithms
    This dummy patch fixes atmel_aes_unregister_algs() so crypto algorithms
    crypto: atmel-aes - change algorithm priorities
    Increase the algorithm priorities so the hardware acceleration is now
    ASoC: wm_adsp: Factor out finding the location of an algorithm region
    brings autodetection to the driver. However the autodetection algorithm misses
    keys, trusted: select hash algorithm for TPM2 chips
    Added 'hash=' option for selecting the hash algorithm for add_key()
    Includes support for the following hash algorithms:
    The algorithm to find the best parameters for the requested bit rate
    It also doesn't appear to be a correct algorithm either: see in
      can lead to a crash when used with the new chacha20 algorithm"
    Patch #3 add essential algorithms for managing the flow steering.
    net/mlx5_core: Add flow steering lookup algorithms
    This patch adds the following algorithms:
    load algorithm will decrease the requested P-State. Because of that,
    different utilization calculation algorithm for them.
    Use this algorithm for platforms with SoCs based on the Airmont and Silvermont
    cpufreq: intel_pstate: Configurable algorithm to get target pstate
    requirements. They may use different algorithms to get the next P-state
    selection algorithm to be depend on the CPU ID.
    crypto: rsa - RSA padding algorithm
    algorithms. The memory for these modules needs to be represented
    fm10k: Update adaptive ITR algorithm
    The existing adaptive ITR algorithm is overly restrictive. It throttles
    performance. The algorithm now allows for more interrupts per second,
    This patch adds the following algorithms to the talitos driver:
    If the rate control algorithm messed up then the txrate pointer
    To configure the module algorithm parameter during initialization
    And other algorithms and platforms will be added later on.
    The algorithm is send pio ack when:
    sun4i-ss implementaton of md5/sha1 is via ahash algorithms.
    The algorithm used here comes from the existing ARM code.
      when used with certain algorithms such as HMAC"
    to the formatting algorithms don't break anything.
    zram: introduce comp algorithm fallback functionality
    When the user supplies an unsupported compression algorithm, keep the
    compression algorithm hasn't been changed yet).
    Note that previously this operation (i.e. setting an invalid algorithm)
    would result in no algorithm being selected, which means that this
    3. compression algorithm
     - New ASID allocation algorithm which avoids IPI on roll-over, together
    16) Use hash based algorithm for ipv4 multipath routing, this was very
       - Add keywrap algorithm
    any data.  For some algorithm implementations it may cause crashes.
    The "compatible" matching algorithm used for looking up old-style
    algorithm looks like this:
    This algorithm will try 1 degree increments, since there's no way to tell
    - In this patch, the multipath route nexthop selection algorithm
    hash based algorithm from Robert Shearman in the next patch
                numbers in text form with spaces between (crypto algorithm type,
    loss detection on top of existing algorithms. It is only effective
    Kathleen Nichols' algorithm for tracking the minimum RTT of a
    The algorithm keeps track of the best, 2nd best & 3rd best min
    This patch moves the mcast compression algorithmn to an own function
    endianness of the algorithm - md5 hashes need it to be in little endian
    previously added algorithm endianness flag to control this.
    crypto: marvell/cesa - add flag to determine algorithm endianness
    request, we convert its endian according to the requested algorithm.
    returns the block size of an ahash algorithm.
    as 32.  Unfortunately the documented algorithms for using time_shift
    The adaptive ITR (interrupt throttle rate) algorithm was adjusting
    The dynamic algorithm, while now working, doesn't have good
    It also changes the minimum ITR that the dynamic algorithm
    Variable sized TPM commands are needed in order to add algorithmic
    make some simplifications to the sorting algorithm in the function
    Several of the algorithms in marvell/hash.c have a statesize of zero.
    An example is if a devices turns faulty. The algorithm is:
    Unlike shash algorithms, ahash drivers must implement export
    ahash algorithms until they are fixed.
    so its programming algorithm is extended.
    Some of the crypto algorithms write to the initialization vector,
    This patch addresses these problems by rewriting the ASID algorithm to
    The ASIX RX handler algorithm is weak on error handling.
    There is a design flaw in the ASIX RX handler algorithm because the
    memory allocation fails then the algorithm sets the buffer pointer member
    This patchset implements an improvement to the RX handling algorithm to
    The ASIX RX handling algorithm returned 0 upon a failure to get
    bit faster than do_gettimeofday(), and then uses a similar algorithm
    When the routing cache was removed in 3.6, the IPv4 multipath algorithm changed
    - Multipath algorithm is no longer configurable (always L3)
    optimized algorithms for handling byte aligned as well as cache line
    This patch converts the code to use rational best approximation algorithm which
    will be switched to rational base approximation algorithm.
    We can reuse the algorithm that computes the EOI exit bitmap to figure
       as Double-Oh-Three (DOT). The algorithm was discovered by
    detection algorithm used to set the input current limit and instead to
    Rewrite the calculation algorithm to be one pass and have a correct result.
    provides support. This will make it easy for alternative algorithms to
    alternative algorithms to be used if desired and makes the code cleaner
    algorithms to be used if desired and makes the code cleaner and easier
    rcu: Use single-stage IPI algorithm for RCU expedited grace period
    The current preemptible-RCU expedited grace-period algorithm invokes
    This commit implements a new algorithm that causes less OS jitter.
    This new algorithm IPIs all online CPUs that are not idle (from an
          # compression algorithm is used, zlib or lzo).
    but Neal pointed out it would ask the CUBIC algorithm to recalculate the
     Can't change algorithm for initialized device
      crypto: ghash-clmulni: specify context size for ghash async algorithm
    crypto: ghash-clmulni: specify context size for ghash async algorithm
    algorithm can then take the gl_name and hash its components in one
       - add RSA algorithm to qat driver.
    the hashing algorithm.  Without this, something like the following error
      raid6: using algorithm neonx8 gen() 2957 MB/s
    1) Add a new scheduler to IPVS: The weighted overflow scheduling algorithm
    test that we can set compression algorithm
    /sys/block/zram0/comp_algorithm = 'lzo' (1/1)
    zram set compression algorithm: OK
    registration path algorithm is that registered resources have a parent
    batman-adv: beautify supported routing algorithm list
    - Added PLL algorithm for a new rev of G200e
    - Added PLL algorithm for the G200eW3
    algorithm in fam15h_power for which patches are forthcoming.
    The weighted overflow scheduling algorithm directs network connections
    "algorithms should be resilient to sudden jumps forward or
    workarounds in scheduling algorithm implementations.
    tx_queue_len, which broke scheduling algorithms if untreated.
    GHASH table algorithm is using a big endian key.
    table resulting in wrong hashes from the algorithm.
    v2: cleanup the code only, no algorithem change.
    After the recent cleanups and generalizations of the DAPM algorithm the
    algorithm which gets inlined by those two versions. And then let the
    value; else default to prior algorithm.
    crypto: caam - Detect hardware features during algorithm registration
    Register only algorithms supported by CAAM hardware, using the CHA
     (3) The PKCS#7 certificate carries fields that specify the digest algorithm
         certificates specify the public key algorithm in a standardised way - so
     (1) Digests a module using the specified hash algorithm (typically sha256).
    algorithm.
    e1000e: Fix tight loop implementation of systime read algorithm
    Change the algorithm. Read systimel twice and check for overflow.
    This is an algorithm identifier plus an optional parameter.
    This can be tested with the data decoder for the new RSA akcipher algorithm
         to omit an algorithm ID field will cause checks on this to fail early
    The current key offset assignment algorithm always uses the lowest
    change the key offset allocation algorithm now to avoid reusing key
    The new algorithm always picks as the next offset the least recently
      recovery algorithm and for its omap-user, making binary file
    that this might bias the algorithm on some routers causing a load
    algorithms.  Remove the duplicated definitions.
    last of the chain. This algorithm was a little bit odd. An accurate DMA
    parallel links in order to make the two algorithms work correctly.
    As a result, the two algorithms become easier to follow, and the link
    instead of just 1. Here's an implementation of the new  TX algorithm that
    To handle this tradeoff, we introduce here a heuristic algorithm that
    crypto: qat - Don't attempt to register algorithm multiple times
    to register the same algorithm many times.
    functional changes yet in the decoding algorithm, but we improve the
    - MD5 and SHA1 hash algorithms
    AES/MD5/SHA1/DES/3DES/PRNG algorithms.
    AES/MD5/SHA1/DES/3DES/PRNG algorithms.
    Follow-up commits will simplify the counter-snapshotting algorithm
    crypto: qat - Add support for RSA algorithm
    public key algorithm acceleration.
    underlying algorithm understands the new calling convention.
    following algorithms are affected:
    Unfortunately only the basic AES/CBC/ECB algorithms do this in
    protocols. They only differ in compensation algorithms.
    ("tipc: introduce starvation free send algorithm")
    drm/i915/skl: Replace the HDMI DPLL divider computation algorithm
    Unfortunately, the previous algorithm didn't quite cope with these new
    The new algorithm looks at all dividers, which is definitely a hammer
    zram: check comp algorithm availability earlier
    comp_algorithm_store() silently accepts any supplied algorithm name,
    because zram performs algorithm availability check later, during the
    add algorithm availability check to comp_algorithm_store():
      echo lzz > /sys/block/zram0/comp_algorithm
    zram: cut trailing newline in algorithm name
    -n), which we also copy as a compression algorithm name.  it works fine
    when we lookup for compression algorithm, because we use sysfs_streq()
    we print compression algorithm name if zcomp_create() failed:
    27) Add CDG congestion control algorithm to TCP, from Kenneth Klette
       - New Marvell CESA driver that supports DMA and more algorithms.
      crypto: algif_aead - Temporarily disable all AEAD algorithms
      crypto: af_alg - Forbid the use internal algorithms
    crypto: algif_aead - Temporarily disable all AEAD algorithms
    This patch actually disables all AEAD algorithms because some of
    crypto: af_alg - Forbid the use internal algorithms
    internal algorithms.  However, af_alg itself was never modified to
    each crypto algorithm, the maximum SG list length and byte limit.
    may be absent altogether.  When this happens the algorithms will
    found to be bogus, and avoid registering algorithms which have
    bogus parameters.  A warning is also printed when an algorithm
    algorithm, and enable those features on the Armada 370 SoC.
    Other algorithms and platforms will be added later on.
    3. Select the algorithm type that you are implementing, e.g., AEAD.
    However, this is not the case, and the algorithm can fail.
    Add the necessary checks to bail out if the scaling algorithm failed.
    There are several cases where current clock configuration algorithm produces
    New test vectors for RSA algorithm.
    Note that all IV generation for GCM algorithms have been removed.
    which is not appropriate for counter-based algorithms where we
    drivers/staging/rtl8192u/ieee80211/ieee80211_softmac.c:679:33:    expected restricted __le16 [usertype] algorithm
    IB and OPA SMPs share the same processing algorithm but have different header
    IB and OPA SMPs share the same processing algorithm but have different header
    IB and OPA SMPs share the same processing algorithm but have different header
    IB and OPA SMPs share the same processing algorithm but have different header
    sharing those algorithms with the OPA code.
    We use a variant of the Hybrid Slow start algorithm in tcp_cubic to reduce
    those drivers/rate control algorithms that have a timeout.)
    possible because the underlying i2c bit banging algorithm had retries of
    As this is required by many IPsec algorithms, let's set the default
    This is a portable C implementation of the algorithm without architecture
    ChaCha20 is a high speed 256-bit key size stream cipher algorithm designed by
    prepended by the initial block counter. Some algorithms require an explicit
    in the algorithm to spread access between memory resources. But
    the CP microcode when it is executing its scheduling algorithm.
    This patch converts the low-level __gcm-aes-aesni algorithm to
    crypto: aesni - Convert top-level rfc4106 algorithm to new interface
    context in the top-level algorithm.  Now all processing is carried
    out in the low-level __driver-gcm-aes-aesni algorithm.
    crypto: aead - Add multiple algorithm registration interface
    of multiple algorithms.
    algorithms are unaffected while new implementations can simply
    The current algorithm for deciding on the number of VRSS channels is
    Here is the new algorithm for deciding on the number of sub-channels we
    Autogain algorithm is very simple, if average luminance is low - increase gain,
    p0/p1/p2) and can be reused even if we change the algorithm to do so.
    algorithms to that range. The starting 'agbno' hint is clamped to the
    is currently obtained from our own list of algorithm descriptions.
    various algorithms are optimised for in-place processing where
    with this scheduling algorithm and buffer limiters in the stack
    algorithms that use seqniv (i.e., GCM and CCM) to hash the whole
    AEAD algorithm implementors need to figure out a given algorithm's
    this is difficult to do as an algorithm could be new style or old
    detection algorithm.  This feature allows you to determine the physical
    If the underlying AEAD algorithm is using the old AEAD interface,
    intended to be used by algorithms such as rfc4106 that does the
    AEAD interface where IV generators are just normal AEAD algorithms.
    the underlying AEAD algorithm has switched over to the new AEAD
    underlying AEAD algorithm still uses the old interface.
    normal AEAD algorithms that simply take the IPsec sequence number
    underlying algorithm.
    the data in piecemeal and the underlying algorithms try to stitch
    algorithm implementors do not have to stitch.
    For the top-level IPsec AEAD algorithm the plain/cipher text will
    SND_UNA, according to the Eifel algorithm in RFC 3522:
    selects the individual crypto algorithms, but fails to build when the
    tipc: improve link congestion algorithm
    The link congestion algorithm used until now implies two problems.
      provides a gap in the congestion algorithm that in the worst case
    We now refine the congestion algorithm as follows:
    Add the basic algorithms for get/set attr ops.  Use the same recusive algo
    The current algorithm used in clflush_cache_range() can cause
    algorithm so that each cache line will only be flushed once.
     - mac802154 fix for crypto algorithm allocation failure checking
      Revert "dm crypt: fix deadlock when async crypto algorithm returns -EBUSY"
    Revert "dm crypt: fix deadlock when async crypto algorithm returns -EBUSY"
    - With an unlucky combination of arriving packets the algorithm
    add multiple controls per algorithm per memory region and the old
    Revision one of the file format includes new algorithm and coefficient
    Tidy up the code a little by factoring out the creation of the algorithm
    The algorithm region information in the firmware doesn't contain a
    Finally, we use algs to refer to the number of algorithms quite
    ASoC: wm_adsp: Split out adsp1 & 2 setup algorithms
    useless in SHA's algorithm context. Instead we call nx_build_sg_list
    algorithm has been tested (type = CRYPTO_ALG_TESTED and mask = 0),
    algorithm has been tested (type = CRYPTO_ALG_TESTED and mask = 0),
      md/raid6 algorithms: xor_syndrome() for SSE2
      md/raid6 algorithms: xor_syndrome() for generic int
      md/raid6 algorithms: improve test program
      md/raid6 algorithms: delta syndrome functions
    only be used by algorithm/driver implementors and not crypto users.
    The caam driver includes algorithm types that it doesn't even
      straw2 algorithm (to sync up with userspace) and several RBD cleanups
      ARM: MCPM: move the algorithmic complexity to the core code
    implementation and not algorithm implementations.  In fact it
    crypto: rng - Add multiple algorithm registration interface
    of multiple RNG algorithms.
    so this patch marks it as const.  Since our algorithms don't
    md/raid6 algorithms: xor_syndrome() for SSE2
    md/raid6 algorithms: xor_syndrome() for generic int
    Start the algorithms with the very basic one. It is left and right
    md/raid6 algorithms: improve test program
    new data critical algorithms. So add some test routines to the raid6
    Run through all permutations of start/stop pages per algorithm and
    the recovery algorithm still confirms that the stripe is fine.
    md/raid6 algorithms: delta syndrome functions
    need calulation steps for the Q parity. Depending on the algorithm
    how well the algorithm works. The choice of the fastest algorithm will
    It was the last algorithm type added before we switched over
    by algorithm types such as pcompress and shash.
    likely that the same is true for other rate control algorithms.
    Since fixing all rate control algorithms will be very difficult,
    data structures the algorithms maintain.
      dm crypt: fix deadlock when async crypto algorithm returns -EBUSY
    The first patch adds a macro implementing the algorithm in two flavors -
    algorithm for arrays sorted both in ascending and descending order.
    Calculate and cache clock parameters. Follow bspec algorithm for HDMI.
    dm crypt: fix deadlock when async crypto algorithm returns -EBUSY
    algorithms typically don't have a sense of being too busy.  However,
    the CAAM driver.  Fix was regression tested against software algorithms
    Compaction has anti fragmentation algorithm.  It is that freepage should
    too excessive compared to page allocator's anti fragmentation algorithm.
    To support the existing attr leaf block algorithms for insertion,
    # gpg: WARNING: digest algorithm MD5 is deprecated
    # gpg: WARNING: digest algorithm MD5 is deprecated
    algorithm. This allows a specific arch or hardware implementation
    algorithm. This allows a specific arch or hardware implementation
    algorithm. This allows a specific arch or hardware implementation
    The function crypto_alg_match returns an algorithm without taking
    any references on it.  This means that the algorithm can be freed
    This patch fixes this by taking a reference count on the algorithm
    algorithm used.
    Previous algorithm had an outer loop with the values {2,3,5,7} and an
    not move. This is due to the kernel tracking algorithm which can not assign
    algorithm did not properly account for the corner cases where the
    ARM: MCPM: move the algorithmic complexity to the core code
    low-level locking. This is needless duplication, involving algorithmic
    keeping the algorithmic complexity and race avoidance local to the
    In this commit, we eliminate the MTU discovery algorithm,and fall back
    thread. The algorithm is similar to a cache coherency protocol. We call it XSU
    Previous algorithm had an outer loop with the values {2,3,5,7} and an
    We introduce a better algorithm for selecting when and which
    tipc: introduce starvation free send algorithm
    length is beyond this threshold, the message is rejected. This algorithm
    chosen by the approximation algorithm. Anyone can play with the script [1] that
    represents the algorithm.
    push/pull algorithm still works fine.
    u16 algorithm;                                  /* 8    2 */
    u16 algorithm;                                  /* 6    2 */
    Since the rate scaling algorithm is separate in mac80211, it also
    invokes the rate scaling algorithm for such stations. It doesn't
    know that our rate scaling algorithm is tightly integrated with
    This leads to crashes when the rate scaling algorithm tries to
    Protect against this in the rate scaling algorithm. We cannot get
    This implements the GHASH hash algorithm (as used by the GCM AEAD
    This implements the SHA-224/256 secure hash algorithm using the AArch32
    This implements the SHA1 secure hash algorithm using the AArch32
    to match. For this purpose, use the algorithm in the DisplayPort 1.2 spec,
    Although the commit correctly implemented the CUBIC algorithm, which
    babble recovery algorithm.
    mitigation algorithm is running in user space, remove the driver
    Handling of algorithm constants has been slightly
    Drivers: hv: vmbus: Use a round-robin algorithm for picking the outgoing channel
    The current algorithm for picking an outgoing channel was not distributing
    and apparently host algorithm considers them as being unused. Keep track of
    algorithm and non optimal performance.
    Current algorithm uses a per socket tso_deferred field as a pseudo timer.
    Changed the __driver-gcm-aes-aesni to be a proper aead algorithm.
    OpenSSL implements optimized ASM algorithms which support
    the rate control algorithm are already doing similar workarounds by
        - Only apply the different hashing algorithm if the slice is
    algorithm and non optimal performance.
    manner to the existing counters and their rebalance algorithm. If we
    Allow more compression algorithms as well as uncompressed uImage.bin
    disables Nagle’s algorithm and improves latency characteristics.
      crypto: cts - Weed out non-CBC algorithms
    checksum needs to be modified using the normal algorithm.
    checksum option it still changes the checksum per the algorithm
      gpio: sch: Consolidate similar algorithms
     4) Allow congestion control algorithm selection via routing metrics.
    # gpg: WARNING: digest algorithm MD5 is deprecated
    # gpg: WARNING: digest algorithm MD5 is deprecated
    Unfortunately the same algorithm does not work well on IOMMUs with
    control algorithm") for RED marking ECT(0) packets with CE.
    The run-length encoding algorithm should compare 16-bit encoded pixel
    gpio: sch: Consolidate similar algorithms
    Consolidating similar algorithms into common functions to make
    running with smt enabled. Due to group scheduling algorithms when running in
    in common congestion control algorithms, like Reno and CUBIC, which
    control algorithms that were designed and tuned years ago with
    changes all congestion control algorithms to pass in 1 for the ACKed
    as is done in s/w algorithm implementations.
    additional scrubbing of data, even when the ECC algorithm in use is
       algorithms). Note heigh tof use
    This patch forbids any algorithm with an IV size of less than 8
    crypto: cts - Weed out non-CBC algorithms
    The cts algorithm as currently implemented assumes the underlying
    is a CBC-mode algorithm.  So this patch adds a check for that to
    designed for IPsec algorithms.  Since cts users do not actually
    changed the automatic module loading when requesting crypto algorithms
    would otherwise match the requested crypto algorithm.
    Current algorithm picks the first fifo which is equal to or greater
    endpoints with smaller maxps. Change the algorithm to pick the
      x86_64, vdso: Fix the vdso address randomization algorithm
    KVM: nVMX: Add nested msr load/restore algorithm
    as shared variables in synchronization algorithms.  It also documents
    Changed the whole algorithm for a call to mktime64 that takes
    control algorithm via routing table. For details, please see individual
    congestion control algorithm. Generally, this opens up the possibility
    control algorithms with optimal strategies for each of them based
    algorithm. We also thought about a per netns setting (where different
    congestion control algorithm and the optional lock parameter allows
    to enforce the given algorithm so that applications in user space
    would not be allowed to overwrite that algorithm for that destination.
    algorithms are being initialized, thus overhead is very low when the
    user space to be the actual congestion control algorithm name, similarly
    now being reassigned to a different congestion control algorithm,
    congestion control algorithm name member and map that into u32 key
    now be unloaded, the congestion control algorithm for a specific
    reload time it will switch back to the expected algorithm
    they are the same and it doesn't break the filtering algorithm.
    register. Note that the algorithm assumes that IRQ numbers and
    algorithm suggested by Andy.  The trick is to atomically increment
    This NMI-coordination algorithms has been validated by the following
      algorithm)
    x86_64, vdso: Fix the vdso address randomization algorithm
    The current algorithm is buggy: the vdso has about a 50% probability
    of being at the very end of a PMD.  The current algorithm also has a
    It's worth noting that this algorithm is inherently biased: the vdso
    algorithm are unchanged.
    it out makes it easier to change the underlying algorithms and to
      LZ4 is a lightweight compression algorithm which can be used on
      usr/Kconfig: make initrd compression algorithm selection not expert
    usr/Kconfig: make initrd compression algorithm selection not expert
    The kernel has support for (nearly) every compression algorithm known to
    compression algorithms, and not always include every possible algorithm
    clarify parts of the algorithm.
    queues are provided by a block driver. With the current algorithm
    if number of pages haven't changed sorting algorithm
    Add the SHA1 and SHA256 algorithms to the driver.
    LZ4 compression algorithm.
    helps the firmware's rate-control algorithm work properly.
    In this commit we discard the lru algorithm for inodes with extent
    This module registers a crc32 algorithm and a crc32c algorithm
    Improvement compared to crc32c-generic algorithm:
    used (by the rate-control algorithm), even if the sta
    The algorithm used for programming the DMA Controller doesn't take into
    Chaining mode (CBC) algorithms from ablkcipher to givencrypt.
    counting algorithm.
    dm cache policy mq: tweak algorithm that decides when to promote a block
    chain.  This is not suitable for the simple recursive walk algorithm,
    v4: Rework and document the algorithm after Ville found that it was all
    This patch implements the watermark algorithm and its necessary
    Add support for one-shot givencrypt algorithms.
    Givencrypt algorithms will generate their IV and encrypt data
    Current algorithms merged from ablkcipher to givencrypt are:
    used along with authenc algorithms (md5, sha1, sha224, sha256, sha384,
    sha512) as one-shot aead algorithms.
    NX SHA algorithms stores the message digest into tfm what
    The PMECC use the BCH algorithm, so based on the build_gf_tables()
    state into stack and state pruning algorithm recognizing
    to other ranking in the source address selection algorithm.
    algorithm; this patch provides the mechanism to detect the kind
    will allow the DAPM algorithms to assume that they never see such paths.
              source. The DAPM algorithm only uses the conneceted() callback for
    DAPM algorithm, more generic and significantly shorter.
    always true checks from one of the hottest paths of the DAPM algorithm and
    irq: Consolidate algorithm of mapping (ioapic, pin) to IRQ number"
    connection.  The i2c_algorithm methods are then implemented
    net: fec: ptp: Use hardware algorithm to adjust PTP counter.
    This algorithm works only if program size is strictly decreasing.
    prologue, which may cause algorithm to erroneously decide that size converged.
    We want "cbc(aes)" algorithm, so select CRYPTO_CBC too, not just
    lib/genalloc.c: add power aligned algorithm
    One of the more common algorithms used for allocation is to align the
    as an algorithm option for genalloc.
      12) Add Datacenter TCP congestion control algorithm support, From
      Input: cros_ec_keyb - optimize ghosting algorithm
    The current verifier algorithm is brute force depth first search with
    state pruning. If anyone can come up with another algorithm that demonstrates
    better results, we'll replace the algorithm without affecting user space.
    Change the algorithm to iterate over the set bits in the
    net: tcp: DCTCP congestion control algorithm
    control algorithm. Please see individual patches for the details.
    net: tcp: add DCTCP congestion control algorithm
    algorithm [1], which has been first published at SIGCOMM 2010 [2],
    DCTCP is an enhancement to the TCP congestion control algorithm for
    The algorithm itself has already seen deployments in large production
    Changes in the CA framework code are minimal, and DCTCP algorithm
    congestion algorithm module outside of the core stack.
    control algorithm.
    algorithm as it makes a different choice depending on ECE being
    This patch adds a flag to TCP congestion algorithms that allows
    capable, that is, ECT(0), when required by a congestion algorithm.
    algorithm/behaviour slightly diverges from RFC3168, therefore this
    (DCTCP) congestion control algorithm - we need to be able to
         frequency setup according to the new algorithm.
    it will register its crypto algorithms.  If the system does not have
    is attempted to be queued by the registered crypto algorithms.
    is the same algorithm that ldflags() already uses.
      exponential algorithm described in section 5.1.3. is not used. [...]
    the exponential algorithm from 5.1.3, we cannot [strictly speaking] be
    not to be any implementations that make use of that exponential algorithm
    reaction time of the RS algorithm. Also, an upcoming change in
    Enable ACK timeout estimation algorithm if set_coverage_class routine has been
    Add ACK timeout estimation algorithm to ath9k Makefile and Kconfig
    Add dynamic ACK timeout estimation algorithm based on ACK frame RX timestamp,
    algorithm (dynack)
    These methods will be used in ACK timeout estimation algorithm (dynack)
    allowed to override the function called by the iteration algorithm.
    NVIDIA appear to have tweaked the algorithm from GF110, this implements
    the previous algorithm for them still.
    The allocation algorithm doesn't expect there to be holes in the mm, which
    point after the initial tree algorithm debugging.
    setting algorithm and use suitable timeout for different CMDs.
    calculation algorithm. To be flexible, this patch provides a .set_timeout
    staging: vt6656: remove rate_control_algorithm pid
    rate control algorithm pid was removed from wireless tree
    The device defaults to algorithm 'minstrel_ht'
    There has been no problems using this algorithm.
    negotiation failure. This patch implements the algorithm to retry the
    This patch also fixes the code to match the algorithm for the printing
    estimation algorithm (dynack) passing coverage class equals to -1
    Enable ACK timeout estimation algorithm (dynack) using mac80211
    Input: cros_ec_keyb - optimize ghosting algorithm
    Previous algorithm was a bit conservative and complicating with respect to
    debug statements to the quota allocation algorithm.
    an invalid hash algorithm.  Although we can not verify the xattr, we still
    need to measure the file.  Use the default IMA hash algorithm.
    algorithm.  Although we can not verify the xattr, we still need to
    measure the file.  Use the default IMA hash algorithm.
    algorithm. While this prevents changes to the extent list during the
    The current shift algorithm uses the extent index to iterate the in-core
    As with the full writeback, this is a temporary fix until the algorithm
    algorithms.
    The same issue was present in the lz4hc algorithm.
    multi-buffer algorithm.  It also contains the flush routine to that's
    The SHA1 multi-buffer crypto algorithm is defined and initialized in
    belonging to SHA1 crypto jobs to the SHA1 multibuffer algorithm.  It is
    crypto: sha-mb - SHA1 multibuffer algorithm data structures
    crypto algorithm.  The idea of the multi-buffer algorihtm is to put
    Currently, the selection algorithm for T.ACT and T.RET is as follows:
    I2S output provides monitor data to the SOC/CODEC/DSP for speaker protection/enhancement algorithms
    table. The algorithms for calculating the coefficients and setting the
    We'll need a different algorithm to select the shared DPLL.
      want to fully understand why the algorithm works before making that
            simulations or other programs/algorithms which are doing
            GRND_RANDOM.  The cryptographic algorithms used for
    algorithms.
    This patch adds ARM NEON assembly implementation of SHA-1 algorithm.
    Change the algorithm to iterate over the set bits in the
    first fragment should be cleared at the very final step of the queueing algorithm.
    ethernet frame, the queueing algorithm can no longer expect a 'TX_USED' bit to be set by
    filtering algorithm for eofblocks scans. This flag is intentionally left
    SMP and the XADD algorithm variant.
    For architectures that don't have cycle counters, the algorithm for
    using an overcomplicated custom stripping algorithm.
    algorithms with crypto API layer.
    content of the PE binary and the OID of the digest algorithm used (typically
    computation is done using the common hash algorithm to be consistent
    Linux had a generic (for all of IPv4) implementation of the algorithm
    crypto queue and finally register the algorithms into crypto
    - ablkcipher algorithms
     all algorithms supported by the crypto block. It also exports
     few helper functions needed by algorithms:
    subsystem, at points where we can catch both algorithm module loads and
    Reverse the search algorithm to ensure that address mapping and IRQ
      with that compression algorithm"
    This also eliminates another round of determine algorithm based on key
    length, followed by determine key length based on algorithm.
    Then it implements an algorithm to dynamically allocate IRQ number
    x86, ACPI, irq: Consolidate algorithm of mapping (ioapic, pin) to IRQ number
    Currently ACPI and ioapic both implement algorithms to map (ioapic, pin)
    Patch adds x86_64 assembly implementation of Triple DES EDE cipher algorithm.
    algorithms.
    some fixes to the dequeuing algorithm.
      the GHASH crypto algorithm (which went in during this merging window)
       - GHASH crypto algorithm fix and performance improvement
      arm64/crypto: improve performance of GHASH algorithm
      arm64/crypto: fix data corruption bug in GHASH algorithm
    Fixes: 3c68198e7511 ("sctp: Make hmac algorithm selection for cookie generation dynamic")
    arm64/crypto: improve performance of GHASH algorithm
    arm64/crypto: fix data corruption bug in GHASH algorithm
    This fixes a bug in the GHASH algorithm resulting in the calculated hash to be
    detection algorithm and if when applying a delayed move/rename there's a path loop
    The algorithm relies on having proper mmap2 support in the kernel to help determine
    This is largely based on a patch by Stéphane Marchesin but the algorithm
     - Optimised crypto algorithms making use of the ARMv8 crypto extensions
    (Drop whitespaces + rename to chap_check_algorithm + save original
    list iteration (i.e.  Schlemiel the painter's algorithm) in the case where
    capability to negotiate not only the hash algorithm selection, but also
    which queue to use for a particular packet. In general, the algorithm
       - The PID controller algorithm used by intel_pstate assumes that the
    I would like to use one of the RPC client's congestion algorithm
    use more elaborate matching algorithms if necessary.  That is needed
    If the rate control algorithm uses a selection table, it
    registration of the rate-control algorithm. Although not yet reported,
    to register a particular rate-control algorithm more than once. I believe
    is to rename the algorithm used in r8192ee.
        halbtc8723b2ant_action_algorithm
        halbtc8723b2ant_action_algorithm
    algorithm specific checks fail, the function returns without enqueuing
    requested algorithm is not supported by the driver, the function returns
    algorithm is not supported by the driver, the function returns without
    staging: rtl8723au: Store algorithm type in a u32
    [NiteshNarayanLal@freescale.com: added hooks for the missing algorithms test and tested the patch]
    The checking for the type of algorithm implementation is pretty
    algorithm they are using (might be using an HW RC algo).
    able to query the RC algorithm (this patch provides an
    FPSIMD register bank context switching and crypto algorithms
    This matches the algorithm used by earlier kernels when selecting the
    This patch adds support for the AES-CCM encryption algorithm for CPUs that
    This patch adds support for the AES symmetric encryption algorithm for CPUs
    basic algorithm is: if a CPU is booting at EL2, it will set a flag at
    After fixes to the rs algorithm reenable MCS9.
    fixes the race with an unnecessary spinlock in a lockless algorithm.
    In case hash key is bigger than algorithm block size, it is hashed.
    the original algorithm. Once the inode is allocated, update the
    Move the original xfs_dialloc_ag() algorithm to
    algorithm to output different values for different TCs and we can
    also. This allows the algorithm to output different values for different
    cases, the algorithm is the same, doesn't matter the behavior.
      staging: r8723au: Add missing initialization of change_inx in sort algorithm
    staging: r8723au: Add missing initialization of change_inx in sort algorithm
    Patch adds large test-vectors for SHA algorithms for better code coverage in
    crypto: bfin_crc - ignore duplicated registration of the same algorithm
    compared to the rate scale algorithm which was planned to yield
    Implement Adaptive Tx Power Control algorithm.
    algorithm).
    compression algorithm request, ERR_PTR(-ENOMEM) for allocation (zcomp or
    zram: add lz4 algorithm backend
    zram: make compression algorithm selection possible
    Add and document `comp_algorithm' device attribute.  This attribute allows
    algorithms:
            cat /sys/block/zram0/comp_algorithm
    and change selected compression algorithm:
            echo lzo > /sys/block/zram0/comp_algorithm
    (buffer and algorithm private part), so in order to prevent data
    ZRAM performs direct LZO compression algorithm calls, making it the one
    and only option.  While LZO is generally performs well, LZ4 algorithm
    multiple compression algorithms with the following set of operations:
    time, zram_meta must be aware of a) specific compression algorithm memory
    compress/decompress `buffer' and compression algorithm `private' part.
    respectively, allocate and deallocate algorithm specific zcomp_strm
    which initialises compressing backend if requested algorithm is supported.
    algorithm.
       - Added hash-only AEAD algorithms in caam
      crypto: export NULL algorithms defines
    one would've eventually become a master with the current algorithm.
    So the current algorithmus reads the newest message first, which
    The crypto algorithm modules utilizing the crypto daemon could
    crypto: export NULL algorithms defines
    OMAP NAND driver supports multiple flavours of BCH4 and BCH8 ECC algorithms.
       between different implementations of same ECC algorithm.
    data. An obvious example is the roaming algorithm that will
    doc: update driver TX algorithm in timestamping.txt
    problems, and implements a smoother flow control algorithm in iw_cxgb4,
    The algorithm is designed such that if the DB write load is high enough,
    Since the ANI algorithm is different here compared to the old
    The incremental send algorithm assumed that it was possible to issue
    based on Paul McKenney's and Josh Triplett's algorithm "Optimized Resizing
      The receiver MUST use the HMAC algorithm indicated in
      the HMAC Identifier field. If this algorithm was not
    As per current algorithm used in the firmware, imply Rx BACK
       when we migrate a state with aead algorithm attached.
    does not take into concern quickfailover algorithm. Therefore, quickfailover
    no crypto algorithm attached if the original state uses
    an aead algorithm. This patch add the missing information
    This commit therefore uses a greedy algorithm to re-order the test
    Please note that this is still not an optimal bin-packing algorithm,
    the bin-packing algorithm.  This commit therefore adds a --dryrun
    Proposed solution simplifies whole algorithm having on mind definition from rfc:
    algorithm. Finally, as proposed solution is simplification, some lines of code,
      only matching and fallback to old matching algorithm"
      VME: Correct read/write alignment algorithm
    more details. Also add references to algorithm (IETF draft and paper) to top of
    tipc: changes to general packet reception algorithm
    After the previous redesign of the tunnel reception algorithm and
    In this commit, we change the algorithm for receiving failover
    In this commit, we change the algorithm for receiving DUPLICATE_MSG
    As commit 3c68198e75111a90("sctp: Make hmac algorithm selection for
    using FIPS approved algorithms. Which means that E0, SAFER+ and P-192
    algorithms such as WPA1/WPA2 and should not be used to set
    crypto: ccp - Allow for selective disablement of crypto API algorithms
    crypto algorithm by not registering the algorithm with the
    The simple way to fix this is to implement the same algorithm as ARMv7
    VME: Correct read/write alignment algorithm
    drivers implement an algorithm to utilise the largest possible width reads and
    writes whilst maintaining natural alignment constraints. The algorithm
    more sophisticated allocation algorithm.
    This is a patch to improve swap readahead algorithm.  It's from Hugh and
    I don't prepare a sophisticated algorithm for the sequential workload
    The algorithm is purposely pretty naive. I don't think we need much in
    There's not a single rate control algorithm actually in
      i2c: update i2c_algorithm documentation
    lockless recv algorithm, we still need to document these specific
    i2c: update i2c_algorithm documentation
    Add some kerneldoc style documentaton to the i2c_algorithm
    Replace hardcoded lowest common multiple algorithm by the lcm()
      serial: sh-sci: Simplify baud rate calculation algorithms
      serial: sh-sci: Remove baud rate calculation algorithm 5
    matching algorithm. It only supports two usual wildcardes:
    This algorithm is safe since it is non-recursive.
    We thought about introducing the reciprocal_divide algorithm in
    reciprocal_divide: update/correction of the algorithm
    by using the algorithm proposed in "Division by Invariant Integers
      ima: change the default hash algorithm to SHA1 in ima_eventdigest_ng_init()
    First (EDF) scheduling algorithm, augmented with a mechanism (called
    The EDF algorithms selects the task with the smallest absolute
     - implements the core logic of the scheduling algorithm in the new
    Add the syscalls needed for supporting scheduling algorithms
    refine the algorithm that enables UART_BUG_NOMSR to take those exceptions
    don't trigger rate control algorithm calls.
    selection algorithm with a simple prandom_u32() in order to mitigate
    the hash algorithm as prefix and the 'd-ng' will always have it, we can
    use the hash algorithm to differentiate the two cases in the modified
    ima: change the default hash algorithm to SHA1 in ima_eventdigest_ng_init()
    the hash algorithm so that the prefix 'sha1:' is added to violation
      serial: sh-sci: Simplify baud rate calculation algorithms
      serial: sh-sci: Remove baud rate calculation algorithm 5
    * Simplify baud rate calculation algorithms
    * Remove baud rate calculation algorithm 5
      serial: sh-sci: Simplify baud rate calculation algorithms
      serial: sh-sci: Remove baud rate calculation algorithm 5
    in the master-slave algorithm.
    With the new ASID allocation algorithm, active ASIDs at the time of a
    baud rate calculation algorithm. The algorithm ID will be removed from
    rate calculation algorithm ID passed through platform data. However, it
    calculation algorithm ID isn't specified, and allow platforms to
    rate calculation algorithm. Compute it using hardware identification
    serial: sh-sci: Simplify baud rate calculation algorithms
    serial: sh-sci: Remove baud rate calculation algorithm 5
    The algorithm isn't used, remove it.
    algorithms.
    is zero by the design of the multi-stage filter algorithm.
    same algorithm as ARM. We use the fls64 macro, which expands to a clz
    algorithm which may lead to non optimal throughput and
    FW implements protective algorithm to identify AP's improper uAPSD
    resulting hash algorithm is a collision-free though not minimal hash that can
    The hashing algorithm relies on the inherent properties set in the ARM ARM
    The hash algorithm is quite simple and can easily be implemented in assembly
      Unsupported authentication algorithm (36088)
    by the rate scale algorithm.
    before the algorithm steps from one node containing keyrings to a child node
    However, if the algorithm does need to step from a node to a child node, it
    means that the algorithm will keep scanning the same node over and over again
    Some s390 crypto algorithms incorrectly use the crypto_tfm structure to
    The original algorithm would depend on the order of the assoc->transport_list
      KEYS: The RSA public key algorithm needs to select MPILIB
      ima: enable support for larger default filedata hash algorithms
    conf->prev_algo, conf->algorithm, the stripe_hashtbl and inactive_list. Except
    offers a choice of compression algorithm to compress initial ramfs image;
    support for LZ4 compression algorithm.  Also updates the
    The kernel's readahead algorithm sometimes interprets random read
    algorithm intends to check whether offset - previous offset == 1
    algorithm is presented in [1] by the very same author who also
    designed the original algorithm in [2].
    taus88 and taus113 algorithm is also part of GSL. I added a test
    algorithm                 taus88           taus113
    drivers/staging/rtl8192e/rtllib_softmac.c:821:33:    expected restricted __le16 [usertype] algorithm
    with CRC32 algorithm.  Resulting value is xored with ciphertext sector
    We introduce a new reassembly algorithm that improves performance
    a completely new reassembly algorithm. So we change the code to
    encapsulates all control information specific to BCH ecc algorithm in software.
    The cbc-aes-s390 algorithm incorrectly places the IV in the tfm
    GRO, etc).  But slow start algorithm is to send twice the amount of
    algorithm in __crc32c_le() otherwise); plus use the __crc32c_le_combine()
    over the skb with different algorithms.
    ASoC: wm_adsp: Remove and free algorithm regions for ADSP1
    KEYS: The RSA public key algorithm needs to select MPILIB
    The RSA public key algorithm needs to select MPILIB directly in Kconfig as the
    same hash algorithm.  Changing from one hash algorithm to another,
    type, which includes the hash algorithm, permitting different files
    to be hashed with different algorithms.
    ima: enable support for larger default filedata hash algorithms
    Kconfig support for defining larger default filedata hash algorithms
    <uapi/linux/hash_info.h> contains a list of hash algorithms.  The
    Kconfig default hash algorithm is a subset of this list, but any hash
    algorithm included in the list can be specified at boot, using the
    ima: defer determining the appraisal hash algorithm for 'ima' template
    The same hash algorithm should be used for calculating the file
    data integrity.  (The appraise hash algorithm is stored in the
    Different files might be signed based on different hash algorithms.
    algorithm.
    - use ':' as delimiter between the hash algorithm and the digest
    - always include the hash algorithm used when audit-logging a measurement
    field prefixes the inode digest with the hash algorithim, when
    - always prefix digest with hash algorithm - Mimi
            calculated with the SHA1 or MD5 hash algorithm;
               algorithm (field format: [<hash algo>:]digest, where the digest
               prefix is shown only if the hash algorithm is not SHA1 or MD5);
    With multiple hash algorithms, ima_hash_tfm is no longer guaranteed to be sha1.
    ima: support arbitrary hash algorithms in ima_calc_buffer_hash
    ima_calc_buffer_hash will be used with different hash algorithms.
    This patch provides support for arbitrary hash algorithms in
    for different file data hash algorithms.
    ima: read and use signature hash algorithm
    algorithm.  In preparation for files from different packages being
    signed using different hash algorithms, this patch adds support for
    reading the signature hash algorithm from the 'security.ima' extended
    ima: provide support for arbitrary hash algorithms
    In preparation of supporting more hash algorithms with larger hash sizes
    hash algorithm, digest size, and digest.
    This patch makes use of the newly defined common hash algorithm info,
    This patch provides a single place for information about hash algorithms,
    If a machine has no hardware support for the xts-aes or ctr-aes algorithms
    unregisters the algorithms which causes crypto_remove_alg to crash.
    current routing algorithm being used. To easily make this
    mechanism routing algorithm agnostic add a orig_node
    specific API that each algorithm can populate with its own
    without knowing which routing algorithm is currently in use
    algorithm specific detail
    batman-adv: make struct batadv_orig_node algorithm agnostic
    specific and therefore they are moved in a algorithm specific
    substruct in order to make batadv_orig_node routing algorithm
    batman-adv: make struct batadv_neigh_node algorithm agnostic
    related to the B.A.T.M.A.N. IV algorithm. In order to
    make the struct usable by any routing algorithm it has to be
    The original algorithm to find the best baud rate dividers does not necessarily
    since rate scaling algorithm can not work optimally.
    structures in improved scheduling algorithms.
    algorithm. Create a common implementation with a simple architecture
    and around 25% for decryption. This implementation of the AES algorithm
    This algorithm processes up to 8 blocks in parallel in constant time. This
    This is because the algorithm in __perf_session__process_events()
    packet, the algorithms fall back to L2 hashing.
    fast-reclocking algorithm to converge more quickly on the desired bin.
    Enable rs algorithm to use VHT rates and use 80Mhz.
    combining algorithm when processing subframes in
    X.509: Check the algorithm IDs obtained from parsing an X.509 certificate
    Check that the algorithm IDs obtained from the ASN.1 parse by OID lookup
    corresponds to algorithms that are available to us.
    Store public key algorithm ID in public_key_signature struct for reference
    KEYS: Move the algorithm pointer array from x509 to public_key.c
    Move the public-key algorithm pointer array from x509_public_key.c to
    Rename the arrays of public key parameters (public key algorithm names, hash
    algorithm names and ID type names) so that the array name ends in "_name".
    each passive detection cycle. Without this algorithm, Android 4.3 based
         array itself or its algorithms.
      sporadic crashes when multiple threads load the same algorithm.
      It also fixes the crct10dif algorithm again to prevent boot failures
    initialization failed), then the registration of hash/algorithms/rng shouldn't
    algorithm for initializing the 128bit RNG using timespec and
    xen_netbk_count_skb_slots(), more closely follow the algorithm used by
    load the new crypto crct10dif algorithm.
    pattern, because the new cluster allocation algorithm is just for SSD.
    swap: change block allocation algorithm for SSD
    Here I introduced a simple algorithm to search cluster.  Since we only
    We only enable the algorithm for SSD.  Hard disk swap isn't fast enough
    and has downside with the algorithm which might introduce regression (see
    I only enable the algorithm for SSD).
    handle queue full and use its algorithm to ramp down/up queue
        - Rework the ASID allocation algorithm to remove asid-mm reverse map
    Change the hash algorithm a bit so it produces only values in the
    sources keeps its unique hash with the slightly modified algorithm:
    SCTP data chunk fragmentation algorithm has problems with MTU values which are
    running through the algorithm to determine it, hardcode the value and get it
    we need to account for resources with locks.  The new algorithm is: If
    for the use of other compression algorithms in future, and is how a few
    today. Today, the algorithm even has quadratic effort (based on the
    Unfortunately this confused the algorithm to assign the objectid
    The PMECC use BCH algorithm to correct error. In BCH algorithm, the primitive
    It could be better but on that case calculation algorithm goes more
    Pstore will make use of deflate and inflate algorithm to compress and decompress
    recursive algorithm and manages to not only free all the pagetables,
    The basic algorithm, rounding and several code comments/explanations
    further code/algorithm descriptions.
    to special case the allocation algorithm code coverage debug switch.
    Also, the routing DRAM Requests algorithm is different for F15h M30h.
    ath9k: Run the LNA combining algorithm properly
    The LNA combining algorithm has to be run for cards
    enabing this algorithm.
    algorithm to accomodate RSSI variation. Add a couple
    true with the ECC algorithms used by IFC.
    The current code can be rewritten to use a similar algorithm as the
    shared count is unnecessary and unsafe with a lockless algorithm.
    Simplify n_tty_read(); extract complex copy algorithm
    such as pgbench suffer. It's also time-consuming algorithmically.
    have never been retransmitted. The Karn's algorithm does not apply
    The algorithm applied is:
    With this algorithm, the start or end of almost any bank can be non-
    that has 16385 blocks and algorithm sha256.
    Add support for lz4 and lz4hc compression algorithm using the lib/lz4/*
    very fast lossless compression algorithm and it also features an extremely
    According with Manu Abraham, stb0899 seek algorithm is broken
         simple hashing algorithm and updates current cpu_{suspend}/{resume}
    The sh_mobile_ceu_camera driver implements a generic algorithm for setting
    algorithms and can be re-used by other V4L2 camera host drivers too. These
    avoidance algorithm is only needed for correctness against
    hashing algorithm and updates current cpu_{suspend}/{resume} code to use
    operations, because the current PCI MMIO alignment algorithm may
    The driver currently selects a HCA based on the algorithm that PSM
    on the algorithm that is currently enforced or selected by PSM - round
    The unmap path uses the same algorithm as legacy KVM.  We don't want
    intentional.  So long as we use a consistent algorithm, all the
    The hashing algorithm must be simple, fast, and implementable with few
    hash algorithm is a collision-free though not minimal hash that can be
    The hashing algorithm relies on the inherent properties set in the ARM ARM
    The hash algorithm is quite simple and can easily be implemented in assembly
            That's why all successful congestion control algorithms must
    improved algorithm of matching ACPI device IDs used for ACPI scan
    overflow protection algorithm in receiving sockets so that it
     * More tweaking to the EFI variable anti-bricking algorithm. Quite a
    also defaults ath9k to use the minstrel_ht rate control algorithm.
    The ath9k rate control algorithm has various architectural
    algorithm so that the BMBT block owner information can be updated
    algorithm so that the BMBT block owner information can be updated
    algorithms may run whilst the AP is asleepi and require to wake the AP
    hard-interface.c has to do not contain any routing algorithm
    useless and algorithm specific member initialisation
    is idle. This algorithm is on top of beacon filtering feature. Enable
    on the power save algorithm.
    the writeback data integrity algorithm that uses a mark-and-sweep
    use this faster algorithm when crct10dif_pclmul module is loaded.
    Fixes a race on driver init with registering algorithms where the
    the writeback data integrity algorithm that uses a mark-and-sweep
    data. The original algorithm sends a TMC request for each subset of the data
    Given the fact that we have not written hierarchical algorithm in a
    the behaviour of algorithms (such as allocation) to improve test
    change any algorithms, and will allow us to find strange "out of
    Here is patch, which adds Linus's cputime scaling algorithm to the
    Linus crated a different algorithm, which completely avoids the
    lib/int_sqrt.c: optimize square root algorithm
    algorithm, described by John von Newmann[1] and Guy L Steele.
    [ 1952.639373] EDAC DEBUG: decode_mtr:          Scrub algorithm for x8 is on enhanced mode
    [ 1952.639387] EDAC DEBUG: decode_mtr:          Scrub algorithm for x8 is on enhanced mode
     * The EFI variable anti-bricking algorithm merged in -rc8 broke booting
     * The anti-bricking algorithm also introduced a compiler warning on
    and CPUs going up, as well as documentation on the used algorithms,
    The algorithm uses a simple LRU mechanism that removes (if needed) the
    The algorithm allows the user to change the maximum number of
    Thus we add a simple algorithm here that detects an 'interrupt storm'
    v2: Fix the algorithm to actually use the scaled gpu frequency for the ring.
    KVM: VMX: Add the deliver posted interrupt algorithm
    algorithm ID, include these in the algorithm list.
    based on the previous simplistic algorithm. This is inconsistent with
    algorithm to check weights by using minimum weights in the
    The webcam "SpeedLink VAD Laplace" (em2765 + ov2640) uses a special algorithm
    algorithm always succeeds there although no slave device is connected.
    The algorithm likely also works for real i2c client devices (OV2640 uses SCCB),
    phy: Elimination the forced speed reduction algorithm.
    100 duplex full) with an ethernet cable plugged off, the mentioned algorithm
    on the state of the quota. We use the same general algorithm to
    cached for later use by the throttling algorithm.
    be a headset mic jack. The algorithm can be later refined if needed.
    The implementaion follows the three steps of SACK enhanced algorithm
    In addition to the RFC algorithm, a spurious timeout may be detected
    While the algorithm in the RFC does not change the congestion control,
    existing Eifel undo algorithms like DSACK or TCP timestamp based
      drm/mgag200: Bug fix: Modified pll algorithm for EH project
    since the last iteration. That algorithm isn't going to work if
    Freescale. It is capable of performing cipher algorithms
    (separate encryption and integrity algorithms) does not conform
    (separate encryption and integrity algorithms) does not conform
    drm/mgag200: Bug fix: Modified pll algorithm for EH project
    algorithm with the previous mgag200 xorg driver pll algorithm,
    discrepencies were found.  Once the kms pll algorithm was
    algorithm with a loss detection scheme.
    from the sender. The loss detection algorithm relies on counting
    This patch series implement the Tail loss probe (TLP) algorithm described
    first patch implements the basic algorithm.
    (ER) algorithm, such that ER and TLP together can in principle recover any
    The Kconfig entry for CAAM's hash algorithm implementations has always
    The updated speculative preallocation algorithm for handling sparse
    available RAM affect the writeback bandwidth slicing algorithm,
    to charge algorithm driver started from 0. As a result,charge
    algorithm was going into wrong state and charging was stopped.
    what the FG-algorithm says. This made fg get stuck at 1% if
    The driver assumed that the rate control algorithm made a
    use them together, but that causes the algorithm to not
    increase the readability of the algorithm.
    Both rate control algorithms (minstrel and minstrel_ht) calculate
    By definition of (the algorithm of) QFQ+, the system virtual time must
      DM RAID: Add support for MD's RAID10 "far" and "offset" algorithms
      MD RAID10: Improve redundancy for 'far' and 'offset' algorithms (part 2)
      MD RAID10: Improve redundancy for 'far' and 'offset' algorithms (part 1)
    DM RAID: Add support for MD's RAID10 "far" and "offset" algorithms
    DM RAID:  Add support for MD's RAID10 "far" and "offset" algorithms
    algorithms, but only with the improved redundancy that is brought with
    the RAID10 algorithm can be found in the opening comments of
    MD RAID10: Improve redundancy for 'far' and 'offset' algorithms (part 2)
    MD RAID10:  Improve redundancy for 'far' and 'offset' algorithms (part 2)
                    "far" algorithm
    MD RAID10: Improve redundancy for 'far' and 'offset' algorithms (part 1)
    The MD RAID10 'far' and 'offset' algorithms make copies of entire stripe
                    "far" algorithm
                    "offset" algorithm
    Redundancy for these algorithms is gained by shifting the copied stripes
    The above "far" algorithm example would change to:
                    "far" algorithm
    We cannot simply replace the old algorithms, so the 17th bit of the 'layout'
    "far" algorithm or the "offset" algorithm is being used.)
      MODSIGN: Specify the hash algorithm on sign-file command line
    based on a sane algorithm in shrink_inactive_list().
    For the non current case, the algorithm used by get_ptep is derived from the
    1/ The structures used for the netlink based crypto algorithm report API
    Also switch to use strncpy() to copy the algorithm's name and
    limit used by the flow control algorithm, and is there only
    the rate control algorithm and driver. Instead of doing it
    let the driver and rate control algorithm know.
    The algorithm is modified to prevent EOF speculative preallocation
    2) Prepare xfrm and pf_key for algorithms without pf_key support,
    instead of the current complex custom algorithm.
    i2c: mxs: Implement arbitrary clock speed derivation algorithm
    This new algorithm is also only derived by using a scope, but it seems
    the old algorithm.  This commit therefore updates them to match the
    new algorithm.
    different hash algorithms, the hash used in this patch is calculated
    during the IMA collection phase, based on the configured algorithm.
    The default algorithm is sha1, but for backwards compatibility md5
    generated using a sha1 hash algorithm.
    As the rate scaling algorithm will attempt to enable
    pf_key/xfrm_algo: prepare pf_key and xfrm_algo for new algorithms without pfkey support
    Mark existing algorithms as pfkey supported and make pfkey only use algorithms
    out the algorithm into a common function that uses register
    instead of the current complex custom algorithm.
    MODSIGN: Specify the hash algorithm on sign-file command line
      was causing a bug on our option parsing algorithm.
    ASoC: wm_adsp: Use GFP_DMA for algorithm readback
    This patch adds crc32 algorithms to shash crypto api. One is wrapper to
    crypto: omap-aes - Add CTR algorithm Support
    module support the CTR algorithm in addition to ECB
    in an ealier commit to hold the list of algorithms
    will use that list to register the correct algorithms.
    algorithm the voltage read is the loaded battery voltage and no
      were a number of cases that the more complex algorithm made worse
    ASoC: wm_adsp: Implement support for algorithm-specific coefficient blocks
    WMDR coefficient files can specify coefficients in terms of algorithm
    parsing the algorithms and then use them to handle coefficients with
    ASoC: wm_asdp: Validate sanity of algorithm count
    If we run into I/O problems the algorithm count may be crazy, validate it
    ASoC: wm_adsp: Add support for parsing algorithms
    ADSP devices report information on the algorithms loaded on them.  Parse
    algorithms.
    ctr(aes) algorithms to be utilized automatically by IPSEC.
    in an ealier commit to hold the list of algorithms
    will use that list to register the correct algorithms.
    struct i2c_algorithm.
      layout, but also for selecting allocation and cleaning algorithms.
    to represent Bayer format frames compressed by A-LAW algorithm,
    algorithm selectable.  This is all well and good, but Linus noted that it
    algorithm, so we don't needlessly bloat the kernel by forcing a non-none
     - Allow compression algorithms in FIPS mode.
            "autonuma: memory follows CPU algorithm and task/mm_autonuma stats
      a cost-benefit algorithm, while on-demand cleaning uses a greedy algorithm.
    Patch just set fips_enabled flag to 1 to all compression algorithms
    wlcore: improved Tx scheduling algorithm
    fast/slow link bitmap in FW to improve the scheduling algorithm for
    The improved algorithm:
    improved Tx scheduling algorithm.
    replace only the accessory identification parts of the algorithm (eg,
      ACPICA: AcpiExec: Improve algorithm for tracking memory leaks
    This patch adds device tree support for charging algorithm driver
    custom charging algorithms based on platform state.
    ACPICA: AcpiExec: Improve algorithm for tracking memory leaks
    rcu: Document alternative RCU/reference-count algorithms
    algorithm was changed for an established connection, but the common case of
    configuring the algorithm before connecting was still broken.  Fix that.
    only return hash algorithms.  It is not necessary to reconfirm that we
    actually got a hash algorithm.
    I compared the performance of both algorithms side by side and the new
    algorithm is noticeably faster. Sample instrumentation output from a
    the new algorithm was put in place and postmark showed a decent
    Before the new algorithm:
    With the new algorithm:
    This patch improves the ASID allocation algorithm by using a
    generic thermal layer. This algorithm throttles the
      net: fix divide by zero in tcp algorithm illinois
    net: fix divide by zero in tcp algorithm illinois
    Reading TCP stats when using TCP Illinois congestion control algorithm
    clock. Rather than hard coding any kind of estimation algorithm into the
    sctp: Make hmac algorithm selection for cookie generation dynamic
    Currently sctp allows for the optional use of md5 of sha1 hmac algorithms to
    add a sysctl that allows for the dynamic selection of these algorithms at run
    hmac algorithm.  I chose not to implement that intentionally, as RFC 6458
    In addition to the existing algorithm, flip bit 7 of 5th octet. Since both
    This algorithm silently assumes that the register does not contain
    Fix the algorithm to really do a read-modify-write cycle. This fixes
    Delays caused by IRQ latency won't confuse the algorithm unless they
    indicate that our training algorithm isn't robust enough anyway and
    A white paper detailing the algorithm can be found here:
    signature so that the hash algorithm is guaranteed to be present in the kernel.
    itself - but this won't work if the digest algorithm must be loaded as a
         'algo' contains the public-key algorithm identifier (0->DSA, 1->RSA).
         'hash' contains the digest algorithm identifier (0->MD4, 1->MD5, 2->SHA1,
    recursive algorithms, we can expose it a bit more.
    algorithms are similar to lib/interval_tree.c; however that code can't be
    VMA.  So instead, the common algorithm is moved into a template and the
    trees as well, as this is the simpler and more well known algorithm.  prio
    tree algorithm ends up running faster than the more clever prio tree.
    coloring/rebalancing algorithms keep it up to date.
      be further branches in the algorithm)
                    algorithm               AlgorithmIdentifier,
    RSA: Implement signature verification algorithm [PKCS#1 / RFC3447]
    the signature verification algorithm is supported.  This uses the asymmetric
    This should be filled in prior to calling the function.  The hash algorithm
    algorithm becomes available for which this is not the case, the above structure
    It is also assumed that it will have been checked that the signature algorithm
    matches the key algorithm.
    KEYS: Asymmetric public-key algorithm crypto key subtype
    Add a subtype for supporting asymmetric public-key encryption algorithms such
    cryptographic algorithms.
    resides inside the algorithm code and does not know how to handle a custom
    To allow users to choose an elevator algorithm for their particular
    genalloc: make it possible to use a custom allocation algorithm
    Premit use of another algorithm than the default first-fit one.  For
    example a custom algorithm could be used to manage alignment requirements.
    allocation algorithm.
    Add of best-fit algorithm function:
    best-fit algorithm
    This new algorithm help to remove static allocations on ESRAM, a small but
    fine tune the allocation algorithm. I my case best-fit algorithm give
     - Add/use multi-algorithm registration helpers where possible.
      crypto: Build SPARC DES algorithms on SPARC only.
    crypto: Build SPARC DES algorithms on SPARC only.
    Current VFs enumeration algorithm used in be_find_vfs does not take domain
    This because the algorithm of disk_i_size update is wrong. Though there are
    The algorithm for handling P_Key tables which contain both the limited
    Current VFs enumeration algorithm used in be_find_vfs does not take domain
    as both active and passive cooling can share the same algorithm,
    The current quiescent-state detection algorithm is needlessly
    slots. The algorithm used is based on Lagrange relaxation, and performs
    [SCSI] lpfc 8.3.33: Make I/O to hw queue distribution algorithm a module parameter
    >> the zig-zag-algorithm or just the set frequency to tune to.
    that we are stopping the ANI algorithm.
    this is not true if an async crypto algorithm is employed.
    Use proportional rate reduction (PRR) algorithm to reduce cwnd in CWR state,
    use the same algorithm:
    To prepare replacing rate halving with PRR algorithm in CWR state.
    To prepare replacing rate halving with PRR algorithm in CWR state.
    ablkcipher, and hash algorithms are all common; move them to a
    atomic_dec-based mutex algorithm is now marginally more efficient for
    processing algorithms efficiently and autonomously, while the host
    The algorithm chosen (xor'ing the bottom three quads of the source and
    from server logs. This algorithm had the most even distribution for both
    behavior also attempts to closely match that of the IPv4 algorithm.
    algorithm not using the flow label already offers a very even distribution.
      drm/mgag200: fix G200ER pll picking algorithm
    need to use the generic lockbreak algorithm. Remove the Kconfig
    drm/mgag200: fix G200ER pll picking algorithm
    use them together, but that causes the algorithm to not
    crypto modules that register multiple algorithms.
    peer received, breaking the algorithms and resulting in low
    distance based algorithm sometimes can cause severe performance issue for SSD
    algorithm doesn't work well too.
    V2: For hard disk and SSD mixed raid, doesn't use distance based algorithm for
    random IO too. This makes the algorithm generic for raid with SSD.
    based algorithm, where this change help detect truly sequential read for SSD.
    struct i2c_algorithm. Moreover, i2c_algo field is not used since
    struct i2c_algorithm. Moreover, i2c_algo field is not used since
    struct i2c_algorithm. Moreover, i2c_algo field is not used since
    struct i2c_algorithm. Moreover, i2c_algo field is not used since
    The solution, the algorithm for which has been outlined by
      ARM: 7446/1: spinlock: use ticket algorithm for ARMv6+ locking implementation
     - Fixed algorithm construction hang when self-test fails.
      crypto: talitos - add sha224, sha384 and sha512 to existing AEAD algorithms
    Currently the backoff algorithm for when to retry alua rtpg
    aggressive backoff algorithm that is additive would not
    uses the same algorithm to fix the tsi148.
    as the last stage. Current algorithm merges the two phases
    crypto: talitos - add sha224, sha384 and sha512 to existing AEAD algorithms
        . A multi-standard baseband algorithm accelerator for Channel
          UP/DL Channel processing, and CRC algorithms
    same algorithm as x86. We use the fls macro from ARMv5 onwards, where
    ARM: 7446/1: spinlock: use ticket algorithm for ARMv6+ locking implementation
    This patch implements the ticket spinlock algorithm for ARM, replacing
    Fix this by using the same algorithm for 16bit and 13bit
    There are several bugs at the signal strength algorithm:
    files and files that implement the actual B.A.T.M.A.N. path finding algorithm.
    also opens the door for future optimized rpfilter algorithms that do
    caam supports and registers unkeyed sha algorithms and md5.
    caam supports ahash hmac with sha algorithms and md5.
    usually caused by an algorithm failing to pass the self-test.
    If an algorithm fails to be constructed, we will immediately notify
    where the algorithm fails to be constructed with that of the
    different authentication algorithms.
    code, but it restores the same algorithm as was previously used.
      kconfig: update compression algorithm info
    kconfig: update compression algorithm info
    There have been new compression algorithms added without updating nearby
    algorithms and (b) the most recent one.  Fix these inconsistencies.
    Next: there are two algorithms to print larger numbers.  One is generic:
    Second algorithm splits 64-bit unsigned long long into 16-bit chunks,
    will use the first algorithm.  If long long is > 64 bits (strange
    architecture with VERY large long long), second algorithm can't be used,
    on little-endian the generic algorithms are wasteful, since you can
     - WORD_AT_A_TIME_CONSTANTS: specific constants that the algorithm
     4) Lai Jiangshan's algorithmic implementation of SRCU, which includes
      rcu: Implement a variant of Peter's SRCU algorithm
      rcu: Direct algorithmic SRCU implementation
    will be reworked into a more exact algorithm at a later stage. But for
    high, but internally it implements the same algorithm that is needed for
    speed up the search algorithm by checking if the address to look for
    algorithms, as it can skip full pages when the search address is
    This will allow the bsearch algorithm to be sped up as it can
    [media] cxd2820r: tweak search algorithm behavior
    The applications can control each of the algorithms independently,
    processing and capture control algorithm optimized for common
    level the auto-gain algorithm aims for.
    [media] gscpa_pac207: Switch to coarse_grained_expo auto gain algorithm
    big steps. So lets use an autogain algorithm optimised for that.
     4)     Lai Jiangshan's algorithmic implementation of SRCU, which includes
    * minor improvement for the routing algorithm
    srcu:   Lai Jiangshan's algorithmic implementation of SRCU, including
    algorithm is released.
    include/net/codel.h contains codel algorithm as close as possible than
    complex algorithm if more complex things start to happen.
    algorithm in any way.
    operation IE, have the rate control algorithm respect this by disabling
    enumeration is no longer used.  Instead a generic algorithm internal
    the v4l algorithm works with the correct set of hardware supported
    [media] gspca_pac7311: Switch to coarse expo autogain algorithm
    making our expo control coarse, switch to an autogain algorithm optimized for
    derived magic algorithms.
    While the algorithm is simple, small but frequent network reordering
    derived magic algorithms.
    on dig_encoder. We didn't really need that algorithm.
    The earlier algorithm used an "expedited" flag combined with a "trycount"
    rcu: Implement a variant of Peter's SRCU algorithm
    This commit implements a variant of Peter's algorithm, which may be found
    rcu: Direct algorithmic SRCU implementation
    takes a strictly algorithmic bits-in-memory approach.  This has the
    ext4: make block group checksums use metadata_csum algorithm
    checksum calculation algorithm use either crc16 or the metadata_csum
    chosen algorithm depending on which flag is set.  Print a warning if
    ext4: record the checksum algorithm in use in the superblock
    Record the type of checksum algorithm we're using for metadata in the
    superblock, in case we ever want/need to change the algorithm.
    ftrace had to do a complex algorithm with various stages of setup
    Simple algorithm, just look for the next backward jump that points to
    MCS rates being used by the rate control algorithm even if no ht had
    fack-based congestion algorithm survives dropping all of the stats
    ieee80211 phy0: Selected rate control algorithm 'minstrel_ht'
    Implement aggregation algorithm, combining more data into a single
    The current virtio block's naming algorithm just supports 18278
    just like external rate control algorithms get a
    the rate control algorithm about the desired
     - Fix for user-space algorithm lookup hang with IV generators.
     - Fix for netlink dump of algorithms where stuff went missing due to
      crypto: user - Fix lookup of algorithms with IV generator
    lot of algorithms to userspace. As a result, not all of the instantiated
    algorithms dumped to userspace. So calculate an upper bound on the message
    crypto: user - Fix lookup of algorithms with IV generator
    We lookup algorithms with crypto_alg_mod_lookup() when instantiating via
    crypto_add_alg(). However, algorithms that are wrapped by an IV genearator
    (e.g. aead or genicv type algorithms) need special care. The userspace
    to lookup these algorithms. So export the lookup functions for these
    algorithms and use them in crypto_add_alg().
    Validate checksum algorithm during mount and prevent BUG_ON later in
      crc32: add help text for the algorithm select option
    crc32: add help text for the algorithm select option
    Add help text to the crc32 algorithm selection option in Kconfig.
      crc32: select an algorithm via Kconfig
      crc32: add slice-by-8 algorithm to existing code
    the algorithm can correct a max of 8 bits in 4200 bits ie the error indices can
    mtd: fsmc: Newly erased page read algorithm implemented
    less than 8, the page is considered erased and correction algorithm is not tried
    abx500 charging algorithm driver to monitor the battery.
    This information in turn will be used by the abx500 charging algorithm driver
    abx500-chargalg: Add abx500 charging algorithm
    This is a charging algorithm driver for abx500 variants. It is the central
    crc32: select an algorithm via Kconfig
    Allow the kernel builder to choose a crc32* algorithm for the kernel.
    crc32: add slice-by-8 algorithm to existing code
    Add slicing-by-8 algorithm to the existing slicing-by-4 algorithm.  This
    crc32.c provides a choice of one of several algorithms for computing the
    step of the algorithm so that the old value 8 has been replaced with the
    This also allows us to add in a widely used crc algorithm that computes
    the crc 8 bits at a time called the Sarwate algorithm.
    algorithm.
         configuration of algorithm coefficients.
      * Bulk algorithm registration interface to make driver registration easier.
      crypto: Add bulk algorithm registration interface
    algorithm fails to get a valid tsc_start value in
    should skip the refined tsc algorithm.
    algorithm.
    algorithm are also put into the private struct.
    in order to configure the rate control algorithm, but uses
    compression algorithms.
    algorithms.
    The auto gain uses the knee algorithm.
    mesh synchronization algorithms.
      of algorithm coefficients.
    smoothed exponential estimates and the algorithm used is
    3. To improve the algorithm for selecting resource groups for
    The revised algorithm for detecting a duplicate node considers both the
    The algorithm also handles cases in which a node reboots and re-establishes
    Some of the comments for the nesting NMI algorithm were stale and
    rate control algorithms concludes the rate as invalid
    controls for algorithms in the register blocks which also hold the
    if the delimiter is printed or not. But this algorithm fails when
    batman-adv: export used routing algorithm via sysfs
    batman-adv: allowing changing the routing algorithm via module parameter
    batman-adv: convert batman iv algorithm to use dynamic infrastructure
    batman-adv: add infrastructure to change routing algorithm at runtime
    Rate control algorithms are supposed to stop processing when they
    tipc: Major redesign of broadcast link ACK/NACK algorithms
    operability with nodes using the "classic" algorithms is maintained.
    The revised algorithms are as follows:
    tipc: improve the link deferred queue insertion algorithm
    Re-code the algorithm for inserting an out-of-sequence message into
    for smaller buffers if anyone modifies the algorithm for rectangle
    modify that algorithm is to tune the performance of buffer moves).
    * Match rates provided by the rate control algorithm to the mask set,
    crypto: Add bulk algorithm registration interface
    different algorithms with the core. Simplify their code slightly,
    number of algorithms in a single call.
    support swapping rate control algorithms at
    Update the loss heuristic comments. The algorithm above is documented
    Added CRYPTO dependency and selected SHA1 algorithm.
    caam ffe300000.crypto: fsl,sec-v4.0 algorithms registered in /proc/crypto
    crypto: caam - add sha224 and sha384 variants to existing AEAD algorithms
    epoll file descriptors that cause the epoll algorithms to traverse them
    To fix the loop detection path check algorithms, I simply keep track of
    This dramatically decreases the run-time of the loop check algorithm.  In
    algorithms to have this information, the function should be
    Credit for discovering the BCH algorith parameters, and bit
    reversing algorithm is to be give to Mike Dunn and Ivan
    Just like the other DVB algorithms, drivers should use the DVBv5
    hardware algorithm wants the driver to re-tune or not.
    the anti-flicker algorithm is also enabled in automatic frequency detection
    hmac algorithms").
    next check point selected by the dirty throttling algorithm.
    different algorithm, more similar to what Apple does, that treats those
    the current maximum, not the guest lifetime max). The existing algorithm
    max_queue_depth.  The algorithm for calculating the
    Modify the algorithm to build the source hashing hash table to add
    OTOH, we now have a fine, run time performed clock selection algorithm
    idea is stolen from current omap24xx clock rate selection algorithm.
    Allocation algorithm (SiTA).  The purpose of the algorithm is to keep
      xfs: fix the logspace waiting algorithm
    xfs: fix the logspace waiting algorithm
    algorithm for waiting on log space instead of subtly different ones before,
    In my tests the new algorithm was a tad faster than the original and has
    Care must be taken as the rescheduling algorithm is O(n!) which will
    2 states to limit the number of loops the algorithm takes in the worst
    previous algorithm.
    The algorithm is modified so that the range of weight values is now
    algorithm that hands out device BARs in a way that makes them fit in
    controllers than, for example SCSI RAID controllers. This algorithm
    Some platforms need to perform resource allocation using a custom algorithm
    crypto: caam - add support for MD5 algorithm variants
    specifically, add these algorithm combinations:
    talitos prints every algorithm it registers at module load time.
    user of algorithm registration status in /proc/crypto, like so:
    talitos ffe30000.crypto: fsl,sec3.1 algorithms registered in /proc/crypto
    crypto: talitos - add hmac algorithms
    Add these hmac algorithms to talitos:
    Fixed up to not register HMAC algorithms on sec2.0 devices.
    Commits 2cdc6899a8 ("crypto: ghash - Add GHASH digest algorithm for
    iwlwifi: fix rate-scaling algorithm for BT combo devices
    is active. A bug in the rate-scaling algorithm was causing the combo
    device to never attempt MIMO rates. Fix the algorithm to
    Initialize rate control algorithms only when supported rates are known
    headers. The signature header contains version information, algorithm,
    tcp: Fix comments for Nagle algorithm
    Users probably don't care about the specific compression algorithm and
    we might want to use a different algorithm (snappy being the one I'm
      crypto: Add userspace report for compress type algorithms
      crypto: Add userspace report for cipher type algorithms
      crypto: Add userspace report for rng type algorithms
      crypto: Add userspace report for pcompress type algorithms
      crypto: Add userspace report for nivaead type algorithms
      crypto: Add userspace report for aead type algorithms
      crypto: Add userspace report for givcipher type algorithms
      crypto: Add userspace report for ablkcipher type algorithms
      crypto: Add userspace report for blkcipher type algorithms
      crypto: Add userspace report for ahash type algorithms
    Useful for analyzing the dynamics of the throttling algorithms and
    Docs: wording: functions -> algorithm
    CORDIC algorithm.
      [SCSI] lpfc 8.3.27: Change algorithm for getting physical port name
    The main algorithm behind the XOR engine is the 2 dimensional array:
    The algorithm described in the comment compares two reads from the RTC but
    crypto: Add userspace report for compress type algorithms
    crypto: Add userspace report for cipher type algorithms
    crypto: Add userspace report for rng type algorithms
    crypto: Add userspace report for pcompress type algorithms
    crypto: Add userspace report for nivaead type algorithms
    crypto: Add userspace report for aead type algorithms
    crypto: Add userspace report for givcipher type algorithms
    crypto: Add userspace report for ablkcipher type algorithms
    crypto: Add userspace report for blkcipher type algorithms
    crypto: Add userspace report for ahash type algorithms
    crypto: Add userspace report for shash type algorithms
    crypto: Add userspace report for larval type algorithms
    crypto algorithms to userspace.
    algorithms from userspace.
    to remove the spawns on top on an algorithm, so export
    to remove the spawns on top on an algorithm, so export
    algorithm is an instance that is build from templates.
    The allocation algorithm is the same as previously, except that we
    [SCSI] lpfc 8.3.27: Change algorithm for getting physical port name
    Implemented new algorithm for getting physical port name for all SLI4 devices
    resources using a specific algorithm to fit some HW constraints of
    The previous algorithm for dealing with overlapping concurrent writes
    correctly.  Improve it algorithm as follows:
    Commit 9b1e63e changed the concurrent write detection algorithm to only insert
    while the algorithm runs, but this case was not handled correctly.  Instead of
    making the algorithm deal with this case, switch back to adding peer requests
    rework of the the preparation algorithms were necessary.
    xfs_bmapi_allocate to clear it when the lowspace algorithm is
    leading the algorithm to believe that any window in the range 0x0000000
    kmalloc. This mulit-step algorithm was being done in one
    Therefore, I split this algorithm into three logical steps.
    As a side effect, the algorithm for building the e820 memory map is
    The keycode mangling algorithm is kept the same, so the new external
    When asyncronous crypto algorithms are used, there might be many
    DAPM algorithm - it repeats the same checks many times whenever it is run
    those numbers. Substantial changes in the algorithm may require tweaks to
    The revised algorithm now locates the link carrying the message only once,
    at the start of the enabling algorithm.
    The complication for this algorithm is that the bit of hardware logic that
    I won't go into the details of the algorithm, as it's pretty well
    In preparation of the upcoming improved routing algorithm the code based has
    to be re-organized to allow choosing the routing algorithm at compile time.
    caam, and the algorithms it supports, and disable the
    PRR is an algorithm that determines TCP's sending rate in fast
    algorithm. PRR also improves accuracy of the amount of data sent
    replaces the existing rate halving algorithm. PRR improves upon the
    congestion control algorithm and,
    The algorithm for choosing which 2 fingers to report and in which packet:
    The DFT algorithm returns a real (R) and imaginary (I) data-word at each
    algorithms using the default coefficient sets.  Further patches will
    As cryptd is depeneded on by other algorithms such as aesni-intel,
    is still seen by the push algorithm (the loop).
    The push algorithm, which does the scan of RT priorities (and
    This is an assembler implementation of the SHA1 algorithm using the
    With this algorithm I was able to increase the throughput of a single
    Using this algorithm on a IPsec gateway gives much more reasonable and
    to reimplement the same algorithm for each SHA-1 implementation. This
    algorithm is implemented in the patch.  Where after the first
      regulator: Improve WM831x DVS VSEL selection algorithm
    or a loss once the algorithm is in Congestion Avoidance.
    regulator: Improve WM831x DVS VSEL selection algorithm
    1) it was a potentially quadratic algorithm (although highly unlikely that
    In the new code the algorithm is no longer quadratic but linear in the
    In the patch the algorithm is fixed in order to correctly handle
    Using shash is more efficient, because the algorithm is allocated only
    caam_alg_template supports multiple algorithm types
    algorithm template array do not exceed TALITOS_MAX_KEY_SIZE.
    a226f6c899 (FRV: Clean up bootmem allocator's page freeing algorithm)
    FIXME in comment since it signalled a problem in the Minstrel algorithm,
    the rate control algorithm) was not yet taking RTS/CTS into account.
    TCP congestion-window-validation algorithms. By continuing this work, it may
    Do this by adding the proper algorithm description and initialization.
    and swap 2 machine words. This allows lockless algorithms to move more
    based on the same algorithm, so we can refactor those code paths to
    lib: crc8: add new library module providing crc8 algorithm
    kernel driver using this algorithm (ie. drivers/ssb) we are providing
    w1: complete the 1-wire (w1) ds1wm driver search algorithm
    I also made a few tweaks to a couple of the read and write algorithms
    But yes, a better algorithm is needed.
    that the algorithms used in user-level RCU might be applied here, but
      Input: ad714x - fix captouch wheel option algorithm
      crypto: caam - add support for sha512 variants of existing AEAD algorithms
    'send one-by-one' algorithm).
    crypto: caam - add support for sha512 variants of existing AEAD algorithms
    data by inconsistent and overly-complex algorithms. Simplify them both.
    Input: ad714x - fix captouch wheel option algorithm
    As reported by Jean-Francois Dagenais, the wheel algorithm caused a
    In fact it turned out that the whole algorithm had several problems.
    diversity algorithm module in the rx. this will continuosly configure
    from the algorithm
      algorithm
    ASoC: Skip noop reconfiguration of WM8958 DSP2 algorithms
    If we're setting the currently applied value for one of the DSP algorithm
    The old, impure algorithm took two divisions for inverting lw->weight,
    solve this we will switch to a search-based algorithm when fN is NULL.
    Revises the algorithm governing the sending of link request messages
    Implement good battery algorithm defined in the battery charging V1.2 spec
    that the algorithms used in user-level RCU might be applied here, but
    them, following a default algorithm. This patch restores the default
    type that supports an accelerated algorithm.
    algorithm for GCM (Galois/Counter Mode).
    The specification which crypto facility is required for an algorithm is added
    as a parameter to the availability check which is done before an algorithm is
    registered. With this change it is easier to add new algorithms that require
    algorithm, and AP is configured as shared then connection never
    driver which first detects this, then tries open algorithm for the
    sctp: teach CACC algorithm about removed transports
    the data to a new active path.  This can trigger CACC algorithm
    because the transport passed to the CACC algorithm is the one
    IPv6 address, the duplicate address detection algorithm
    and Minchan slightly changed the algorithm and fixed it .
    So fix this algorithm and call it from kvm_emulate_cpuid().
    by Fabio Checconi. The same algorithm is already implemented in ipfw
    data that is transformed by an asynchronous algorithm.
    for use by others.  Only AEAD algorithms are implemented
    mlx4_en: optimize adaptive moderation algorithm for better latency
    on the algorithm used by the user virtual memory allocator.
    ASoC: Refactor WM8958 DSP to support additional algorithms
    In preparation for the addition of additional WM8958 algorithms
    algorithm will cause panic.
    [media] ds3000: hardware tune algorithm
      selinux: Fix check for xfrm selinux context algorithm
      rtmutex: Simplify PI algorithm and make highest prio task get lock
    Some algorithms need high resolution (Vegas style) but most only
    then 0 should be returned rather than no estimate. Otherwise algorithms
    We use the authencesn crypto algorithm to handle esp with separate
    encryption/authentication algorithms.
    We use the authencesn crypto algorithm to handle esp with separate
    encryption/authentication algorithms.
    crypto: authencesn - Add algorithm to handle IPsec extended sequence numbers
    ESP with separate encryption/authentication algorithms needs a special
    treatment for the associated data. This patch add a new algorithm that
    allocation algorithm on arches that support fast this_cpu_ops.
    implements recently developed algorithms for fast polynomial root finding
    If drbd used to have crypto digest algorithms configured, then is being
    unconfigured (but not unloaded), it frees the algorithms, but does not
    algorithm, it "forgot" to re-allocate the algorithms, thinking that the
    It will then Oops on the first attempt to actually use those algorithms.
    algorithm in anticipation of the new scheme.
    Then we use a tested bubble sort algorithm to sort the array.
    incorrect crc algorithm (ether_crc_le) instead of (ether_crc).
    Increase resolution of MaxBW algorithm to suit
      bnx2x: properly configure coefficients for MinBW algorithm (NPAR mode).
    ieee80211 phy0: Selected rate control algorithm 'minstrel_ht'
    bnx2x: properly configure coefficients for MinBW algorithm (NPAR mode).
    selinux: Fix check for xfrm selinux context algorithm
    interpretation against the selinux context algorithm. This patch
    fixes this by checking ctx_alg against the selinux context algorithm.
    * Do not fail if the peer supports more or less than 3 algorithms.
     * Ignore unknown congestion control algorithms instead of failing.
     * Simplify congestion algorithm negotiation (largest is best).
    incorrect crc algorithm (ether_crc_le) instead of (ether_crc).
    General SFB algorithm can be found in figure 14, page 15:
    have to change the algorithms to generate the perfctr's msr addresses.
    algorithm.
    For most of the authentication algorithms, the ICV size is 96 bits.
    the state as we go. The algorithm is simply:
    This allows users to tune the connection-loss algorithms
    packet scheduler based on the Random Exponential Drop (RED) algorithm.
       rtmutex: Simplify PI algorithm and make highest prio task get lock
    The routing algorithm must be able to decide if a fragment can be merged with
    The routing algorithm must know how large two fragments are to be able to
    fips_allowed algorithm. Because of gcm's dependence on what is now seen
    as a non-fips_allowed algorithm, its self-tests refuse to run.
    rtmutex: Simplify PI algorithm and make highest prio task get lock
    The algorithm is much simpler than before, no pending owner, no
    The iwlagn powersave algorithm uses the supports_idle parameter
    algorithms one of these algorithms being the extended transmission
    selection algorithm currently being used for DCB.
    pathwalk algorithm to handle directories with follow_link() semantics.
    this point the pathwalk algorithm will be in ref-walk mode.
    optimal value by default.  This moves the hugeadm algorithm in kernel.
    XZ compression algorithm.
    we can do without adding rather sophisticated algorithms to either the EC
      xfs: convert grant head manipulations to lockless algorithm
    Westmere processors use a different algorithm for
    Remove ADC gain from the supported calibration algorithms.
    algorithm used to calculate the hash resulting in a 35x / 3500% performance
    apply the one algorithm in software or hardware.  NETIF_F_HW_CSUM has the
    algorithm which is a refcount based walk, or ref-walk.
    algorithm performance is critical and seqlocks are in use.
    UBIFS scanning and recovery algorithms are able to perform
    programming algorithm. In case of NAND flash mtd->writebufsize
    Also set the algorithm data const, use strlcpy instead of strcpy, fix
    Lzo is a much faster compression algorithm than gzib, so would allow
    btrfs: Allow to add new compression algorithm
    xfs: convert grant head manipulations to lockless algorithm
    calculations to be executed, which the algorithms currently don't allow.
    To make these multi-step calculations atomic, convert the algorithms to
    selection algorithm (HWMP, implemented in the kernel), and a vendor
    The cnt32_to_63 algorithm relies on proper counter data evaluation
    Allow drivers or rate control algorithms to specify BlockAck session
    Due to the changed algorithm, we can now use arbitrarily many buffer
    If the rate control algorithm filled in txrc.reported_rate we don't need
    converting the accounting algorithms to atomic operations. his patch
    just converts the variables; the algorithmic changes are in a
    Blind copy of codec finding algorithm from soc_bind_dai_link does not work
    toa different algorithm, factor them so both the gratn heads use the
    A lot of crypto algorithms implement their own chaining function.
    So add a generic one that can be used from all the algorithms that
    perf session: Fix list sort algorithm
    The homebrewn sort algorithm fails to sort in time order. One of the problem
    Staging: sst: add ioctls for post processing algorithm interface
    This i/f can be used by application to send algorithm parameters
    Each algorithm type will provide its own implementation that plugs
    Disconnected antenna algorithm is used to find out which antennas are
    Disconnected antenna algorithm is seperated into its own function from chain noise
    new circular buffer interface. It contributes a new algorithm which
    essential, since analysis and experience showed that the basic algorithm was
    The algorithm now
    fbdev: export fb_edid_add_monspecs() for modules, improve algorithm
    selected. This patch also improves the algorithm by removing a redundant
     (b) A `tail_seqno' field. When naively implementing the algorithm of Appendix A
    There are no real algorithmic changes, rather an adaptation:
    crypto: hash - Fix async import on shash algorithm
    signed integers are actually necessary for the algorithm to work.
    always pick the closest supported frequency. The algorithm could
      crypto: fips - FIPS requires algorithm self-tests
    drivers/i2c/algos/Kconfig makes all the algorithms dependent on
    dependencies when some driver selects one of the algorithms. Ideally
    The mm system on Book3s_32 instead uses a clever algorithm to distribute VSIDs
    debugger.  The algorithm for entering the kernel debug core and
    different walk algorithm, so separate it out so that it can be
    algorithm:
    and we wish to reuse the same rate rounding algorithm.
    This patch attempts to ensure that ath9k's built-in rate control algorithm
    algorithms handling of A-MPDU frames:
    if the rate control algorithm sets IEEE80211_TX_CTL_RATE_CTRL_PROBE.
    algorithm but instead use their own retry table (for example rt2800).
    the rc algorithm cannot make use of the extended information the device
    registers itself with a max_rates value > 1 the rc algorithm assumes
    When TCP uses FACK algorithm to mark lost packets in
    [   41.261941] ieee80211 phy0: Selected rate control algorithm 'minstrel_ht'
    dccp ccid-3: A lower bound for the inter-packet scheduling algorithm
    The algorithm from RFC 5348, 8.3 below continually computes a send time t_nom,
    changing the above algorithm to:
    is not updated by rs algorithm
    ath9k: Implement an algorithm for Antenna diversity and combining
    This algorithm chooses the best main and alt lna out of
    The Kernighan algorithm is not able to calculate the number of set bits
    crypto: fips - FIPS requires algorithm self-tests
    broke that limit slightly with some algorithms. In discussing with
      - built-in scanning algorithm
    a driver advertises an algorithm that cfg80211
    drivers can specify any algorithm they like.
    dccp ccid-2: Replace broken RTT estimator with better algorithm
    Reasons for reusing the Linux TCP estimator algorithm:
      different scheduling algorithms for queue and group scheduling. These IOPS
    including a missing crypto algorithm.  Change ieee80211_key_alloc()
    Add a simple algorithm which calculates the pixel clock based on the video
    algorithm used for calculating it.
    element, and so on. This patch simplifies the algorithm, which is now as
    The algorithm handling manual update overlay adjusting may adjust the
    Replace phys_to_dma()/dma_to_phys() looping algorithm with an O(1) algorithm
    This implementation is inefficient due to our main algorithm and
    different algorithm alltogether.
    gettimeofday() algorithm computes the time in "xsecs", which are
    using the algorithm
    The new algorithm is
    - Enhanced round-robin FCF failover algorithm to re-start on "New FCF"
    rates as the rate control algorithm always finds MCS15 is better
    The pv clock algorithm needs to work correctly for the xen_clocksource
    reliably find a PLL setting.  I extracted the search algorithm and
    IB/qib: Allow PSM to select from multiple port assignment algorithms
    which affected only the ahash algorithms.
    if padata user uses algorithm for callback CPU selection according to serial cpumask.
    gettimeofday() algorithm computes the time in "xsecs", which are
    using the algorithm
    The new algorithm is
        Probably it is possible to get a better algorithm for calculating
    mac82011: Allow selection of minstrel_ht as default rc algorithm
    Allow selection of minstrel_ht as default rate control algorithm. At
    This should avoid problems with the sequence number sliding window algorithm
    which were then ignored by the rate control algorithm and mac80211.
    the lowest rate (index 0). This should give the rate control algorithm
    Before this patch we reported success to the rate control algorithm which
    each non-empty bucket.  The whole algorithm is O(n^2).
    buckets  the table.  This algorithm t read the whole table is O(n).
    twofish_generic according to the other algorithms with assembler
    Use the same color-calculating algorithm as in atyfb_imageblit in this
    mac80211: add the minstrel_ht rate control algorithm
    - In the worst case, the algorithm used by update_queue() is O(N^2).
    The algorithm that is used to identify the tasks is O(N^2) in the worst
    n2_crypto: Log algorithm success/failure in kernel log.
      crypto: talitos - add hash algorithms
      crypto: talitos - second prepare step for adding ahash algorithms
      crypto: talitos - prepare for adding ahash algorithms
    calculates the boundary value, too.  The changed algorithm leads to
    It will be back as soon as an algorithm will be found.
    algorithm but the code is duplicated and slightly different in each
    the existing algorithm adversely.
    crypto: talitos - add hash algorithms
    crypto: talitos - second prepare step for adding ahash algorithms
    so that it will accommodate ahash algorithms.
    No actual algorithms yet.
    crypto: talitos - prepare for adding ahash algorithms
    Extend testmgr such that it tests async hash algorithms,
    The cost of async vs. sync for the software algorithm implementations
    IP checksum is based on 16-bit one's complement algorithm, so to deduce a
    type, it lacks the ARC4 algorithm execution unit required to be able
    The algorithm to find the offset in the msrpm for a given
    estimator algorithm.
    wrong information to the routing algorithm after the memory area is
    This algorithm falls flat on its face in the light of workloads
    This patch changes the ondemand algorithm to count iowait time
    perf: Provide a new deterministic events reordering algorithm
    The current events reordering algorithm is based on a heuristic that
    algorithm, we need to know when we reach a point where we just
                    * HT rate control algorithm
    Back before e1000-7.3.20, the e1000 driver had a simple algorithm that
    [SCSI] qla4xxx: Updated firmware ready timeout algorithm
    Updated firmware ready timeout algorithm to prevent
    sctp: fast recovery algorithm is per association.
    SCTP fast recovery algorithm really applies per association
    SCTP congestion control algorithms.
    The algorithm is supposed to look for a config whose first interface
    frame based on information from the rate control algorithm. However, for
    as the rate control algorithm is not executed, and because the used rate is
      drm/edid: Strengthen the algorithm for standard mode codes
    LDPC will be enabled through the rate control algorithm
    fullfills the algorithms and state machines for these components and
    [SCSI] mpt2sas : Device removal algorithm in interrupt context only
    removal algorithm. There is duplicate code in both interrupt and user
    The current algorithm will sometimes "detect" that
    have implemented some things differently, the basic algorithm is practically
    algorithm later.
    drm/edid: Strengthen the algorithm for standard mode codes
    The averaging algorithm is copied from rt2x00, Thanks :)
    algorithmically, this is required on AR9271.
      * use jhash2 rather than some old BSD algorithm
    This patch is to fix the vmac algorithm, add more test cases for vmac,
    The rate control algorithm, default is Minstrel for ath5k, determines
    control algorithm.  This changes the number of retries the rate
    control algorithm considers necessary.  By removing the
    algorithm is given control over the number of retries.
    algorithms using the standard mac80211 rate control API, so fix this by
    mac80211: give warning if building w/out rate ctrl algorithm
    and drivers w/ no rate control algorithm.  For drivers like RTL8187 that don't
    supply their own RC algorithms, this will cause ieee80211_register_hw to
    This will tell kconfig to provide a warning if no rate control algorithms
    their drivers supply a rate control algorithm can safely ignore the
    drivers) can select a default RC algorithm.
    In the rare case the fast algorithm see a too long chain, and before
        http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
    Simon's algorithm performs O(log N) passes over the entire input list,
    algorithm instead merges pairs of equal length lists as early as possible,
    in recursive order.  For either algorithm, the elements that extend the
        http://www.sorting-algorithms.com/merge-sort
    Simon's algorithm requires only O(1) extra space rather than the generic
    algorithm's O(log N), but in my non-recursive implementation the actual
    *heuristic* readahead algorithm, and to use a dumb one which faithfully
    Improved rendering algorithm to hardware with lower CPU consumption,
    Add a new autogain algorithm for the coarse exposure case, which normally
    The linear feedback shift register (LFSR) algorithm is used for
    its current detection algorithm. It also performs its recovery action when
    The current ASID allocation algorithm doesn't ensure the notification
    The algorithm to detect cpu lock ups is the same as the old
    the picking algorithm.
    The algorithm takes into account the list of counter constraints for each
    this algorithm which is designed to be fairly generic.
    algorithm. This will cause early failure in perf_event_open().
    the scheduling algorithm and the actual assignment separately. Actual
    algorithms to be cleanly supported.
    The mac_esp PIO algorithm no longer works in 2.6.31 and crashes my Centris
    Now that the AIL push algorithm is traversal safe, we don't need a
    Since frames are now going through the rate control algorithm
    Beacon frames and similarly, with all rate control algorithms that use
    match the algorithm used elsewhere.
    implementing AMD's recommended algorithm.
    algorithm and converts it to process the crypto transforms in
    parallel. For the moment only aead algorithms are supported.
    crypto: testmgr - Fix complain about lack test for internal used algorithm
     test for some internal used algorithm.
    This patch add NULL test entries for these algorithm and driver.
    for an out-of-tree rate control algorithm.
    algorithm to remedy this and apply the same alignment principles to the
      Long term we should fix the timer wheel algorithm, but for now if we reduce
      [SCSI] bnx2i: update CQ arming algorith for 5771x chipsets
    This patch simplifies the algorithms for migrating GRU contexts between
    sysv sem algorithm: Most (at least: some important) users only use simple
    V4L/DVB (13651): sh_mobile_ceu_camera: document the scaling and cropping algorithm
    The sh_mobile_ceu_camera driver implements an advanced algorithm, combining
    algorithm deserves separate documentation.
      xfrm: Fix truncation length of authentication algorithms installed via PF_KEY
    algorithm to initialize the USB as is used in the linwizard
    xfrm: Fix truncation length of authentication algorithms installed via PF_KEY
    installation of authentication algorithms via PF_KEY, as the state
    specific truncation length is not installed with the algorithms
      amd64_edac: add a leaner syndrome decoding algorithm
    [SCSI] bnx2i: update CQ arming algorith for 5771x chipsets
      crypto: testmgr - Add ghash algorithm test before provide to users
    amd64_edac: add a leaner syndrome decoding algorithm
    the syndrome in error. The algorithm operates independently of symbol
    override the algorithm on a per-board basis.
    with a scheduler algorithm thati caused the VCPU to
    may be possible with a more sophisticated yield algorithm.
    ipsec: can not add camellia cipher algorithm when using "ip xfrm state" command
    can not add camellia cipher algorithm when using "ip xfrm state" command.
        bus as the rate control algorithm chooses a slower rate which
    xfrm: Add SHA384 and SHA512 HMAC authentication algorithms to XFRM
    These algorithms use a truncation of 192/256 bits, as specified
    algorithms, use the truncation length specified on xfrm_state.
    Adding a xfrm_state requires an authentication algorithm specified
    If no truncation length is specified, or the authentication algorithm
    is specified using xfrm_algo, the truncation length from the algorithm
    argument allows the installation of authentication algorithms with
    sctp: Update SWS avaoidance receiver side algorithm
    crypto: testmgr - Add ghash algorithm test before provide to users
    Add ghash algorithm test before provide it to users
    is negative, fall back to the old IRQ detection algorithm.
    Handle netfs pages that the vmscan algorithm wants to evict from the pagecache
    The rate control algorithms also need TX status, but
    given buffer, the algorithm has to do the queuing based on the
    fixes the algorithm and disables the use of local functions as a reference
    as a reference. The actual algorithm is: choose the first global function we
    md: Factor out RAID6 algorithms into lib/
    audio material filtered by an 50/15 uS algorithm. Not sure whether we
    Update the TX path block calculation algorithm based on TI reference.
         In these situations the default N-disk algorithm will present
    algorithm selects one more retransmission in some cases. Allow
    code for the obsolete hash algorithm.
    To support for ahash algorithms, we add a pointer to a
    algorithms maintained out of tree will break at build time rather than
    Remove special handling of old-style digest algorithms from the procfs
    iwlwifi: add aggregation tables to the rate scaling algorithm
    Current rate scale algorithm fluctuates between different MIMO modes fairly
    algorithm.
    The algorithm is simply valid blocks have a next address and that
    ceph: CRUSH mapping algorithm
    ipv4: fib table algorithm performance improvement
    The FIB algorithim for IPV4 is set at compile time, but kernel goes through
                    no cstates      current linux   new algorithm
    While it would be a novel idea to describe the new algorithm in this
    But in the Correction algorithm when calculating the byte offset
    linear algorithmic complexity, because the data structures have not
    This is very useful in various motion estimation algorithms.
    algorithm. It only transports data to and from user space
    set_frontend call in software zigzag algorithm fails and the card was
    if the SW zigzag algorithm in dvb-core kicks in with a retune after the
    algorithms might not pick the best flex_bg for new allocation.
      crypto: vmac - New hash algorithm for intel_txt support
      crypto: api - Do not displace newly registered algorithms
      crypto: gcm - Use GHASH digest algorithm
      crypto: ghash - Add GHASH digest algorithm for GCM
    and possibly IXP43x use a bit different clock generation algorithm - it
    with the Nagle algorithm.
    Use the more advanced single pass variance algorithm outlined
    crypto: vmac - New hash algorithm for intel_txt support
    range_cyclic algorithm in ext4_da_writepages().  (See commit 2acf2c26
    crypto: api - Do not displace newly registered algorithms
    We have a mechanism where newly registered algorithms of a higher
    implementation of the same algorithm with a lower priority.
    algorithm to displace itself if it depends on an existing version
    of the same algorithm.
    This patch fixes this by keeping all algorithms that the newly
    reigstered algorithm depends on, thus protecting them from being
    array cases.  In these situations the default N-disk algorithm will
    algorithm is simplified to only reuse Q as a source.
    division algorithm, using only integer math.
    While debugging the scheduler push / pull algorithm, I found
    the algorithm to work with any list.
    This variant of preemptable RCU uses a new algorithm whose
    under CONFIG_PREEMPT. This new algorithm's update-side expense
    hierarchical RCU.  Perhaps more important, this new algorithm
    algorithm.
    lock-protected algorithm to handle accounting when tasks block
    we don't follow this synchronization algorithm.
    mac80211: Decouple fail_avg stats used by mesh from rate control algorithm.
    between the mesh stack and the rate control algorithm.  Mesh will now work
    independently of the chosen rate control algorithm.
    of xcbc and not the alignmask of the underlying algorithm
    the stream ciphers.  In particular, all algorithms where the IV
    This algorithm could be described as modify-write-read.  It
    to do this modify-write-read algorithm or switch to a read-
    modify-write algorithm when initially allocating the page
    algorithm name. The new allocated one is guaranteed to be cryptd-ed
    crypto: gcm - Use GHASH digest algorithm
    digest algorithm instead. This will make GCM uses hardware accelerated
    crypto: ghash - Add GHASH digest algorithm for GCM
    GHASH is implemented as a shash algorithm. The actual implementation
    algorithm to execute correctly.
    All current rate control algorithms agree to send management and no-ack
    for this and simplify the rate control algorithm code.
    Developers wishing to make enhancements to rate control algorithms
    rate control algorithms when they have a valid sta to
    once the circle is found, breadth-first search algorithem is
    crypto: shash - Test for the algorithms import function before exporting it
    before exporting the algorithms import function to ahash.
    crypto: shash - Require all algorithms to support export/import
    shash algorithms.  It simply copies the descriptor context as
    This in essence means that all existing shash algorithms now
    When an shash algorithm is exported as ahash, ahash will access
    may end up crashing on shash algorithms because we're always
    Create the standard timing modeline by using CVT/GFT algorithm while
    which is used to determine whether the CVT/GTF algorithm is selected to
    drm/mode: add the GTF algorithm in kernel space
    Add the GTF algorithm in kernel space. And this function can be called to
    drm/mode: add the CVT algorithm in kernel space
    Add the CVT algorithm in kernel space. And this function can be called to
    In particular, we now use ahash_alg to define ahash algorithms
    ahash algorithms.
    parameter.  This is useful when instantiating algorithms that
    require a mask other than the default, e.g., ahash algorithms.
    crypto: ahash - Convert to new style algorithms
    algorithm type is retained until the existing ahash implementations
    crypto: cryptd - Use shash algorithms
    This patch changes cryptd to use shash algorithms instead of the
    no algorithms use them anymore.  The interface though will remain
    This patch converts the xcbc algorithm to the new shash type.
    current algorithm for lingle/dual Channel LVDS when
    format across all implementations of a given algorithm.
    cfg80211: reset auth algorithm
    reset the auth algorithm because wpa_supplicant
    mac80211: remove auth algorithm retry
    The automatic auth algorithm issue is now solved in
    different algorithms -- just using whatever cfg80211
    When the auth algorithm is rejected, but we don't have
    Additionally, when trying the next auth algorithm, we
    algorithm.
    that would have needed some non trivial changes in the algorithms.
    resizing/rebalancing the current lookup algorithm can miss valid leaves
    It hasn't been needed until now since no existing shash algorithms
    normal algorithms.
    algorithm based on the information in the given attribute.
    intended to be used by new style algorithm types such as shash.
    spawns, i.e., to use shash algorithms in a template.
    algorithms like shash.  In particular, this means storing the
    algorithm under it.  Note that the instance itself doesn't have
    sets aside some space before the instance for use by algorithms
    Use unaligned address for domain->max_addr. That algorithm isn't ideal
    3. use a generic bit array based XOR algorithm to detect key
      ipsec: Fix name of CAST algorithm
    algorithm malfunctioning, so it is not a matter of producing the
    As it stands we use chainiv for sync algorithms and eseqiv for
    async algorithms.  However, when there is more than one CPU
    for sync algorithms.
    crypto: skcipher - Fix request for sync algorithms
    When a sync givcipher algorithm is requested, if an async version
    of the same algorithm already exists, then we will loop forever
    getting a larval for the geniv algorithm that is to be constructed.
    ipsec: Fix name of CAST algorithm
    Our CAST algorithm is called cast5, not cast128.  Clearly nobody
    This permits each port to select its own SCBRR calculation algorithm,
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    The v4l function has a better algorithm for aligning image size.
    It uses an efficient algorithm that will try to find the "closest" image
    standard as part of its internal algorithm.  This therefore means that
      dma-debug: check for sg_call_ents in best-fit algorithm too
    crypto: tcrypt - Test algorithms by name
    algorithm by name. If the algorithm type is not ad-hoc
    clear for a algorithm (e.g. pcrypt, cryptd) it is possilbe
    to set the algorithm type with the 'type' module parameter.
    readahead: introduce context readahead algorithm
    Introduce page cache context based readahead algorithm.
    The current readahead algorithm detects interleaved reads in a _passive_ way.
    The context readahead algorithm guarantees to discover the sequentialness no
    the algorithm to find the index.
    scheduling algorithm could be added for host controllers without
    function changed to a best-fit algorithm these entries have to be more
    dma-debug: check for sg_call_ents in best-fit algorithm too
    parent directory inode allocation algorithms.
    layout algorithms.
    The assert was happening because the rate control algorithm
    addresses in the 36GB address with the same algorithm.
    algorithm.
    Because all fips-allowed algorithms must be self-tested before they
    algorithms may nest, i.e., one may construct another in order to
    the chances of an algorithm failing due to memory shortage.
    crypto: talitos - Add ablkcipher algorithms
    Add these ablkcipher algorithms:
    crypto: talitos - scaffolding for new algorithm types
    This patch is preparation for adding new algorithm types.
    The algorithm template structure was changed to
    more general with respect to algorithm types.
    - Add a new AES algorithm implementation named __aes-aesni without
    kernel_fpu_end(). If they are invoked in cipher algorithm
    for the key algorithm specified.
      crypto: api - Fix algorithm module auto-loading
      crypto: eseqiv - Fix IV generation for sync algorithms
    the number of search tables were 3. Every time the rate scale algorithm
    second patch for pid algorithm and found similar bug."
    To deter future rate scaling algorithm writers from requesting NO_ACK
    packets to be retried, throw a WARN_ON_ONCE if the algorithm hands us
    [ Impact: tweak NTP algorithm for faster convergence ]
    The new bitfit algorithm was counting from the wrong end of
    debugging rate scaling algorithm, easy to understand what is the current
    in rate scaling algorithm. If the device support 3x3, then utilize all
    crypto: api - Fix algorithm module auto-loading
    api - Fix module load deadlock with fallback algorithms) broke
    the auto-loading of algorithms that require fallbacks.  The
    applying it, allowing improvements in the power sequencing algorithms.
    When determining the UV pnode, the algorithm for determining the pnode
    algorithm is used:
    phy0: Selected rate control algorithm 'pid'
    crypto: eseqiv - Fix IV generation for sync algorithms
    Improve the algorithm to nominate the idle load balancer from a semi idle
    The algorithm is activated only when sched_mc/smt_power_savings != 0.
    the DAPM algorithms and (more immediately) the additon of events for
     - in case of missing AES support, the AES algorithms are not registered
    Even if the background flushing algorithm is radically changed, it is
    strong checksum of the transferred data. It is possible to configure algorithms
    This patch simply moves code around & does not change the algorithm.
    memcg: fix shrinking memory to return -EBUSY by fixing retry algorithm
            (More smart algorithm can be implemented..)
    A corresponding patch to the decompression algorithm in
    Bayer frames.  The decompression algorithm for still images is the same as for
    gets checked in the algorithm.
    This patch changes mac80211 to not notify the rate control algorithm's
    through the rate control algorithm's get_rate() method.
    search for loops) introduced a regression in the loop detection algorithm,
    An alignment issue with the existing bitfit algorithm was reported
    patch implement full nodes sorting using n*log(n) algorithm.
    condition (receive 0 retry packet). also change the algorithm to make
    which may cause the AES-NI-based AES algorithm implementation to panic.
      V4L/DVB (10978): Report tuning algorith correctly
    (5) doorbell algorithm imported changes from windows driver
    V4L/DVB (10978): Report tuning algorith correctly
    the actual (name of the) (de)compression algorithm.
      crypto: api - Fix module load deadlock with fallback algorithms
    tcp: add helper for AI algorithm
    rate control algorithm is not notified. This patch adds a new callback
    to indicate such changes to the RC algorithm.
    crypto: api - Fix module load deadlock with fallback algorithms
    With the mandatory algorithm testing at registration, we have
    now created a deadlock with algorithms requiring fallbacks.
    This can happen if the module containing the algorithm requiring
    first.  The system will then try to test the new algorithm, find
    As both algorithms share the same module alias, it can attempt
    to load the original algorithm again and block indefinitely.
    As algorithms requiring fallbacks are a special case, we can fix
    algorithms we're trying to find.
    The sharing discovery code follows the algorithm recommended in the
    ext4: New inode/block allocation algorithms for flex_bg filesystems
    replaced.  One of its problems (besides ignoring the Orlov algorithm)
    to test these algorithms.
    Conversely, we're currently testing nivaead algorithms with IVs,
    nivaead algorithms have any test vectors.  This patch also fixes
    test vectors for the existing nivaead algorithms.  They're tested
    through the underlying algorithms only.
    shash.c, not even algorithms code).
    untested algorithms, but never both at the same time.  However,
    initial release that includes the driver framework with AES and SHA1 algorithms
    The remaining algorithms will be released in the near future.
    implemented algorithms.  We already panic when any of the test in testmgr.c
    This patch converts the S390 sha algorithms to the new shash interface.
    This function is needed by algorithms that don't know their own
    specified algorithm name. The new allocated one is guaranteed to be
    Update the Adaptive Interrupt Moderation algorithm so that the low latency
    mac80211 notifies the RC algorithm if RTS/CTS and short preamble
    Also, set the rts_cts_rate_idx inside the RC algorithm.
      crypto: api - Fix algorithm test race that broke aead initialisation
    [ARM] OMAP3 clock: optimize DPLL rate rounding algorithm
    The previous DPLL rate rounding algorithm counted the divider (N) down
    The algorithm works unconditionally. If bitval is one, the first line is
    algorithm. This version of the patch disables rate fallback.
    The rate control algorithm needs to know if a STA allows
    Return -EOPNOTSUPP if the algorithm is not supported and -ENOSPC if
    Added new SIOCSIWENCODEEXT algorithm for configuring BIP (AES-CMAC)
    crypto: api - Fix algorithm test race that broke aead initialisation
    algorithm with the same driver name prior to the removal of the
    test larval, they will fail with EEXIST as only one algorithm of
    This broke the initialisation of aead and givcipher algorithms as
    they will register two algorithms with the same driver name, in
    we drop the mutex, and also ignoring all dead or dying algorithms
    The old matching algorithm was too fuzzy, causing false positives.
    Change the algorithm such that:
    crc32c algorithm provides a byteswaped result.  On little-endian
    it's locking algorithms work (see Documentations/filesystems/Locking)
    it's locking algorithms work (see Documentations/filesystems/Locking)
    As it is if an algorithm with a zero-length IV is used (e.g.,
    not take into account that the ath9k rate control algorithm was
    rate control algorithm, so the best option now seems to be to revert the
    INTx swizzling algorithm specified in Table 9-1 of the "PCI-to-PCI
    why a good algorithm in a HLL is preferrable to a bad algorithm written in
    It turns out that the adt7470's automatic fan control algorithm only works
    the type of memory required and depend on how the algorithm is implemented
    :    balancing algorithm would require that if we're scanning 100 pages of
    Make all the compression algorithms properly configurable, and make
    sure the ramdisk options pull in the proper compression algorithms, as
    the algorithm and didn't have quite the (possibly still imperfect) grasp
    eventually leading to wrong search algorithm to be employed in
    rq->lock for certain workloads, and by making sure the algorithm
    This patch makes the algorithm more fair by forcing all paths to have
    paths nested further inside the algorithm which still remain that allow
    The tables used by the various AES algorithms are currently
    because some AES algorithms may be registered before the tables
    for this algorithm to be used with shash it is moved to a static
    Since most cryptographic hash algorithms have no keys, this patch
    When self-testing (de)compression algorithms, make sure the actual size of
    The reason for the change is to tap into the algorithm selection
    This patch adds a test for the requirement that all crc32c algorithms
    This patch allows shash algorithms to be used through the old hash
    underlying algorithms to shash before converting the users across.
    This patch allows shash algorithms to be used through the ahash
    interface.  This is required before we can convert digest algorithms
    synchronous algorithms and as such scatter lists are unnecessary.
    algorithms have been completely converted.
    This will be extended to ahash once the algorithm conversion is
    This is also the first time that an algorithm type has their own
    registration function.  Existing algorithm types will be converted
    actual ahash algorithm or a crypto_hash algorithm.  Putting
    crypto algorithm fail during operation in fips mode, we need to prevent
    crypto layer will fallback to the software algorithms.
    control algorithm table.
    Looking at the RC algorithm this is no longer necessary.
    wireless: Incorrect LEAP authentication algorithm identifier.
    LEAP authentication algorithm identifier should be 128.
      crypto: api - Disallow cryptomgr as a module if algorithms are built-in
    crypto: api - Disallow cryptomgr as a module if algorithms are built-in
    If we have at least one algorithm built-in then it no longer makes
    change in the congestion avoidance algorithm) can be seen at:
    Sparc64 uses a non-recursive sibling traversal algorithm
    control algorithm is effectively unable to reduce cwnd below the
    Ian Campbell <ijc@hellion.org.uk> (simplified find algorithms)
    number printed is quite strange. This fixes the algorithm to handle
    Btrfs: add support for multiple csum algorithms
    algorithims at some point in the future.  We save the csum algorithim type
    (Perhaps a better address space allocation algorithm could rid us of the
    the standard orinoco resume algorithm.
    mac80211: Fix pid rate-setting algorithm to allow rate changes
    to total number of tries. As a result, the pid rate-setting algorithm fails
    mac80211: make Minstrel the default rate control algorithm
    This makes minstrel the default rate control algorithm
    If someone can come up with a better algorithm they get a prize
    This patch eliminates sparse warnings in pid rate scale algorithm
    The main difference to the algorithm described in "Efficient Fair Queueing
    selection algorithm, probably following the Channel Selection Policy
    basic copy algorithm is the same as in memcpy() - this version just
    The old decisions made by the filter algorithm was complex and incorrect.
    algorithm determining if processes are root processes and should be less
    fat_hash() is using the algorithm known as bad. Instead of it, this
    "Clearing" the rate control algorithm is pointless, none of
    the algorithms actually uses this operation and it's not even
    need to since rate control algorithms work per station.
    iwl3945: fix station stuff in RC algorithm
      mac80211: correct warnings in minstrel rate control algorithm
    ext4: Add support for non-native signed/unsigned htree hash algorithms
    The original ext3 hash algorithms assumed that variables of type char
    ext3: Add support for non-native signed/unsigned htree hash algorithms
    The original ext3 hash algorithms assumed that variables of type char
    wusb: disable verification of the key generation algorithms
    Verifing the key generation algorithms could take too long on a freshly
    mac80211: correct warnings in minstrel rate control algorithm
    rewritten inlining algorithm and disabling this option will generate a
    linked list to improve the algorithmic scalability.
    throw off kswapd's balancing algorithms.  Place them on the unevictable
    The algorithm to pick one of them based on the user input is not
    That hack in ath9k should be removed once the rate control algorithm
    The algorithm we use basically considers unassigned a window that
      rcu classic: new algorithm for callbacks-processing(v2)
    Change the load calculation algorithm in ondemand to work well with software
    mac80211: add the 'minstrel' rate control algorithm
    ANI is as algorithm designed to minimize the detrimental
    SACK processing when doing SFR-CACC algorithm.  We can restructure
    There's one internal use in the PID algorithm left for mesh networking,
    algorithm or via new API.
    algorithm.
    Rate control algorithms may need access to a station's
    mac80211: move txrate_idx into RC algorithms
    The sta_info->txrate_idx member isn't used by all RC algorithms
    As more preparation for a saner rate control algorithm API,
    mac80211: move last_txrate_idx into RC algorithms
    by the Intel RC algorithms, so move it into those.
    algorithm to update sta->tx_retry_failed and sta->tx_retry_count
    found, but all rate control algorithms ignore such calls anyway.
    implementing rate control algorithms without internals.
    iwlwifi: use the results from disconnected antenna algorithm
    enables during the chain noise algorithm. Hence, power management is
    restored only after the completion of the algorithm.
    scaling algorithm.
    algorithm starts with a setting most suitable for daylight, the picture
    A detailed discussion of the algorithm (with plots) is on
    The algorithm has negative side effects:
       counter-acting the algorithm;
    This improves the receiver RTT sampling algorithm so that it tries harder to get
    The algorithm is based the concepts presented in RFC 4340, 8.1, using timestamps
    In the last case the algorithm tried to optimise by storing away the candidate
       algorithm;
    The algorithm now stores away the current sample only if the difference is 0.
    confirmed by instrumenting the algorithm with counters. The results of two 20
     * With the old algorithm and a total of 38442 function calls, only 394 of these
     * With the new algorithm and a total of 37057 function calls, 1702 usable RTT
    dccp ccid-2: Replace broken RTT estimator with better algorithm
    Reasons for reusing the Linux TCP estimator algorithm:
    new circular buffer interface. It contributes a new algorithm which
    essential, since analysis and experience showed that the basic algorithm was
    The algorithm now
     (b) A `tail_seqno' field. When naively implementing the algorithm of Appendix A
    There are no real algorithmic changes, rather an adaptation:
    dccp ccid-3: Bug fix for the inter-packet scheduling algorithm
    The algorithm from RFC 3448, 4.6 below continually computes a send time t_nom,
    whose value depends on CONFIG_HZ, changing the above algorithm to:
    This patch rewrites the TX power recalculation algorithms to scale better
    value. With the old algorithm it could take about 30 to 45 seconds to settle to
    algorithms to pass a run-time test before they're made available to
    cryptomgr.  This shall allow us to use it for testing at algorithm
    This patch creates a new interface algorithm testing.  A test can
    be requested for a particular implementation of an algorithm.  This
    is achieved by taking both the name of the algorithm and that of
    a duplicate listing of all algorithms with tests.  In that process
    algorithms at registration time.
    CRC32c algorithm with the new CRC32 instruction in SSE 4.2 instruction set.
    digit value '100'.  This is due to a bug in the rounding algorithm
    Use the MIC algorithm from the crypto subsystem.
    Extra algorithm to program PDA values using defaults where necessary.
    Add some comments explaining the locking and pinning algorithm when
    algorithm to allow the very large SMP machines -- requested by some
      i2c: Let users select algorithm drivers manually again
    i2c: Let users select algorithm drivers manually again
    In kernel 2.6.26, the ability to select I2C algorithm drivers manually
      [XFS] Restore the lowspace extent allocator algorithm
    algorithm
    algorithm.
    [XFS] Restore the lowspace extent allocator algorithm
    to 0). In this case the allocator will enable the lowspace algorithm which
    newroots) to allocate from sequential AGs. This algorithm has been broken
    Thanks to Hugh for pointing out an improvement to the algorithm setting
    different algorithm.  (thanks to Christoph for new idea.)
    textsearch algorithms can be loaded, make the code depend
    rcu classic: new algorithm for callbacks-processing(v2)
    The code/algorithm of the implement of current callbacks-processing
    This is my algorithm. But I do not add any field for struct rcu_head
    algorithm for RR but I really see no reason to export this aspect of
    Implement a version of the old spinlock algorithm, in which everyone
    This algorithm is much better than ticket locks in a virtual
    old lock algorithm, which allows the next scheduled vcpu to take the
    tipc: Optimization to multicast name lookup algorithm
    This patch simplifies and speeds up TIPC's algorithm for identifying
    algorithm does individualized scope checking for each published
      crypto: talitos - Use proper form for algorithm driver names
    <vitb@kernel.crashing.org> and the actual algorithm used by the i2c
    edge triggered migration. But the good news is, we use the same algorithm
    allocation algorithms. By controlling the inode allocation, it can
    The algorithm to calculate the 'now' of another CPU is not correct.
    same in speed between two clocks the algorithm would be:
    Currently the algorithm is:
    Cleaned up AIM algorithms in general
    This patch adds the walking helpers for hash algorithms akin to
    reimplement existing hash algorithms using the new ahash interface.
    The digest size check on hash algorithms is incorrect.  It's
    perfectly valid for hash algorithms to have a digest length
    for such algorithms.
    crypto: talitos - Use proper form for algorithm driver names
    should be reserved for templates that spawn algorithms.
    for testing hash algorithm correctness.  The speed tests will continue
    [CRYPTO] ripemd: Add Kconfig entries for extended RIPEMD hash algorithms
    RIPEMD-320 hash algorithms.
    algorithms RIPEMD-256 and RIPEMD-320.
    When the CryptoAPI instantiates a new algorithm, it performs a lookup
    algorithm, the lookup may return an incorrect algorithm.
    [CRYPTO] ripemd: Add Kconfig entries for RIPEMD hash algorithms
    RIPEMD-160 hash algorithms and digests (HMAC).
    [CRYPTO] ripemd: Add support for RIPEMD hash algorithms
    hash algorithms.
    The algorithm relies on the invariant that any page which is part of
    textsearch: ts_kmp: support case insensitive searching in Knuth-Morris-Pratt algorithm
    Add support for case insensitive search to Knuth-Morris-Pratt algorithm.
    textsearch: ts_bm: support case insensitive searching in Boyer-Moore algorithm
    Add support for case insensitive search to Boyer-Moore algorithm.
    ARM: OMAP2: Clock: New OMAP2/3 DPLL rate rounding algorithm
    This patch adds a new rate rounding algorithm for DPLL clocks on the
    This DPLL rate rounding algorithm:
    The rate rounding algorithm caches the last rounded M, N, and rate
    The algorithm trades execution speed for rate accuracy.  It will find
    scaling algorithm to take in count frames that were sent in AMPDUs.
    iwlwifi: configure uCode to use open loop tx power algorithm
    This patch configures uCode to use open loop tx power algorithm
    build algorithms into the mac80211 module
    - the default algorithm is built into mac80211
    - other algorithms get into their own modules
    algorithm would most likely not get it right at his first attempt.
    This patch therefore builds all enabled algorithms into the mac80211
    The user interface for the rate control algorithms changes as follows:
    - first the user can choose which algorithms to enable (currently only
    - if more than one algorithm is enabled (currently not possible since
      only one algorithm is present) the user then chooses the default one
    - all selected algorithms get into the mac80211 module
    Searching algorithm should return 0 for those things.
    currently uses a first match algorithm, stopping when it finds the first
    each SGE is 1 page. The FW also implements a timeout algorithm and it
    The current code use a linear algorithm which causes scaling issues
    on larger SMP machines.  This patch replaces that algorithm with a
    Dmitry Adamushko pointed out a known flaw in the rt-balancing algorithm
    This patch tries to enhance the balancing algorithm by accomodating this
    means that the rate control algorithm is never triggered and 0 is used as
    This patch adds an algorith to check the following condition:
      ext4: mballoc fix mb_normalize_request algorithm for 1KB block size filesystems
    ext4: mballoc fix mb_normalize_request algorithm for 1KB block size filesystems
    This patch modifies the algorithm in ext4_mb_normalize_group_request to
    1. This patch restructures rate scale algorithm to support
    b43: Rewrite LO calibration algorithm
    key algorithm and whether it is a shared or pairwise key.
    use digest_null directly.  However, when the null algorithm is
    ([IPSEC]: Add support for combined mode algorithms) added a new
    This patch adds support for a new backoff algorithm for half duplex supported
    Re-seeding random values for the backoff algorithms are performed when a
    irq moderation algorithm. This change does not require an
    so consolidating the algorithm at one place will help
    algorithm to ignore any ATSC standards (such things are better handled
    This is a major pvrusb2 change.  The driver core has an algorithm that
    video streaming.  The algorithm had originally been written for analog
      [IPSEC]: Fix catch-22 with algorithm IDs above 31
      i2c: Add platform driver on top of the new pca-algorithm
      i2c: Remove the algorithm drivers from the config menu
    i2c: Add platform driver on top of the new pca-algorithm
    The separation between algorithm and adapter was unsharp at places. This was
    preparations to add a platform driver on top of the algorithm, while still
      Similar to other algorithms, now a pointer to this data is passed to the
      from the adapter, not the algorithm.
    In the algorithm-file:
    - adapt to new algorithm
    i2c: Remove the algorithm drivers from the config menu
    The algorithm drivers are helper drivers that are selected automatically
    [IPSEC]: Fix catch-22 with algorithm IDs above 31
    As it stands it's impossible to use any authentication algorithms
    The reason is that we're using a bit mask to check the algorithm
    applications, the best solution IMHO is to allow all algorithms when
    using the NULL authentication algorithm which has an ID of 251.
    > > with the <algorithm name>_init/_fini
    > > or init/fini_<algorithm name> (if the
    > > <algorithm name>_init/_fini exist)
            <algorithm name>_mod_init ()
    and fini () is replaced with <algorithm name>_mod_fini.
    all the test vectors for each algorithm. The test vectors are
    as the engine handles it's own keys, algorithms, everything.  All
    Various SMP balancing algorithms require that the bandwidth period
    subtraction of the TSC value and the reference value. This algorithm
      [GFS2] Faster gfs2_bitfit algorithm
      The HMAC algorithm based on SHA-1 MUST be supported and
    subtraction of the TSC value and the reference value. This algorithm
    [GFS2] Faster gfs2_bitfit algorithm
    This version of the gfs2_bitfit algorithm includes the latest
    algorithm is often 15 times faster, and given the right
    HTB is event driven algorithm and part of its work is to apply
    algorithm. Fix by using the SO_DEFER_ACCEPT value if the ack has
    This patch introduces a simple irq moderation algorithm based
    algorithm then cleans the appropriate ring/queues on interrupt
    rt2x00lib depended on 2 crc algorithms because rt61/rt73
    use a different algorithm then rt2800. This means that
    even when only 1 algorithm was needed, the dependency was
    It's also useful for tuning an RC algorithm.
    has been asked for. Use the same algorithm as SLAB for this.
    This needs to be exported because rate control algorithms
    the kernel crashes. It seems this algorithm doesn't
    in order to make the learning algorithm aware of constraints on rates. Also
    Now the ESP uses the AEAD interface even for algorithms which are
    otherwise only combined mode algorithms will work.
    rate control algorithms, however those can, if they need it,
    in order to make the learning algorithm aware of constraints on rates. Also
    The driver should select what CRC algorithm is required
    the same as a different algorithm which is also available as library. ;)
    Change xfrm_policy and xfrm_state walking algorithm from O(n^2) to O(n).
    Our algorithm expects the previous behavior; otherwise we have RDMA
      ext4: modify block allocation algorithm for the last group
    The authenc algorithm requires BLKCIPHER to be present.
    by most algorithms anyway this is an acceptable trade-off.
    ext4: modify block allocation algorithm for the last group
    sizing algorithm and drop this parameter.  For the time being, it is a
    algorithm. Tested this using setkey in ipsec-tools.
    Add the page_cgroup to the per cgroup LRU.  The reclaim algorithm has
    The AIL push is, in effect, a simple I/O dispatch algorithm complicated by
    Implement get_wchan - the algorithm is similar to x86.  It starts with the
    then the algorithm would come up with a page size of 0x2000 and a list
    With the implementation of the new mark and sweep algorithm for shutting
    the built-in rate control algorithms fail to initialise, fix
    When the rate control algorithms are built-in, their exit
    [IPSEC]: Add support for combined mode algorithms
    This patch adds support for combined mode algorithms with GCM being
    the first algorithm supported.
    Combined mode algorithms can be added through the xfrm_user interface
    using the new algorithm payload type XFRMA_ALG_AEAD.  Each algorithms
    For the purposes of matching algorithms in xfrm_tmpl structures,
    combined mode algorithms occupy the same name space as encryption
    algorithms.  This is in line with how they are negotiated using IKE.
    [IPSEC]: Allow async algorithms
    algorithms in IPsec.
    the authenc algorithm.  This lays the foundations for future support of
    combined mode algorithms.
    This patch changes the backtracer to use the regular backtracing algorithm
    The algorithm also tells us how many CPUs are contending the lock, so
    we'd better take that into account when doing switch by auth->algorithm,
    Update RSS hash function to a symmetric algorithm.
    mac80211: better rate control algorithm selection
       algorithm as default
     * always allow tri-state for the rate control algorithms,
     * force the default rate control algorithm to be built into
    It also makes both rate control algorithms proper modules again
    which will cause no algorithm to be selected, this will work
    the algorithm, simply determine first if the modulo is needed
    with a certain algorithm up into the TX handlers rather than having it
    in the crypto algorithm implementation.
    rc80211-pid: add rate behaviour learning algorithm
    This patch introduces a learning algorithm in order for the PID controller
    mac80211: make PID rate control algorithm the default
    This makes the new PID TX rate control algorithm the default instead of the
    rc80211_simple rate control algorithm. The simple algorithm was flawed in
    relying on properly. The PID algorithm allows us to tune characteristics such
    The default algorithm can be overridden to select simple instead. Which
    ever algorithm is the default is included as part of the mac80211
    module automatically. The other algorithm (simple vs. pid) can
    algorithm included in mac80211. The default algorithm can be set
    mac80211: add PID controller based rate control algorithm
    Add a new rate control algorithm based on a PID controller. It samples the
    selection algorithms, and fix iwlwifi accordingly. While at it, clean up the
    This implements the algorithm to update the allowed sending rate X upon
    The crc32c library used an identical table and algorithm
     * provision of RFC-compliant algorithm to re-compute average loss interval;
     * provision of comprehensive, new loss detection algorithm
    [CCID2]: Disable broken Ack Ratio adaptation algorithm
    This comments out a problematic section comprising a half-finished algorithm:
    In its current state, the commented-out algorithm interfers with normal processing by
    A new algorithm is necessary, which will not necessarily use the same variables as used by
    algorithms.
    The algorithms used make the realtime scheduler O(tg), linear scaling wrt the
    of, the avg. case of the algorithms can be improved, I focused on correctness
    This patch adds the algorithm to pull tasks from RT overloaded runqueues.
    This patch adds an algorithm to push extra RT tasks off a run queue to
    When more than one RT task is added to a run queue, this algorithm takes
    more.  The algorithm stops when the next highest RT task can't preempt any
    TODO: The algorithm may stop when there are still RT tasks that can be
      [CRYPTO] xcbc: Fix algorithm leak when block size check fails
      [CRYPTO] salsa20_i586: Salsa20 stream cipher algorithm (i586 version)
    elaborate attribute selection algorithms to do this same thing.
      [IPV6] ROUTE: Make sending algorithm more friendly with RFC 4861.
    [IPV6] ROUTE: Make sending algorithm more friendly with RFC 4861.
    So, let's avoid mixing sending algorithm of RFC 4191 and that of RFC
    4861, and make the algorithm more friendly with RFC 4861 if RFC 4191
    algorithms.  This patch makes it available by itself at number 106.
    When setting the digest size xcbc tests to see if the underlying algorithm
    [CRYPTO] xcbc: Fix algorithm leak when block size check fails
    When the underlying algorithm has a block size other than 16 we abort
    without freeing it.  In fact, we try to return the algorithm itself
    This is the x86-64 version of the Salsa20 stream cipher algorithm. The
    [CRYPTO] salsa20_i586: Salsa20 stream cipher algorithm (i586 version)
    it (added indents) so that it matches the other algorithms in
    algorithms.
    contention if the user allows the use of asynchronous algorithms.  If
    a synchronous algorithm is requested then we behave as before.
    Now that seqiv supports AEAD algorithms it needs to select the AEAD option.
    a zero length.  In particular the null digest algorithm when used as part
    [CRYPTO] null: Add null blkcipher algorithm
    This patch adds a null blkcipher algorithm called ecb(cipher_null) for
    backwards compatibility.  Previously the null algorithm when used by
    IPsec copied the data byte by byte.  This new algorithm optimises that
    This patch makes crypto_alloc_aead always return algorithms that is
    All existing AEAD algorithms already do.  New ones must either supply
    This patch adds support for using seqiv with AEAD algorithms.  This is
    useful for those AEAD algorithms that performs authentication before
    encryption because the IV generated by the underlying encryption algorithm
    generator templates that wrap around AEAD algorithms by adding an IV
    generator to them.  This is useful for AEAD algorithms with no built-in
    [CRYPTO] aead: Allow algorithms with no givcrypt support
    Some algorithms always require manual IV construction.  For instance,
    the generic CCM algorithm requires the first byte of the IV to be manually
    constructed.  Such algorithms are always used by other algorithms equipped
    givcrypt operations, i.e., sometimes only the algorithm knows how the
    requirements of the algorithm because it's not used during the operation.
    with a salt.  This algorithm is mainly useful for CTR and similar modes.
    This patch converts the gcm algorithm over to crypto_grab_skcipher
    This also fixes a leak of the cipher algorithm that was previously
    This patch converts the authenc algorithm over to crypto_grab_skcipher
    return algorithms that are capable of generating their own IVs through
    givencrypt and givdecrypt.  Each algorithm may specify its default IV
    For algorithms that do not set the geniv field, the blkcipher layer will
    pick a default.  Currently it's chainiv for synchronous algorithms and
    eseqiv for asynchronous algorithms.  Note that if these wrappers do not
    work on an algorithm then that algorithm must specify its own geniv or
    the plain text.  This algorithm requires that the block size be equal
    called when an ablkcipher algorithm has completed a givcrypt request.
    templates that wrap around existing blkcipher/ablkcipher algorithms by adding
    [CRYPTO] cryptd: Use geniv of the underlying algorithm
    If the underlying algorithm specifies a specific geniv algorithm then
    generator for each algorithm.  It should point to a string that is not
    freed as long as the algorithm is registered.
    have their own IV generation algorithms.
    be paired with which IV generation algorithm.
    generate IVs would use it instead of ablkcipher.  All other algorithms
    (including all existing ones) would generate a givcipher algorithm upon
    registration.  This givcipher algorithm will be constructed from the geniv
    string that's stored in every algorithm.  That string will locate a template
    which is instantiated by the blkcipher/ablkcipher algorithm in question to
    give a givcipher algorithm.
    steps, first getting the algorithm and then calling crypto_init_spawn.
    whether the user is specifically requesting a sync algorithm.
    into a chainable algorithm called ctr.  The IPsec-specific variant of
    ablkcipher algorithms will use it to create givcipher objects.  As such
    aligned to the value required by the algorithm.
    first half of crypto_attr_alg.  That is, it returns an algorithm name
    [CRYPTO] lzo: Add LZO compression algorithm support
    Add LZO compression algorithm support
    if the underlying algorithm is asynchronous.  This patch changes it so
    The scatterwalk infrastructure is used by algorithms so it needs to
    the ICV (if the algorithm has an explicit one) available in the
    For now no algorithm needs this so this patch changes gcm to conform
    Since the authenc algorithm is mainly used for legacy purposes where its
    As it is authsize is an algorithm paramter which cannot be changed at
    algorithms would have to register each authsize that they support
    Since authsize is a property common to all AEAD algorithms, we can add
    support for the other keys which may be required. The generic algorithm
    [CRYPTO] gcm: New algorithm
    Up until now we have ablkcipher algorithms have been identified as
    refers to and algorithm type underneath.
    As it is you cannot request a synchronous block cipher algorithm
    with the algorithm implementation only.
    SHA-224 chould be chosen as a hash algorithm when 112 bits of security
    The setkey() function can be shared with the generic algorithm.
    The setkey() function can be shared with the generic algorithm.
    algorithm, the sizeof the nonce, and the sizeof the iv.
      [IPSEC]: Avoid undefined shift operation when testing algorithm ID
    The previous counting algorithm has O(n^2) complexity.  Basically two
    [IPSEC]: Avoid undefined shift operation when testing algorithm ID
    resources and an algorithm similar to x86 for claiming existing ones.
    congestion control algorithm.  This is present in 2.6.18 onwards and
    algorithm with tcp_set_default_congestion_control. Otherwise, it returns the
    algorithm to detect a safe_state to fallback in case of bm_activity and
    modified rate arrangement with CCK rate first. Change rate scale algorithm
      iwlwifi: select proper rate control algorithm
      mac80211: allow driver to ask for a rate control algorithm
      mac80211: make simple rate control algorithm built-in
    iwlwifi: select proper rate control algorithm
    registered rate control algorithm which, depending on system
    the simple algorithm built-in, it would always be simple.
    rate control algorithm.
    mac80211: allow driver to ask for a rate control algorithm
    This allows a driver to ask for a specific rate control algorithm.
    The rate control algorithm asked for must be registered and be
    algorithm twice. This is a programming error in the registration
    mac80211: make simple rate control algorithm built-in
    their hardware probing fails due to no rate control algorithm
    being available. This makes the 'simple' algorithm built into
    rate control algorithm.)
    a possible bug in the u32 hash/bucket computing algorithm
    option is specified, the traditional algorithm of evenly dividing TCs
    algorithms so that it doesn't impact on the speed test results.
      apm_power: improve battery finding algorithm
    every algorithm (that needs this) other than AH6 already does its own
    This patch changes mode selection matching algorithm.  It allows to choose
    The algorithm works in a opportunistic way, in that it does not try to detect
    i2c: Remove i2c_algorithm.algo_control()
     - An effectively unused hook:  i2c_algorithm.algo_control.
    cx23885: Drop empty i2c algorithm control callback
    i2c_algorithm.algo_control is about to be removed.
    i2c: Remove NOP i2c_algorithm.algo_control() methods
    This removes NOP implementations of i2c_algorithm.algo_control.
    Loading the crypto algorithm by the alias instead of by module directly
    has the advantage that all possible implementations of this algorithm
      the algorithm is actually used which does not lead to dead-locks
    Loading the crypto algorithm by the alias instead of by module directly
    has the advantage that all possible implementations of this algorithm
    Loading the crypto algorithm by the alias instead of by module directly
    has the advantage that all possible implementations of this algorithm
    the algorithm being registered against the cra_name of a larval as opposed
    the algorithm being registered can or can not satisfy the larval.
    the algorithm's required alignment.  With the pending addition of CTR this
    [CRYPTO] authenc: Kill spaces in algorithm names
    We do not allow spaces in algorithm names or parameters.  Thanks to Joy Latten
    [CRYPTO] cryptomgr: Fix parsing of recursive algorithms
    As Joy Latten points out, inner algorithm parameters will miss the closing
    bracket which will also cause the outer algorithm to terminate prematurely.
    This patch adds the authenc algorithm which constructs an AEAD algorithm
    The authenc algorithm exists as a template with four parameters:
    The authentication algorithm, the authentication size (i.e., truncating
    the output of the authentication algorithm), the encryption algorithm,
    The key for the authenc algorithm is the concatenation of the keys for
    the authentication algorithm with the encryption algorithm.  For the
    The scatterwalk code is only used by algorithms that can be built as
    for integer parameters in addition to the current algorithm
    four parameters: the authentication algorithm, the encryption
    algorithm, the authentication size and the encryption key
    (Authenticated Encryption with Associated Data) algorithms.
    AEAD algorithms perform authentication and encryption in one
    different crypto algorithms to perform these.  With AEAD
    this comes down to one algorithm and one operation.
    Of course if traditional algorithms were used we'd still
    algorithms may allow the underlying operations to be
    [CRYPTO] seed: New cipher algorithm
    algorithm itself.
    Other options requiring specific block cipher algorithms already have
    but that requires more complicated changes to the algorithm; thus a
    This "algorithm" is used only internally and is not useful.
    This patch adds debugfs handler to rate scale algorithms.
    [PATCH] iwlwifi: Fix typo in rate sacling algorithm
    This patch fixes tiny typo in 4965 rate sacling algorithm
    Currently, we run through all three crypto algorithms for each
    key we have and as such already know which algorithm will be
    [PATCH] mac80211: remove crypto algorithm typedef
    xrlim_allow algorithm for Syncs, permitting bursts just increases the problems.)
    The algorithm in this patch has been improved with regard to wrapping issues
    No changes in algorithm, all changes are text replacement/substitution.
    Remove adding a fake key with a NONE key algorithm for each
    Additionally, I've removed the ALG_NULL key algorithm since we have
    [XFRM] netlink: Move algorithm length calculation to its own function
    algorithm attribute to simplify the code.
    guarantee for that. The new fast recovery loss marking algorithm
        Change the C-state early break out algorithm in menu governor.
    implements an algorithm that uses the set of "supported" standards as
    a hint to decide on the initial standard.  This algorithm ONLY comes
    apm_power: improve battery finding algorithm
      - Detection algorithm has been changed
    The same applies to rate control algorithms.
    it does not implemented the prescribed algorithms from
    Add some casts to the LZO compression algorithm after they were removed
    placement algorithm.
    readahead: remove the old algorithm
    Remove the old readahead algorithm.
    This is a minimal readahead algorithm that aims to replace the current one.
    reclaim algorithm targets pages in LRU order, which is great for fairness at
    This patch set adds a lumpy reclaim algorithm to the allocator.  It targets
      the two may share algorithms in the future
    have a proper interface to the rate control algorithms they don't
    algorithms as the assembly version.
    and hence data loss.  The old algorithm operated on all unix sockets
    The new algorithm instead only operates on "in flight" sockets, which
    This means the faster lzo algorithm can be preferred when there
    requested alignment by the algorithm. This patch fixes it. The extra
    algorithm then converges: time differences > 1000 microseconds trigger the
    Add LZO1X algorithm to the kernel
    algorithm to the kernel.  Nitin and myself have merged the best parts of
    We use the same algorithms as the CPU scheduler to calculate the time
    Use generic 64-bit division algorithm from the asm-generic directory.\
      [IPSEC] pfkey: Load specific algorithm in pfkey_add rather than all
      [CRYPTO] api: Read module pointer before freeing algorithm
    [IPSEC] pfkey: Load specific algorithm in pfkey_add rather than all
        [XFRM]: Probe selected algorithm only.
    the same thing for af_key.  In other words, we load the algorithm requested
       flows was in the middle of FRTO algorithm (and then RTO is
    2) SACK reneging occurs during FRTO algorithm
    [CRYPTO] api: Read module pointer before freeing algorithm
    The function crypto_mod_put first frees the algorithm and then drops
    which after freeing the algorithm and that pointer sits inside the
    There's a bug in the MCA bus matching algorithm in that it promotes from
    behavior not desirable, so it keeps using the old algorithm.
      [CRYPTO] api: Do not remove users unless new algorithm matches
    Register aes-s390 algorithms with the actual supported max keylen size
    [    6.052000] padlock: Using VIA PadLock ACE for AES algorithm.
    [    6.052000] padlock: Using VIA PadLock ACE for SHA1/SHA256 algorithms.
    synchronous software crypto algorithm and converts it to an asynchronous
    [CRYPTO] api: Do not remove users unless new algorithm matches
    As it is whenever a new algorithm with the same name is registered
    users of the old algorithm will be removed so that they can take
    advantage of the new algorithm.  This presents a problem when the
    new algorithm is not equivalent to the old algorithm.  In particular,
    the new algorithm might only function on top of the existing one.
    new algorithm.
      used by the wear-levelling algorithm in the UBI layer. The algorithm
    benefit of caching subtree roots), we remove most of the algorithms and
    [TCP] YeAH-TCP: algorithm implementation
    algorithm, which uses a mixed loss/delay approach to compute the
       segment between SND.UNA and RecoveryPoint in algorithm step 3.
       algorithm [RFC3517]"
    The basic version of the FRTO algorithm can still be used also
        "If the sender implements some loss recovery algorithm other
         than Reno or NewReno [FHG04], the F-RTO algorithm SHOULD
    FRTO algorithm and implementation is described in greater detail.
    [TCP] FRTO: Separated response from FRTO detection algorithm
    FRTO spurious RTO detection algorithm (RFC4138) does not include response
    to a detected spurious RTO but can use different response algorithms.
    Correct mis-spellings of "algorithm", "appear", "consistent" and
    Instead of using a somewhat algorithmic approach of initializing the
    This patch adds the developer of Camellia cipher algorithm.
    [IPSEC]: added the entry of Camellia cipher algorithm to ealg_list[]
    This patch adds the entry of Camellia cipher algorithm to ealg_list[].
    cipher algorithm.
    [CRYPTO] camellia: added the code of Camellia cipher algorithm.
    This patch adds the main code of Camellia cipher algorithm.
    algorithm by passing the type and mask through to the backend type
    random numbers by an algorithm similar to the ANSI X9.17 standard.
    Installing an IPsec SA using old algorithm names (.compat) does not work
    if the algorithm is not already loaded. When not using the PF_KEY
    interface, algorithms are not preloaded in xfrm_probe_algs() and
    in the old algorithm.
    BIOS table. It has this parsing algorithm for the EBDA:
    acpi_video_get_next_level was supposed to implement an algorithm to select
    This patch does not alter any algorithm, just the debug message format:
     The algorithm will do nothing if either RTT is initialised to 0 (which is ok) or if
         - the RTT is further needed for the window counter algorithm
    implementation use a different algorithm that works without
       o moved definition of struct i2c_algorithm, making forward
    The allocation algorithm sizes the fdarray in such a way that its memory usage
    increases in easy page-sized chunks. The overall algorithm expands the allowed
    This patch contains several fixes for the autosearch algorithm and other small ones.
       I've optimized is making the scan faster, not algorithmically
    The algorithm used has been validated on a 16-bit scale for all possible
    [CRYPTO] xcbc: New algorithm
    XCBC is an algorithm that forms a MAC algorithm out of a cipher algorithm.
    For example, AES-XCBC-MAC is a MAC algorithm based on the AES cipher
    algorithm.
            - known OID values for algorithms added.
    This replaces the linear search algorithm for reverse lookup with
    This patch does not change the algorithm as such.
    zero in some future gact_prob algorithm?
    Committer note: Simplified the patch a bit, original algorithm kept.
    Add a new dynamic itr algorithm, with 2 modes, and make it the default
    however, and for this reason an adaptive interrupt moderation algorithm
    The algorithm classifies the incoming traffic every interval into
    grid computing, the algorithm can reduce latency even more when
    abstraction to simplify and speed up the sort algorithm.  I think
    between 100 and 200 entries.  If we hit that then I'll change the algorithm to
    Since cryptomgr is the only way to construct algorithm instances
    This is fast, simple, and efficient pseudo number generator algorithm.  We
    It is a non-standard heap-sort algorithm implementation because the index
    standard algorithm.
    a timer which uses a mark-and-sweep algorithm every 6 minutes.  This reduces
    remarkably efficient for a brute force algorithm.  Given that a typical
    code that today makes this tradeoff just does a rather simple algorithm;
      [SCTP]: Enable Nagle algorithm by default.
    [SCTP]: Enable Nagle algorithm by default.
      i2c: Constify i2c_algorithm declarations, part 2
      i2c: Constify i2c_algorithm declarations, part 1
      i2c: Let drivers constify i2c_algorithm data
    i2c: Constify i2c_algorithm declarations, part 2
    i2c: Constify i2c_algorithm declarations, part 2
    Make struct i2c_algorithm declarations const in all i2c bus drivers
    i2c: Constify i2c_algorithm declarations, part 1
    i2c: Constify i2c_algorithm declarations, part 1
    Make struct i2c_algorithm declarations const in all i2c algorithm
    i2c: Let drivers constify i2c_algorithm data
    i2c: Let drivers constify i2c_algorithm data
    Let drivers constify I2C algorithm method operations tables,
    used by the algorithm code (the code has always been ifdef'd out.)
    hardware-dependent SMBus implementation and not a reusable algorithm.
    V4L/DVB (4477): Improve hardware algorithm by setting the appropriate registers
    Hardware algorithm needs to be configured to:
    This ports the algorithm from x86-64 (with improvements) to i386.
    For NUMA optimization and some other algorithms it is useful to have a fast
    The grow algorithm is simple, we grow if:
    IPsec encryption/authentication algorithm.
    [XFRM]: Restrict authentication algorithm only when inbound transformation protocol is IPsec.
    which is set if and only if an algorithm needs a fallback of the same
    existing simple digest algorithms may still be used to refer to their
    standard digest algorithms like any other.
    applicable.  Similar to the HMAC conversion, existing algorithm names
    [IPSEC]: Add compatibility algorithm name support
    This patch adds a compatibility name field for each IPsec algorithm.  This
    is needed when parameterised algorithms are used.  For example, "md5" will
    This patch adds block cipher algorithms for S390.  Once all users of the
    This patch adds block cipher algorithms for cbc(aes) and ecb(aes) for
    This patch adds two block cipher algorithms, CBC and ECB.  These
    algorithms.  They invoke the single-block cipher through the new
    algorithms which operate on a single block at a time, block ciphers
    algorithm rather than the cipher mid-layer.  This is needed for drivers
    algorithms as it reduces the total number of indirect calls by one.
    In future the existing cipher algorithm will be converted to only have
    crypto algorithm types, beginning with block ciphers.
    objects for crypto algorithms of the same type, in particular, there will
    be a different crypto_type objects for asynchronous algorithms.
    Now that we have the type/mask fields when looking up algorithms, it
    is easy to request for an algorithm of the precise type that the user
    Accelerated versions of crypto algorithms must carry a distinct driver name
    only look up algorithms that are synchronous.
    the bounds specified by the algorithm.
    to autoload all configured padlock algorithms.
    [CRYPTO] padlock: Driver for SHA1 / SHA256 algorithms
    Support for SHA1 / SHA256 algorithms in VIA C7 processors.
    padlock.ko with all supported algorithms, instead we'll
    Spawns lock a specific crypto algorithm in place.  They can then be used
    with crypto_spawn_tfm to allocate a tfm for that algorithm.  When the base
    algorithm of a spawn is deregistered, all its spawns will be automatically
    [CRYPTO] api: Allow algorithm lookup by type
    This patch also adds the infrastructure to pick an algorithm based on
    algorithm "aes", instead of any algorithm registered under the name
    The cryptomgr module is a simple manager of crypto algorithm instances.
    It ensures that parameterised algorithms of the type tmpl(alg) (e.g.,
    This patch adds a notifier chain for algorithm/template registration events.
    This will be used to register compound algorithms such as cbc(aes).  In
    low-level part which is used by cryptographic entities such as algorithms.
    algorithms are built as modules.
    However, with parameterised crypto algorithms a crypto_alg object may need
    modules rather than the algorithms.  Therefore it makes sense to call
    This is needed because we need to have real algorithm reference counters
    for parameterised algorithms as they can be unregistered from below by
    when their parameter algorithms are themselves unregistered.
    Secure Digital cards use a different algorithm to calculate the timeout
      o aic94xx: fix routing algorithms
       evade from this problem, but "block allocation" algorithm is tied to
    use smarter state management algorithms inside of
    But on some systems and some workloads, this algorithm
    the buddy allocator algorithm. Also anyone using mem=XXX on boot line and
    The hashlimit table name and the textsearch algorithm need to be
      [PATCH] i2c: Handle i2c_add_adapter failure in i2c algorithm drivers
    [PATCH] i2c: Handle i2c_add_adapter failure in i2c algorithm drivers
    It is possible for i2c_add_adapter() to fail.  Several I2C algorithm
    [01/07] i2c: add intelfb bit algorithm id
    Adds the intelfb bit algorithm id to i2c-id.h.
    the development of new NUMA balancing algorithms that may be able to improve
    technique that often cannot be replaced with lockless algorithms.  As we can
    and 1:100.  Lockless is hard, and the complexity of lockless algorithms often
    of lockless algorithms.  Furthermore, there are cases (like shared hardware,
    death. This will be re-enabled once some issues in the algorithm used have
      [CRYPTO] tcrypt: Speed benchmark support for digest algorithms
      [CRYPTO] api: Allow replacement when registering new algorithms
      [CRYPTO] all: Pass tfm instead of ctx to algorithms
    [CRYPTO] tcrypt: Speed benchmark support for digest algorithms
    This patch adds speed tests (benchmarks) for digest algorithms.
    algorithms use the same input buffer.
    [CRYPTO] api: Allow replacement when registering new algorithms
    We already allow asynchronous removal of existing algorithm modules.  By
    allowing the replacement of existing algorithms, we can replace algorithms
    instantiated algorithms.  So let's stop lying to the compiler and get
    Fix a few omissions in passing TFM instead of CTX to algorithms.
    [CRYPTO] all: Pass tfm instead of ctx to algorithms
    Up until now algorithms have been happy to get a context pointer since
    However, once we have parameterised algorithms, such information will
    be specific to each tfm.  So the algorithm API needs to be changed to
    Various digest algorithms operate one block at a time and therefore
    publication removal algorithm and to simplify name table sanity checking
    The XTEA algorithm is implemented inline since it's simple enough to do so,
    V4L/DVB (4161): Utilize the device specific algorithm callbacks
    V4L/DVB (4160): Use device specific algorithms
    V4L/DVB (4159): Implement tuning algorithm as a module parameter
    the enhancement of TCP Reno/Sack congestion control algorithm by using
     TCP Low Priority is a distributed algorithm whose goal is to utilize only
    As of 2.6.13, Linux supports pluggable congestion control algorithms.
    Forthcoming AMD products will use a different algorithm for transitioning
    placement algorithms.
    This simplifies the locking algorithm in nand_get/release_chip().
    algorithm used is to ensure that the entire path to the file being
    inode, so the wrong hash algorithm was being used.  But only for
    priv->last_noise is not used with the exponential averaging algorithm
    This patch is an enhancement of OVERCOMMIT_GUESS algorithm in
    When the OVERCOMMIT_GUESS algorithm calculates the number of free pages,
    the algorithm subtracts the number of reserved pages from the result
    This patch is an enhancement of OVERCOMMIT_GUESS algorithm in
    When the OVERCOMMIT_GUESS algorithm calculates the number of free pages,
    the algorithm subtracts the number of reserved pages from the result
    These patches are an enhancement of OVERCOMMIT_GUESS algorithm in
      When the OVERCOMMET_GUESS algorithm calculates number of free pages,
      V4L/DVB (3598): Add bit algorithm adapter for the Conexant CX2341X boards.
    The "rounded up to nearest power of 2 in size" algorithm in
    V4L/DVB (3598): Add bit algorithm adapter for the Conexant CX2341X boards.
             * algorithm would be a simple look for multiple zeros in the
    they'll add random entries to make their own broken algorithms do the
    two pass algorithm. First pass scans and records the start of the last
    [IPV6]: ADDRCONF: Use our standard algorithm for randomized ifid.
    RFC 3041 describes an algorithm to generate random interface
    algorithm than one described in RFC 3041.
    So, let's use our standard pseudo random algorithm to simplify
      [PATCH] ipw2200: Enables the "slow diversity" algorithm
    The whole algorithm was wrong.  What we need to do is:
    [PATCH] ipw2200: Enables the "slow diversity" algorithm
    algorithm causing them to attach to the wrong bus, thus triggering
    Change the find_next_best_node algorithm to correctly skip
    Clean up cache_estimate() in mm/slab.c and improves the algorithm from O(n) to
    [PATCH] ipw2200: Add LEAP authentication algorithm support
    [PATCH] ipw2100: Add LEAP authentication algorithm support
    LRO algorithm was described in an OLS 2005 presentation, located at
    functions that were calles with algorithm block size (8 bytes for DES).
    They already do this in hardware and the Linux algorithm
    for the same algorithm, we no longer have to play tricks with Kconfig
    [CRYPTO] Allow multiple implementations of the same algorithm
    for the same algorithm registered in the system.
    for each algorithm that it supports.  While at the same time the
    user may load software implementations of those same algorithms.
    by name, or choose any implementation for a given algorithm with
    crypto algorithm wasn't assigned. This is also fixed.
    Add support for the hardware accelerated AES crypto algorithm.
    Add support for the hardware accelerated sha256 crypto algorithm.
    balancing algorithm would require that if we're scanning 100 pages of
    [PATCH] FRV: Clean up bootmem allocator's page freeing algorithm
    Replace cube root algorithim with a faster version using Newton-Raphson.
       what I hope is a correct algorithm..."
    algorithm. For advanced congestion control there is little
    algorithm.
    Simplifies code a lot by separating the red algorithm and the
    the whole qdisc first. The new algorithm checks each VQ against
    Simplifies code a lot by separating the red algorithm and the
    Extracts the RED algorithm from sch_red.c and puts it into include/net/red.h
    algorith registration.  We also ensure that the block size is bounded
    [PATCH] i2c: Drop unused per-i2c-algorithm adapter max
    There are no more per-i2c-algorithm adapter max. Last time there were
    [MCAST] IPv6: Fix algorithm to compute Querier's Query Interval
    [NET]: Use non-recursive algorithm in skb_copy_datagram_iovec()
    Patch from Joel Sing to fix the default congestion control algorithm
    [PATCH] ieee80211 quality scaling algorithm extension handler
    Incorporated Bill Moss' quality scaling algorithm into default wireless
    [I2C] Add a functionality method, and remove algorithm ids
    [PATCH] lib/crc16: added crc16 algorithm.
    [PATCH] kallsyms: change compression algorithm
    This patch changes the way the compression algorithm works.  The base
    algorithm is similiar to the previous but we force the compressed token
    Delete an outdated comment about i2c_algorithm.id being computed
    [PATCH] I2C: Kill i2c_algorithm.id (7/7)
    [PATCH] I2C: Kill i2c_algorithm.id (6/7)
    [PATCH] I2C: Kill i2c_algorithm.id (5/7)
    Merge the algorithm id part (16 upper bits) of the i2c adapters ids
    [PATCH] I2C: Kill i2c_algorithm.id (4/7)
    There are no more users of i2c_algorithm.id, so we can finally drop
    [PATCH] I2C: Kill i2c_algorithm.id (3/7)
    Don't rely on i2c_algorithm.id to alter the i2c adapter's id, use the
    I2C_ALGO_* value directly instead, because i2c_algorithm will soon
    [PATCH] I2C: Kill i2c_algorithm.id (2/7)
    Use the adapter id rather than the algorithm id to detect the i2c-isa
    algorithm ids will soon be gone anyway.
    [PATCH] I2C: Kill i2c_algorithm.name (1/7)
    The name member of the i2c_algorithm is never used, although all
    In terms of algorithmic complexity, the new code is way better. If
    The function calc_nr uses an iterative algorithm to calculate the number of
    algorithm for the new textsearch infrastructure.
    So, the same algorithm used when SMP is enabled should be used when
    Provides a nice performance improvement. The new algorithm incidentally
    This data will be useful for making future improvements in the algorithms.
    Fix the p-persistence CSMA algorithm which in simplex mode was starting
    1. Fix algorithm for finding the best power of 2 size with mtrr_add().
    This patch adds hooks for cipher algorithms to implement multi-block
    underlying algorithm that performs the multi-block operations.
    for all existing algorithm implementations.  I've measured the gain to be
    Add support for alternate slave selection algorithms to bonding
    [IPV4]: Move FIB lookup algorithm choice under IP_ADVANCED_ROUTING
    FIB lookup algorithm to use.  So give them the safe default of
         keyring search algorithm to be simplified greatly since no locks need be
    The algorithm differs between strict/non-strict mode specyfing
    The runtime performance of the algorithm should be around O(n),
    [LIB]: Knuth-Morris-Pratt textsearch algorithm
    Implements a linear-time string-matching algorithm due to Knuth,
    Morris, and Pratt [1]. Their algorithm avoids the explicit
    Individual search algorithms are implemented in modules
    This patch implements Tom Kelly's Scalable TCP congestion control algorithm
    The algorithm has some nice scaling properties, and has been used a fair bit
    H-TCP is a congestion control algorithm developed at the Hamilton Institute, by
    Douglas Leith and Robert Shorten. It is extending the standard Reno algorithm
    The following patch implements the H-TCP algorithm in it's basic form.
    [TCP]: Report congestion control algorithm in tcp_diag.
    [TCP]: Add pluggable congestion control algorithm infrastructure.
    Allow TCP to have multiple pluggable congestion control algorithms.
    or modules.  The legacy "new RENO" algorithm is used as a starting
    Other algorithms can supply template keys through the same interface if needed.
    of auto fan clock divider based on Jean Delvare's algorithm, and
    [IPV4]: Add LC-Trie FIB lookup algorithm.
    and rr multipath algorithms just like the random
    multipath algorithm does.
    engineering of the decompressor algorithms used in the pwc driver.
    [PATCH] x86_64: Update TSC sync algorithm
    The new TSC sync algorithm recently submitted did not work too well.
    Detection algorithm is abbreviated as RED instead of GRED.
    Replace old naive extract-8-lsb-bits algorithm with a better
    algorithm xor'ing 3 or 4 bit fields at the size of the hashtable
    idea for this new algorithm.
    One drawback: the new TSC sync algorithm is less accurate than before.  The
    One drawback: the new TSC sync algorithm is less accurate than before.  The
